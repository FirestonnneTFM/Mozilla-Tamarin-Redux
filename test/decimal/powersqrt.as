use decimal;
var SECTION = "Decimal";
var VERSION = "ES4";
var TITLE = "powersqrt.decTest";
var BUGNUMBER = "";
startTest();
{
//----------------------------------------------------------------------
// powersqrt.dectest -- decimal square root, using power              --
// copyright (c) ibm corporation, 2004, 2007.  all rights reserved.   --
//----------------------------------------------------------------------
// please see the document "general decimal arithmetic testcases"     --
// at http://www2.hursley.ibm.com/decimal for the description of      --
// these testcases.                                                   --
//                                                                    --
// these testcases are experimental ('beta' versions), and they       --
// may contain errors.  they are offered on an as-is basis.  in       --
// particular, achieving the same results as the tests here is not    --
// a guarantee that an implementation complies with any standard      --
// or specification.  the tests are not exhaustive.                   --
//                                                                    --
// please send comments, suggestions, and corrections to the author:  --
//   mike cowlishaw, ibm fellow                                       --
//   ibm uk, po box 31, birmingham road, warwick cv34 5jl, uk         --
//   mfc@uk.ibm.com                                                   --
//----------------------------------------------------------------------
// version: 2.55
// these testcases are taken from squareroot.dectest but are
// evaluated using the power operator.  the differences in results
// (153 out of 2856) fall into the following categories:
//
//    x    ** 0.5 (x>0) has no preferred exponent, and is inexact
//                (and hence full precision); almost all differences are
//                in this category
//    0.00 ** 0.5 becomes 0 (not 0.0), etc.
//   -0    ** 0.5 becomes 0 (never -0)
//    some exact subnormals become inexact and hence underflows
use precision 9;
use rounding HALF_EVEN;
// basics
AddTestCase('pwsx001:p9 r:HALF_EVEN (0 + decimal.pow(1,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1,0.5));
AddTestCase('pwsx002:p9 r:HALF_EVEN (0 + decimal.pow(-1,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1,0.5));
AddTestCase('pwsx003:p9 r:HALF_EVEN (0 + decimal.pow(1.00,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1.00,0.5));
AddTestCase('pwsx004:p9 r:HALF_EVEN (0 + decimal.pow(-1.00,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.00,0.5));
AddTestCase('pwsx005:p9 r:HALF_EVEN (0 + decimal.pow(0,0.5))', 0, 0 + decimal.pow(0,0.5));
AddTestCase('pwsx006:p9 r:HALF_EVEN (0 + decimal.pow(00.0,0.5))', 0, 0 + decimal.pow(00.0,0.5));
AddTestCase('pwsx007:p9 r:HALF_EVEN (0 + decimal.pow(0.00,0.5))', 0, 0 + decimal.pow(0.00,0.5));
AddTestCase('pwsx008:p9 r:HALF_EVEN (0 + decimal.pow(00.00,0.5))', 0, 0 + decimal.pow(00.00,0.5));
AddTestCase('pwsx009:p9 r:HALF_EVEN (0 + decimal.pow(00.000,0.5))', 0, 0 + decimal.pow(00.000,0.5));
AddTestCase('pwsx010:p9 r:HALF_EVEN (0 + decimal.pow(00.0000,0.5))', 0, 0 + decimal.pow(00.0000,0.5));
AddTestCase('pwsx011:p9 r:HALF_EVEN (0 + decimal.pow(00,0.5))', 0, 0 + decimal.pow(00,0.5));
AddTestCase('pwsx012:p9 r:HALF_EVEN (0 + decimal.pow(-2,0.5)) invalid_operation', NaN, 0 + decimal.pow(-2,0.5));
AddTestCase('pwsx013:p9 r:HALF_EVEN (0 + decimal.pow(2,0.5)) inexact rounded', 1.41421356, 0 + decimal.pow(2,0.5));
AddTestCase('pwsx014:p9 r:HALF_EVEN (0 + decimal.pow(-2.00,0.5)) invalid_operation', NaN, 0 + decimal.pow(-2.00,0.5));
AddTestCase('pwsx015:p9 r:HALF_EVEN (0 + decimal.pow(2.00,0.5)) inexact rounded', 1.41421356, 0 + decimal.pow(2.00,0.5));
AddTestCase('pwsx016:p9 r:HALF_EVEN (0 + decimal.pow(-0,0.5))', 0, 0 + decimal.pow(-0,0.5));
AddTestCase('pwsx017:p9 r:HALF_EVEN (0 + decimal.pow(-0.0,0.5))', 0, 0 + decimal.pow(-0.0,0.5));
AddTestCase('pwsx018:p9 r:HALF_EVEN (0 + decimal.pow(-00.00,0.5))', 0, 0 + decimal.pow(-00.00,0.5));
AddTestCase('pwsx019:p9 r:HALF_EVEN (0 + decimal.pow(-00.000,0.5))', 0, 0 + decimal.pow(-00.000,0.5));
AddTestCase('pwsx020:p9 r:HALF_EVEN (0 + decimal.pow(-0.0000,0.5))', 0, 0 + decimal.pow(-0.0000,0.5));
AddTestCase('pwsx021:p9 r:HALF_EVEN (0 + decimal.pow(-0e+9,0.5))', 0, 0 + decimal.pow(-0e+9,0.5));
AddTestCase('pwsx022:p9 r:HALF_EVEN (0 + decimal.pow(-0e+10,0.5))', 0, 0 + decimal.pow(-0e+10,0.5));
AddTestCase('pwsx023:p9 r:HALF_EVEN (0 + decimal.pow(-0e+11,0.5))', 0, 0 + decimal.pow(-0e+11,0.5));
AddTestCase('pwsx024:p9 r:HALF_EVEN (0 + decimal.pow(-0e+12,0.5))', 0, 0 + decimal.pow(-0e+12,0.5));
AddTestCase('pwsx025:p9 r:HALF_EVEN (0 + decimal.pow(-00,0.5))', 0, 0 + decimal.pow(-00,0.5));
AddTestCase('pwsx026:p9 r:HALF_EVEN (0 + decimal.pow(0e+5,0.5))', 0, 0 + decimal.pow(0e+5,0.5));
AddTestCase('pwsx027:p9 r:HALF_EVEN (0 + decimal.pow(4.0,0.5)) inexact rounded', 2.00000000, 0 + decimal.pow(4.0,0.5));
AddTestCase('pwsx028:p9 r:HALF_EVEN (0 + decimal.pow(4.00,0.5)) inexact rounded', 2.00000000, 0 + decimal.pow(4.00,0.5));
AddTestCase('pwsx030:p9 r:HALF_EVEN (0 + decimal.pow(+0.1,0.5)) inexact rounded', 0.316227766, 0 + decimal.pow(+0.1,0.5));
AddTestCase('pwsx031:p9 r:HALF_EVEN (0 + decimal.pow(-0.1,0.5)) invalid_operation', NaN, 0 + decimal.pow(-0.1,0.5));
AddTestCase('pwsx032:p9 r:HALF_EVEN (0 + decimal.pow(+0.01,0.5)) inexact rounded', 0.100000000, 0 + decimal.pow(+0.01,0.5));
AddTestCase('pwsx033:p9 r:HALF_EVEN (0 + decimal.pow(-0.01,0.5)) invalid_operation', NaN, 0 + decimal.pow(-0.01,0.5));
AddTestCase('pwsx034:p9 r:HALF_EVEN (0 + decimal.pow(+0.001,0.5)) inexact rounded', 0.0316227766, 0 + decimal.pow(+0.001,0.5));
AddTestCase('pwsx035:p9 r:HALF_EVEN (0 + decimal.pow(-0.001,0.5)) invalid_operation', NaN, 0 + decimal.pow(-0.001,0.5));
AddTestCase('pwsx036:p9 r:HALF_EVEN (0 + decimal.pow(+0.000001,0.5)) inexact rounded', 0.00100000000, 0 + decimal.pow(+0.000001,0.5));
AddTestCase('pwsx037:p9 r:HALF_EVEN (0 + decimal.pow(-0.000001,0.5)) invalid_operation', NaN, 0 + decimal.pow(-0.000001,0.5));
AddTestCase('pwsx038:p9 r:HALF_EVEN (0 + decimal.pow(+0.000000000001,0.5)) inexact rounded', 0.00000100000000, 0 + decimal.pow(+0.000000000001,0.5));
AddTestCase('pwsx039:p9 r:HALF_EVEN (0 + decimal.pow(-0.000000000001,0.5)) invalid_operation', NaN, 0 + decimal.pow(-0.000000000001,0.5));
AddTestCase('pwsx041:p9 r:HALF_EVEN (0 + decimal.pow(1.1,0.5)) inexact rounded', 1.04880885, 0 + decimal.pow(1.1,0.5));
AddTestCase('pwsx042:p9 r:HALF_EVEN (0 + decimal.pow(1.10,0.5)) inexact rounded', 1.04880885, 0 + decimal.pow(1.10,0.5));
AddTestCase('pwsx043:p9 r:HALF_EVEN (0 + decimal.pow(1.100,0.5)) inexact rounded', 1.04880885, 0 + decimal.pow(1.100,0.5));
AddTestCase('pwsx044:p9 r:HALF_EVEN (0 + decimal.pow(1.110,0.5)) inexact rounded', 1.05356538, 0 + decimal.pow(1.110,0.5));
AddTestCase('pwsx045:p9 r:HALF_EVEN (0 + decimal.pow(-1.1,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.1,0.5));
AddTestCase('pwsx046:p9 r:HALF_EVEN (0 + decimal.pow(-1.10,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.10,0.5));
AddTestCase('pwsx047:p9 r:HALF_EVEN (0 + decimal.pow(-1.100,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.100,0.5));
AddTestCase('pwsx048:p9 r:HALF_EVEN (0 + decimal.pow(-1.110,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.110,0.5));
AddTestCase('pwsx049:p9 r:HALF_EVEN (0 + decimal.pow(9.9,0.5)) inexact rounded', 3.14642654, 0 + decimal.pow(9.9,0.5));
AddTestCase('pwsx050:p9 r:HALF_EVEN (0 + decimal.pow(9.90,0.5)) inexact rounded', 3.14642654, 0 + decimal.pow(9.90,0.5));
AddTestCase('pwsx051:p9 r:HALF_EVEN (0 + decimal.pow(9.900,0.5)) inexact rounded', 3.14642654, 0 + decimal.pow(9.900,0.5));
AddTestCase('pwsx052:p9 r:HALF_EVEN (0 + decimal.pow(9.990,0.5)) inexact rounded', 3.16069613, 0 + decimal.pow(9.990,0.5));
AddTestCase('pwsx053:p9 r:HALF_EVEN (0 + decimal.pow(-9.9,0.5)) invalid_operation', NaN, 0 + decimal.pow(-9.9,0.5));
AddTestCase('pwsx054:p9 r:HALF_EVEN (0 + decimal.pow(-9.90,0.5)) invalid_operation', NaN, 0 + decimal.pow(-9.90,0.5));
AddTestCase('pwsx055:p9 r:HALF_EVEN (0 + decimal.pow(-9.900,0.5)) invalid_operation', NaN, 0 + decimal.pow(-9.900,0.5));
AddTestCase('pwsx056:p9 r:HALF_EVEN (0 + decimal.pow(-9.990,0.5)) invalid_operation', NaN, 0 + decimal.pow(-9.990,0.5));
AddTestCase('pwsx060:p9 r:HALF_EVEN (0 + decimal.pow(1,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1,0.5));
AddTestCase('pwsx061:p9 r:HALF_EVEN (0 + decimal.pow(1.0,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1.0,0.5));
AddTestCase('pwsx062:p9 r:HALF_EVEN (0 + decimal.pow(1.00,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1.00,0.5));
AddTestCase('pwsx063:p9 r:HALF_EVEN (0 + decimal.pow(10.0,0.5)) inexact rounded', 3.16227766, 0 + decimal.pow(10.0,0.5));
AddTestCase('pwsx064:p9 r:HALF_EVEN (0 + decimal.pow(10.0,0.5)) inexact rounded', 3.16227766, 0 + decimal.pow(10.0,0.5));
AddTestCase('pwsx065:p9 r:HALF_EVEN (0 + decimal.pow(10.0,0.5)) inexact rounded', 3.16227766, 0 + decimal.pow(10.0,0.5));
AddTestCase('pwsx066:p9 r:HALF_EVEN (0 + decimal.pow(10.00,0.5)) inexact rounded', 3.16227766, 0 + decimal.pow(10.00,0.5));
AddTestCase('pwsx067:p9 r:HALF_EVEN (0 + decimal.pow(100,0.5)) inexact rounded', 10.0000000, 0 + decimal.pow(100,0.5));
AddTestCase('pwsx068:p9 r:HALF_EVEN (0 + decimal.pow(100.0,0.5)) inexact rounded', 10.0000000, 0 + decimal.pow(100.0,0.5));
AddTestCase('pwsx069:p9 r:HALF_EVEN (0 + decimal.pow(100.00,0.5)) inexact rounded', 10.0000000, 0 + decimal.pow(100.00,0.5));
AddTestCase('pwsx070:p9 r:HALF_EVEN (0 + decimal.pow(1.1000e+3,0.5)) inexact rounded', 33.1662479, 0 + decimal.pow(1.1000e+3,0.5));
AddTestCase('pwsx071:p9 r:HALF_EVEN (0 + decimal.pow(1.10000e+3,0.5)) inexact rounded', 33.1662479, 0 + decimal.pow(1.10000e+3,0.5));
AddTestCase('pwsx072:p9 r:HALF_EVEN (0 + decimal.pow(-10.0,0.5)) invalid_operation', NaN, 0 + decimal.pow(-10.0,0.5));
AddTestCase('pwsx073:p9 r:HALF_EVEN (0 + decimal.pow(-10.00,0.5)) invalid_operation', NaN, 0 + decimal.pow(-10.00,0.5));
AddTestCase('pwsx074:p9 r:HALF_EVEN (0 + decimal.pow(-100.0,0.5)) invalid_operation', NaN, 0 + decimal.pow(-100.0,0.5));
AddTestCase('pwsx075:p9 r:HALF_EVEN (0 + decimal.pow(-100.00,0.5)) invalid_operation', NaN, 0 + decimal.pow(-100.00,0.5));
AddTestCase('pwsx076:p9 r:HALF_EVEN (0 + decimal.pow(-1.1000e+3,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.1000e+3,0.5));
AddTestCase('pwsx077:p9 r:HALF_EVEN (0 + decimal.pow(-1.10000e+3,0.5)) invalid_operation', NaN, 0 + decimal.pow(-1.10000e+3,0.5));
// famous squares
AddTestCase('pwsx080:p9 r:HALF_EVEN (0 + decimal.pow(1,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1,0.5));
AddTestCase('pwsx081:p9 r:HALF_EVEN (0 + decimal.pow(4,0.5)) inexact rounded', 2.00000000, 0 + decimal.pow(4,0.5));
AddTestCase('pwsx082:p9 r:HALF_EVEN (0 + decimal.pow(9,0.5)) inexact rounded', 3.00000000, 0 + decimal.pow(9,0.5));
AddTestCase('pwsx083:p9 r:HALF_EVEN (0 + decimal.pow(16,0.5)) inexact rounded', 4.00000000, 0 + decimal.pow(16,0.5));
AddTestCase('pwsx084:p9 r:HALF_EVEN (0 + decimal.pow(25,0.5)) inexact rounded', 5.00000000, 0 + decimal.pow(25,0.5));
AddTestCase('pwsx085:p9 r:HALF_EVEN (0 + decimal.pow(36,0.5)) inexact rounded', 6.00000000, 0 + decimal.pow(36,0.5));
AddTestCase('pwsx086:p9 r:HALF_EVEN (0 + decimal.pow(49,0.5)) inexact rounded', 7.00000000, 0 + decimal.pow(49,0.5));
AddTestCase('pwsx087:p9 r:HALF_EVEN (0 + decimal.pow(64,0.5)) inexact rounded', 8.00000000, 0 + decimal.pow(64,0.5));
AddTestCase('pwsx088:p9 r:HALF_EVEN (0 + decimal.pow(81,0.5)) inexact rounded', 9.00000000, 0 + decimal.pow(81,0.5));
AddTestCase('pwsx089:p9 r:HALF_EVEN (0 + decimal.pow(100,0.5)) inexact rounded', 10.0000000, 0 + decimal.pow(100,0.5));
AddTestCase('pwsx090:p9 r:HALF_EVEN (0 + decimal.pow(121,0.5)) inexact rounded', 11.0000000, 0 + decimal.pow(121,0.5));
AddTestCase('pwsx091:p9 r:HALF_EVEN (0 + decimal.pow(144,0.5)) inexact rounded', 12.0000000, 0 + decimal.pow(144,0.5));
AddTestCase('pwsx092:p9 r:HALF_EVEN (0 + decimal.pow(169,0.5)) inexact rounded', 13.0000000, 0 + decimal.pow(169,0.5));
AddTestCase('pwsx093:p9 r:HALF_EVEN (0 + decimal.pow(256,0.5)) inexact rounded', 16.0000000, 0 + decimal.pow(256,0.5));
AddTestCase('pwsx094:p9 r:HALF_EVEN (0 + decimal.pow(1024,0.5)) inexact rounded', 32.0000000, 0 + decimal.pow(1024,0.5));
AddTestCase('pwsx095:p9 r:HALF_EVEN (0 + decimal.pow(4096,0.5)) inexact rounded', 64.0000000, 0 + decimal.pow(4096,0.5));
AddTestCase('pwsx100:p9 r:HALF_EVEN (0 + decimal.pow(0.01,0.5)) inexact rounded', 0.100000000, 0 + decimal.pow(0.01,0.5));
AddTestCase('pwsx101:p9 r:HALF_EVEN (0 + decimal.pow(0.04,0.5)) inexact rounded', 0.200000000, 0 + decimal.pow(0.04,0.5));
AddTestCase('pwsx102:p9 r:HALF_EVEN (0 + decimal.pow(0.09,0.5)) inexact rounded', 0.300000000, 0 + decimal.pow(0.09,0.5));
AddTestCase('pwsx103:p9 r:HALF_EVEN (0 + decimal.pow(0.16,0.5)) inexact rounded', 0.400000000, 0 + decimal.pow(0.16,0.5));
AddTestCase('pwsx104:p9 r:HALF_EVEN (0 + decimal.pow(0.25,0.5)) inexact rounded', 0.500000000, 0 + decimal.pow(0.25,0.5));
AddTestCase('pwsx105:p9 r:HALF_EVEN (0 + decimal.pow(0.36,0.5)) inexact rounded', 0.600000000, 0 + decimal.pow(0.36,0.5));
AddTestCase('pwsx106:p9 r:HALF_EVEN (0 + decimal.pow(0.49,0.5)) inexact rounded', 0.700000000, 0 + decimal.pow(0.49,0.5));
AddTestCase('pwsx107:p9 r:HALF_EVEN (0 + decimal.pow(0.64,0.5)) inexact rounded', 0.800000000, 0 + decimal.pow(0.64,0.5));
AddTestCase('pwsx108:p9 r:HALF_EVEN (0 + decimal.pow(0.81,0.5)) inexact rounded', 0.900000000, 0 + decimal.pow(0.81,0.5));
AddTestCase('pwsx109:p9 r:HALF_EVEN (0 + decimal.pow(1.00,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1.00,0.5));
AddTestCase('pwsx110:p9 r:HALF_EVEN (0 + decimal.pow(1.21,0.5)) inexact rounded', 1.10000000, 0 + decimal.pow(1.21,0.5));
AddTestCase('pwsx111:p9 r:HALF_EVEN (0 + decimal.pow(1.44,0.5)) inexact rounded', 1.20000000, 0 + decimal.pow(1.44,0.5));
AddTestCase('pwsx112:p9 r:HALF_EVEN (0 + decimal.pow(1.69,0.5)) inexact rounded', 1.30000000, 0 + decimal.pow(1.69,0.5));
AddTestCase('pwsx113:p9 r:HALF_EVEN (0 + decimal.pow(2.56,0.5)) inexact rounded', 1.60000000, 0 + decimal.pow(2.56,0.5));
AddTestCase('pwsx114:p9 r:HALF_EVEN (0 + decimal.pow(10.24,0.5)) inexact rounded', 3.20000000, 0 + decimal.pow(10.24,0.5));
AddTestCase('pwsx115:p9 r:HALF_EVEN (0 + decimal.pow(40.96,0.5)) inexact rounded', 6.40000000, 0 + decimal.pow(40.96,0.5));
// precision 1 squareroot tests [exhaustive, plus exponent adjusts]
{
	use rounding HALF_EVEN;
	{
		use precision 1;
		AddTestCase('pwsx1201:p1 r:HALF_EVEN (0 + decimal.pow(0.1,0.5)) inexact rounded', 0.3, 0 + decimal.pow(0.1,0.5));
		AddTestCase('pwsx1202:p1 r:HALF_EVEN (0 + decimal.pow(0.01,0.5)) inexact rounded', 0.1, 0 + decimal.pow(0.01,0.5));
		AddTestCase('pwsx1203:p1 r:HALF_EVEN (0 + decimal.pow(1.0e-1,0.5)) inexact rounded', 0.3, 0 + decimal.pow(1.0e-1,0.5));
		AddTestCase('pwsx1204:p1 r:HALF_EVEN (0 + decimal.pow(1.00e-2,0.5)) inexact rounded', 0.1, 0 + decimal.pow(1.00e-2,0.5));
		AddTestCase('pwsx1205:p1 r:HALF_EVEN (0 + decimal.pow(1e-3,0.5)) inexact rounded', 0.03, 0 + decimal.pow(1e-3,0.5));
		AddTestCase('pwsx1206:p1 r:HALF_EVEN (0 + decimal.pow(1e+1,0.5)) inexact rounded', 3, 0 + decimal.pow(1e+1,0.5));
		AddTestCase('pwsx1207:p1 r:HALF_EVEN (0 + decimal.pow(1e+2,0.5)) inexact rounded', 1e+1, 0 + decimal.pow(1e+2,0.5));
		AddTestCase('pwsx1208:p1 r:HALF_EVEN (0 + decimal.pow(1e+3,0.5)) inexact rounded', 3e+1, 0 + decimal.pow(1e+3,0.5));
		AddTestCase('pwsx1209:p1 r:HALF_EVEN (0 + decimal.pow(0.2,0.5)) inexact rounded', 0.4, 0 + decimal.pow(0.2,0.5));
		AddTestCase('pwsx1210:p1 r:HALF_EVEN (0 + decimal.pow(0.02,0.5)) inexact rounded', 0.1, 0 + decimal.pow(0.02,0.5));
		AddTestCase('pwsx1211:p1 r:HALF_EVEN (0 + decimal.pow(2.0e-1,0.5)) inexact rounded', 0.4, 0 + decimal.pow(2.0e-1,0.5));
		AddTestCase('pwsx1212:p1 r:HALF_EVEN (0 + decimal.pow(2.00e-2,0.5)) inexact rounded', 0.1, 0 + decimal.pow(2.00e-2,0.5));
		AddTestCase('pwsx1213:p1 r:HALF_EVEN (0 + decimal.pow(2e-3,0.5)) inexact rounded', 0.04, 0 + decimal.pow(2e-3,0.5));
		AddTestCase('pwsx1214:p1 r:HALF_EVEN (0 + decimal.pow(2e+1,0.5)) inexact rounded', 4, 0 + decimal.pow(2e+1,0.5));
		AddTestCase('pwsx1215:p1 r:HALF_EVEN (0 + decimal.pow(2e+2,0.5)) inexact rounded', 1e+1, 0 + decimal.pow(2e+2,0.5));
		AddTestCase('pwsx1216:p1 r:HALF_EVEN (0 + decimal.pow(2e+3,0.5)) inexact rounded', 4e+1, 0 + decimal.pow(2e+3,0.5));
		AddTestCase('pwsx1217:p1 r:HALF_EVEN (0 + decimal.pow(0.3,0.5)) inexact rounded', 0.5, 0 + decimal.pow(0.3,0.5));
		AddTestCase('pwsx1218:p1 r:HALF_EVEN (0 + decimal.pow(0.03,0.5)) inexact rounded', 0.2, 0 + decimal.pow(0.03,0.5));
		AddTestCase('pwsx1219:p1 r:HALF_EVEN (0 + decimal.pow(3.0e-1,0.5)) inexact rounded', 0.5, 0 + decimal.pow(3.0e-1,0.5));
		AddTestCase('pwsx1220:p1 r:HALF_EVEN (0 + decimal.pow(3.00e-2,0.5)) inexact rounded', 0.2, 0 + decimal.pow(3.00e-2,0.5));
		AddTestCase('pwsx1221:p1 r:HALF_EVEN (0 + decimal.pow(3e-3,0.5)) inexact rounded', 0.05, 0 + decimal.pow(3e-3,0.5));
		AddTestCase('pwsx1222:p1 r:HALF_EVEN (0 + decimal.pow(3e+1,0.5)) inexact rounded', 5, 0 + decimal.pow(3e+1,0.5));
		AddTestCase('pwsx1223:p1 r:HALF_EVEN (0 + decimal.pow(3e+2,0.5)) inexact rounded', 2e+1, 0 + decimal.pow(3e+2,0.5));
		AddTestCase('pwsx1224:p1 r:HALF_EVEN (0 + decimal.pow(3e+3,0.5)) inexact rounded', 5e+1, 0 + decimal.pow(3e+3,0.5));
		AddTestCase('pwsx1225:p1 r:HALF_EVEN (0 + decimal.pow(0.4,0.5)) inexact rounded', 0.6, 0 + decimal.pow(0.4,0.5));
		AddTestCase('pwsx1226:p1 r:HALF_EVEN (0 + decimal.pow(0.04,0.5)) inexact rounded', 0.2, 0 + decimal.pow(0.04,0.5));
		AddTestCase('pwsx1227:p1 r:HALF_EVEN (0 + decimal.pow(4.0e-1,0.5)) inexact rounded', 0.6, 0 + decimal.pow(4.0e-1,0.5));
		AddTestCase('pwsx1228:p1 r:HALF_EVEN (0 + decimal.pow(4.00e-2,0.5)) inexact rounded', 0.2, 0 + decimal.pow(4.00e-2,0.5));
		AddTestCase('pwsx1229:p1 r:HALF_EVEN (0 + decimal.pow(4e-3,0.5)) inexact rounded', 0.06, 0 + decimal.pow(4e-3,0.5));
		AddTestCase('pwsx1230:p1 r:HALF_EVEN (0 + decimal.pow(4e+1,0.5)) inexact rounded', 6, 0 + decimal.pow(4e+1,0.5));
		AddTestCase('pwsx1231:p1 r:HALF_EVEN (0 + decimal.pow(4e+2,0.5)) inexact rounded', 2e+1, 0 + decimal.pow(4e+2,0.5));
		AddTestCase('pwsx1232:p1 r:HALF_EVEN (0 + decimal.pow(4e+3,0.5)) inexact rounded', 6e+1, 0 + decimal.pow(4e+3,0.5));
		AddTestCase('pwsx1233:p1 r:HALF_EVEN (0 + decimal.pow(0.5,0.5)) inexact rounded', 0.7, 0 + decimal.pow(0.5,0.5));
		AddTestCase('pwsx1234:p1 r:HALF_EVEN (0 + decimal.pow(0.05,0.5)) inexact rounded', 0.2, 0 + decimal.pow(0.05,0.5));
		AddTestCase('pwsx1235:p1 r:HALF_EVEN (0 + decimal.pow(5.0e-1,0.5)) inexact rounded', 0.7, 0 + decimal.pow(5.0e-1,0.5));
		AddTestCase('pwsx1236:p1 r:HALF_EVEN (0 + decimal.pow(5.00e-2,0.5)) inexact rounded', 0.2, 0 + decimal.pow(5.00e-2,0.5));
		AddTestCase('pwsx1237:p1 r:HALF_EVEN (0 + decimal.pow(5e-3,0.5)) inexact rounded', 0.07, 0 + decimal.pow(5e-3,0.5));
		AddTestCase('pwsx1238:p1 r:HALF_EVEN (0 + decimal.pow(5e+1,0.5)) inexact rounded', 7, 0 + decimal.pow(5e+1,0.5));
		AddTestCase('pwsx1239:p1 r:HALF_EVEN (0 + decimal.pow(5e+2,0.5)) inexact rounded', 2e+1, 0 + decimal.pow(5e+2,0.5));
		AddTestCase('pwsx1240:p1 r:HALF_EVEN (0 + decimal.pow(5e+3,0.5)) inexact rounded', 7e+1, 0 + decimal.pow(5e+3,0.5));
		AddTestCase('pwsx1241:p1 r:HALF_EVEN (0 + decimal.pow(0.6,0.5)) inexact rounded', 0.8, 0 + decimal.pow(0.6,0.5));
		AddTestCase('pwsx1242:p1 r:HALF_EVEN (0 + decimal.pow(0.06,0.5)) inexact rounded', 0.2, 0 + decimal.pow(0.06,0.5));
		AddTestCase('pwsx1243:p1 r:HALF_EVEN (0 + decimal.pow(6.0e-1,0.5)) inexact rounded', 0.8, 0 + decimal.pow(6.0e-1,0.5));
		AddTestCase('pwsx1244:p1 r:HALF_EVEN (0 + decimal.pow(6.00e-2,0.5)) inexact rounded', 0.2, 0 + decimal.pow(6.00e-2,0.5));
		AddTestCase('pwsx1245:p1 r:HALF_EVEN (0 + decimal.pow(6e-3,0.5)) inexact rounded', 0.08, 0 + decimal.pow(6e-3,0.5));
		AddTestCase('pwsx1246:p1 r:HALF_EVEN (0 + decimal.pow(6e+1,0.5)) inexact rounded', 8, 0 + decimal.pow(6e+1,0.5));
		AddTestCase('pwsx1247:p1 r:HALF_EVEN (0 + decimal.pow(6e+2,0.5)) inexact rounded', 2e+1, 0 + decimal.pow(6e+2,0.5));
		AddTestCase('pwsx1248:p1 r:HALF_EVEN (0 + decimal.pow(6e+3,0.5)) inexact rounded', 8e+1, 0 + decimal.pow(6e+3,0.5));
		AddTestCase('pwsx1249:p1 r:HALF_EVEN (0 + decimal.pow(0.7,0.5)) inexact rounded', 0.8, 0 + decimal.pow(0.7,0.5));
		AddTestCase('pwsx1250:p1 r:HALF_EVEN (0 + decimal.pow(0.07,0.5)) inexact rounded', 0.3, 0 + decimal.pow(0.07,0.5));
		AddTestCase('pwsx1251:p1 r:HALF_EVEN (0 + decimal.pow(7.0e-1,0.5)) inexact rounded', 0.8, 0 + decimal.pow(7.0e-1,0.5));
		AddTestCase('pwsx1252:p1 r:HALF_EVEN (0 + decimal.pow(7.00e-2,0.5)) inexact rounded', 0.3, 0 + decimal.pow(7.00e-2,0.5));
		AddTestCase('pwsx1253:p1 r:HALF_EVEN (0 + decimal.pow(7e-3,0.5)) inexact rounded', 0.08, 0 + decimal.pow(7e-3,0.5));
		AddTestCase('pwsx1254:p1 r:HALF_EVEN (0 + decimal.pow(7e+1,0.5)) inexact rounded', 8, 0 + decimal.pow(7e+1,0.5));
		AddTestCase('pwsx1255:p1 r:HALF_EVEN (0 + decimal.pow(7e+2,0.5)) inexact rounded', 3e+1, 0 + decimal.pow(7e+2,0.5));
		AddTestCase('pwsx1256:p1 r:HALF_EVEN (0 + decimal.pow(7e+3,0.5)) inexact rounded', 8e+1, 0 + decimal.pow(7e+3,0.5));
		AddTestCase('pwsx1257:p1 r:HALF_EVEN (0 + decimal.pow(0.8,0.5)) inexact rounded', 0.9, 0 + decimal.pow(0.8,0.5));
		AddTestCase('pwsx1258:p1 r:HALF_EVEN (0 + decimal.pow(0.08,0.5)) inexact rounded', 0.3, 0 + decimal.pow(0.08,0.5));
		AddTestCase('pwsx1259:p1 r:HALF_EVEN (0 + decimal.pow(8.0e-1,0.5)) inexact rounded', 0.9, 0 + decimal.pow(8.0e-1,0.5));
		AddTestCase('pwsx1260:p1 r:HALF_EVEN (0 + decimal.pow(8.00e-2,0.5)) inexact rounded', 0.3, 0 + decimal.pow(8.00e-2,0.5));
		AddTestCase('pwsx1261:p1 r:HALF_EVEN (0 + decimal.pow(8e-3,0.5)) inexact rounded', 0.09, 0 + decimal.pow(8e-3,0.5));
		AddTestCase('pwsx1262:p1 r:HALF_EVEN (0 + decimal.pow(8e+1,0.5)) inexact rounded', 9, 0 + decimal.pow(8e+1,0.5));
		AddTestCase('pwsx1263:p1 r:HALF_EVEN (0 + decimal.pow(8e+2,0.5)) inexact rounded', 3e+1, 0 + decimal.pow(8e+2,0.5));
		AddTestCase('pwsx1264:p1 r:HALF_EVEN (0 + decimal.pow(8e+3,0.5)) inexact rounded', 9e+1, 0 + decimal.pow(8e+3,0.5));
		AddTestCase('pwsx1265:p1 r:HALF_EVEN (0 + decimal.pow(0.9,0.5)) inexact rounded', 0.9, 0 + decimal.pow(0.9,0.5));
		AddTestCase('pwsx1266:p1 r:HALF_EVEN (0 + decimal.pow(0.09,0.5)) inexact rounded', 0.3, 0 + decimal.pow(0.09,0.5));
		AddTestCase('pwsx1267:p1 r:HALF_EVEN (0 + decimal.pow(9.0e-1,0.5)) inexact rounded', 0.9, 0 + decimal.pow(9.0e-1,0.5));
		AddTestCase('pwsx1268:p1 r:HALF_EVEN (0 + decimal.pow(9.00e-2,0.5)) inexact rounded', 0.3, 0 + decimal.pow(9.00e-2,0.5));
		AddTestCase('pwsx1269:p1 r:HALF_EVEN (0 + decimal.pow(9e-3,0.5)) inexact rounded', 0.09, 0 + decimal.pow(9e-3,0.5));
		AddTestCase('pwsx1270:p1 r:HALF_EVEN (0 + decimal.pow(9e+1,0.5)) inexact rounded', 9, 0 + decimal.pow(9e+1,0.5));
		AddTestCase('pwsx1271:p1 r:HALF_EVEN (0 + decimal.pow(9e+2,0.5)) inexact rounded', 3e+1, 0 + decimal.pow(9e+2,0.5));
		AddTestCase('pwsx1272:p1 r:HALF_EVEN (0 + decimal.pow(9e+3,0.5)) inexact rounded', 9e+1, 0 + decimal.pow(9e+3,0.5));
		// precision 2 squareroot tests [exhaustive, plus exponent adjusts]
		{
			use rounding HALF_EVEN;
			{
				use precision 2;
				AddTestCase('pwsx2201:p2 r:HALF_EVEN (0 + decimal.pow(0.1,0.5)) inexact rounded', 0.32, 0 + decimal.pow(0.1,0.5));
				AddTestCase('pwsx2202:p2 r:HALF_EVEN (0 + decimal.pow(0.01,0.5)) inexact rounded', 0.10, 0 + decimal.pow(0.01,0.5));
				AddTestCase('pwsx2203:p2 r:HALF_EVEN (0 + decimal.pow(1.0e-1,0.5)) inexact rounded', 0.32, 0 + decimal.pow(1.0e-1,0.5));
				AddTestCase('pwsx2204:p2 r:HALF_EVEN (0 + decimal.pow(1.00e-2,0.5)) inexact rounded', 0.10, 0 + decimal.pow(1.00e-2,0.5));
				AddTestCase('pwsx2205:p2 r:HALF_EVEN (0 + decimal.pow(1e-3,0.5)) inexact rounded', 0.032, 0 + decimal.pow(1e-3,0.5));
				AddTestCase('pwsx2206:p2 r:HALF_EVEN (0 + decimal.pow(1e+1,0.5)) inexact rounded', 3.2, 0 + decimal.pow(1e+1,0.5));
				AddTestCase('pwsx2207:p2 r:HALF_EVEN (0 + decimal.pow(1e+2,0.5)) inexact rounded', 10, 0 + decimal.pow(1e+2,0.5));
				AddTestCase('pwsx2208:p2 r:HALF_EVEN (0 + decimal.pow(1e+3,0.5)) inexact rounded', 32, 0 + decimal.pow(1e+3,0.5));
				AddTestCase('pwsx2209:p2 r:HALF_EVEN (0 + decimal.pow(0.2,0.5)) inexact rounded', 0.45, 0 + decimal.pow(0.2,0.5));
				AddTestCase('pwsx2210:p2 r:HALF_EVEN (0 + decimal.pow(0.02,0.5)) inexact rounded', 0.14, 0 + decimal.pow(0.02,0.5));
				AddTestCase('pwsx2211:p2 r:HALF_EVEN (0 + decimal.pow(2.0e-1,0.5)) inexact rounded', 0.45, 0 + decimal.pow(2.0e-1,0.5));
				AddTestCase('pwsx2212:p2 r:HALF_EVEN (0 + decimal.pow(2.00e-2,0.5)) inexact rounded', 0.14, 0 + decimal.pow(2.00e-2,0.5));
				AddTestCase('pwsx2213:p2 r:HALF_EVEN (0 + decimal.pow(2e-3,0.5)) inexact rounded', 0.045, 0 + decimal.pow(2e-3,0.5));
				AddTestCase('pwsx2214:p2 r:HALF_EVEN (0 + decimal.pow(2e+1,0.5)) inexact rounded', 4.5, 0 + decimal.pow(2e+1,0.5));
				AddTestCase('pwsx2215:p2 r:HALF_EVEN (0 + decimal.pow(2e+2,0.5)) inexact rounded', 14, 0 + decimal.pow(2e+2,0.5));
				AddTestCase('pwsx2216:p2 r:HALF_EVEN (0 + decimal.pow(2e+3,0.5)) inexact rounded', 45, 0 + decimal.pow(2e+3,0.5));
				AddTestCase('pwsx2217:p2 r:HALF_EVEN (0 + decimal.pow(0.3,0.5)) inexact rounded', 0.55, 0 + decimal.pow(0.3,0.5));
				AddTestCase('pwsx2218:p2 r:HALF_EVEN (0 + decimal.pow(0.03,0.5)) inexact rounded', 0.17, 0 + decimal.pow(0.03,0.5));
				AddTestCase('pwsx2219:p2 r:HALF_EVEN (0 + decimal.pow(3.0e-1,0.5)) inexact rounded', 0.55, 0 + decimal.pow(3.0e-1,0.5));
				AddTestCase('pwsx2220:p2 r:HALF_EVEN (0 + decimal.pow(3.00e-2,0.5)) inexact rounded', 0.17, 0 + decimal.pow(3.00e-2,0.5));
				AddTestCase('pwsx2221:p2 r:HALF_EVEN (0 + decimal.pow(3e-3,0.5)) inexact rounded', 0.055, 0 + decimal.pow(3e-3,0.5));
				AddTestCase('pwsx2222:p2 r:HALF_EVEN (0 + decimal.pow(3e+1,0.5)) inexact rounded', 5.5, 0 + decimal.pow(3e+1,0.5));
				AddTestCase('pwsx2223:p2 r:HALF_EVEN (0 + decimal.pow(3e+2,0.5)) inexact rounded', 17, 0 + decimal.pow(3e+2,0.5));
				AddTestCase('pwsx2224:p2 r:HALF_EVEN (0 + decimal.pow(3e+3,0.5)) inexact rounded', 55, 0 + decimal.pow(3e+3,0.5));
				AddTestCase('pwsx2225:p2 r:HALF_EVEN (0 + decimal.pow(0.4,0.5)) inexact rounded', 0.63, 0 + decimal.pow(0.4,0.5));
				AddTestCase('pwsx2226:p2 r:HALF_EVEN (0 + decimal.pow(0.04,0.5)) inexact rounded', 0.20, 0 + decimal.pow(0.04,0.5));
				AddTestCase('pwsx2227:p2 r:HALF_EVEN (0 + decimal.pow(4.0e-1,0.5)) inexact rounded', 0.63, 0 + decimal.pow(4.0e-1,0.5));
				AddTestCase('pwsx2228:p2 r:HALF_EVEN (0 + decimal.pow(4.00e-2,0.5)) inexact rounded', 0.20, 0 + decimal.pow(4.00e-2,0.5));
				AddTestCase('pwsx2229:p2 r:HALF_EVEN (0 + decimal.pow(4e-3,0.5)) inexact rounded', 0.063, 0 + decimal.pow(4e-3,0.5));
				AddTestCase('pwsx2230:p2 r:HALF_EVEN (0 + decimal.pow(4e+1,0.5)) inexact rounded', 6.3, 0 + decimal.pow(4e+1,0.5));
				AddTestCase('pwsx2231:p2 r:HALF_EVEN (0 + decimal.pow(4e+2,0.5)) inexact rounded', 20, 0 + decimal.pow(4e+2,0.5));
				AddTestCase('pwsx2232:p2 r:HALF_EVEN (0 + decimal.pow(4e+3,0.5)) inexact rounded', 63, 0 + decimal.pow(4e+3,0.5));
				AddTestCase('pwsx2233:p2 r:HALF_EVEN (0 + decimal.pow(0.5,0.5)) inexact rounded', 0.71, 0 + decimal.pow(0.5,0.5));
				AddTestCase('pwsx2234:p2 r:HALF_EVEN (0 + decimal.pow(0.05,0.5)) inexact rounded', 0.22, 0 + decimal.pow(0.05,0.5));
				AddTestCase('pwsx2235:p2 r:HALF_EVEN (0 + decimal.pow(5.0e-1,0.5)) inexact rounded', 0.71, 0 + decimal.pow(5.0e-1,0.5));
				AddTestCase('pwsx2236:p2 r:HALF_EVEN (0 + decimal.pow(5.00e-2,0.5)) inexact rounded', 0.22, 0 + decimal.pow(5.00e-2,0.5));
				AddTestCase('pwsx2237:p2 r:HALF_EVEN (0 + decimal.pow(5e-3,0.5)) inexact rounded', 0.071, 0 + decimal.pow(5e-3,0.5));
				AddTestCase('pwsx2238:p2 r:HALF_EVEN (0 + decimal.pow(5e+1,0.5)) inexact rounded', 7.1, 0 + decimal.pow(5e+1,0.5));
				AddTestCase('pwsx2239:p2 r:HALF_EVEN (0 + decimal.pow(5e+2,0.5)) inexact rounded', 22, 0 + decimal.pow(5e+2,0.5));
				AddTestCase('pwsx2240:p2 r:HALF_EVEN (0 + decimal.pow(5e+3,0.5)) inexact rounded', 71, 0 + decimal.pow(5e+3,0.5));
				AddTestCase('pwsx2241:p2 r:HALF_EVEN (0 + decimal.pow(0.6,0.5)) inexact rounded', 0.77, 0 + decimal.pow(0.6,0.5));
				AddTestCase('pwsx2242:p2 r:HALF_EVEN (0 + decimal.pow(0.06,0.5)) inexact rounded', 0.24, 0 + decimal.pow(0.06,0.5));
				AddTestCase('pwsx2243:p2 r:HALF_EVEN (0 + decimal.pow(6.0e-1,0.5)) inexact rounded', 0.77, 0 + decimal.pow(6.0e-1,0.5));
				AddTestCase('pwsx2244:p2 r:HALF_EVEN (0 + decimal.pow(6.00e-2,0.5)) inexact rounded', 0.24, 0 + decimal.pow(6.00e-2,0.5));
				AddTestCase('pwsx2245:p2 r:HALF_EVEN (0 + decimal.pow(6e-3,0.5)) inexact rounded', 0.077, 0 + decimal.pow(6e-3,0.5));
				AddTestCase('pwsx2246:p2 r:HALF_EVEN (0 + decimal.pow(6e+1,0.5)) inexact rounded', 7.7, 0 + decimal.pow(6e+1,0.5));
				AddTestCase('pwsx2247:p2 r:HALF_EVEN (0 + decimal.pow(6e+2,0.5)) inexact rounded', 24, 0 + decimal.pow(6e+2,0.5));
				AddTestCase('pwsx2248:p2 r:HALF_EVEN (0 + decimal.pow(6e+3,0.5)) inexact rounded', 77, 0 + decimal.pow(6e+3,0.5));
				AddTestCase('pwsx2249:p2 r:HALF_EVEN (0 + decimal.pow(0.7,0.5)) inexact rounded', 0.84, 0 + decimal.pow(0.7,0.5));
				AddTestCase('pwsx2250:p2 r:HALF_EVEN (0 + decimal.pow(0.07,0.5)) inexact rounded', 0.26, 0 + decimal.pow(0.07,0.5));
				AddTestCase('pwsx2251:p2 r:HALF_EVEN (0 + decimal.pow(7.0e-1,0.5)) inexact rounded', 0.84, 0 + decimal.pow(7.0e-1,0.5));
				AddTestCase('pwsx2252:p2 r:HALF_EVEN (0 + decimal.pow(7.00e-2,0.5)) inexact rounded', 0.26, 0 + decimal.pow(7.00e-2,0.5));
				AddTestCase('pwsx2253:p2 r:HALF_EVEN (0 + decimal.pow(7e-3,0.5)) inexact rounded', 0.084, 0 + decimal.pow(7e-3,0.5));
				AddTestCase('pwsx2254:p2 r:HALF_EVEN (0 + decimal.pow(7e+1,0.5)) inexact rounded', 8.4, 0 + decimal.pow(7e+1,0.5));
				AddTestCase('pwsx2255:p2 r:HALF_EVEN (0 + decimal.pow(7e+2,0.5)) inexact rounded', 26, 0 + decimal.pow(7e+2,0.5));
				AddTestCase('pwsx2256:p2 r:HALF_EVEN (0 + decimal.pow(7e+3,0.5)) inexact rounded', 84, 0 + decimal.pow(7e+3,0.5));
				AddTestCase('pwsx2257:p2 r:HALF_EVEN (0 + decimal.pow(0.8,0.5)) inexact rounded', 0.89, 0 + decimal.pow(0.8,0.5));
				AddTestCase('pwsx2258:p2 r:HALF_EVEN (0 + decimal.pow(0.08,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.08,0.5));
				AddTestCase('pwsx2259:p2 r:HALF_EVEN (0 + decimal.pow(8.0e-1,0.5)) inexact rounded', 0.89, 0 + decimal.pow(8.0e-1,0.5));
				AddTestCase('pwsx2260:p2 r:HALF_EVEN (0 + decimal.pow(8.00e-2,0.5)) inexact rounded', 0.28, 0 + decimal.pow(8.00e-2,0.5));
				AddTestCase('pwsx2261:p2 r:HALF_EVEN (0 + decimal.pow(8e-3,0.5)) inexact rounded', 0.089, 0 + decimal.pow(8e-3,0.5));
				AddTestCase('pwsx2262:p2 r:HALF_EVEN (0 + decimal.pow(8e+1,0.5)) inexact rounded', 8.9, 0 + decimal.pow(8e+1,0.5));
				AddTestCase('pwsx2263:p2 r:HALF_EVEN (0 + decimal.pow(8e+2,0.5)) inexact rounded', 28, 0 + decimal.pow(8e+2,0.5));
				AddTestCase('pwsx2264:p2 r:HALF_EVEN (0 + decimal.pow(8e+3,0.5)) inexact rounded', 89, 0 + decimal.pow(8e+3,0.5));
				AddTestCase('pwsx2265:p2 r:HALF_EVEN (0 + decimal.pow(0.9,0.5)) inexact rounded', 0.95, 0 + decimal.pow(0.9,0.5));
				AddTestCase('pwsx2266:p2 r:HALF_EVEN (0 + decimal.pow(0.09,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.09,0.5));
				AddTestCase('pwsx2267:p2 r:HALF_EVEN (0 + decimal.pow(9.0e-1,0.5)) inexact rounded', 0.95, 0 + decimal.pow(9.0e-1,0.5));
				AddTestCase('pwsx2268:p2 r:HALF_EVEN (0 + decimal.pow(9.00e-2,0.5)) inexact rounded', 0.30, 0 + decimal.pow(9.00e-2,0.5));
				AddTestCase('pwsx2269:p2 r:HALF_EVEN (0 + decimal.pow(9e-3,0.5)) inexact rounded', 0.095, 0 + decimal.pow(9e-3,0.5));
				AddTestCase('pwsx2270:p2 r:HALF_EVEN (0 + decimal.pow(9e+1,0.5)) inexact rounded', 9.5, 0 + decimal.pow(9e+1,0.5));
				AddTestCase('pwsx2271:p2 r:HALF_EVEN (0 + decimal.pow(9e+2,0.5)) inexact rounded', 30, 0 + decimal.pow(9e+2,0.5));
				AddTestCase('pwsx2272:p2 r:HALF_EVEN (0 + decimal.pow(9e+3,0.5)) inexact rounded', 95, 0 + decimal.pow(9e+3,0.5));
				AddTestCase('pwsx2273:p2 r:HALF_EVEN (0 + decimal.pow(0.10,0.5)) inexact rounded', 0.32, 0 + decimal.pow(0.10,0.5));
				AddTestCase('pwsx2274:p2 r:HALF_EVEN (0 + decimal.pow(0.010,0.5)) inexact rounded', 0.10, 0 + decimal.pow(0.010,0.5));
				AddTestCase('pwsx2275:p2 r:HALF_EVEN (0 + decimal.pow(10.0e-1,0.5)) inexact rounded', 1.0, 0 + decimal.pow(10.0e-1,0.5));
				AddTestCase('pwsx2276:p2 r:HALF_EVEN (0 + decimal.pow(10.00e-2,0.5)) inexact rounded', 0.32, 0 + decimal.pow(10.00e-2,0.5));
				AddTestCase('pwsx2277:p2 r:HALF_EVEN (0 + decimal.pow(10e-3,0.5)) inexact rounded', 0.10, 0 + decimal.pow(10e-3,0.5));
				AddTestCase('pwsx2278:p2 r:HALF_EVEN (0 + decimal.pow(10e+1,0.5)) inexact rounded', 10, 0 + decimal.pow(10e+1,0.5));
				AddTestCase('pwsx2279:p2 r:HALF_EVEN (0 + decimal.pow(10e+2,0.5)) inexact rounded', 32, 0 + decimal.pow(10e+2,0.5));
				AddTestCase('pwsx2280:p2 r:HALF_EVEN (0 + decimal.pow(10e+3,0.5)) inexact rounded', 1.0e+2, 0 + decimal.pow(10e+3,0.5));
				AddTestCase('pwsx2281:p2 r:HALF_EVEN (0 + decimal.pow(0.11,0.5)) inexact rounded', 0.33, 0 + decimal.pow(0.11,0.5));
				AddTestCase('pwsx2282:p2 r:HALF_EVEN (0 + decimal.pow(0.011,0.5)) inexact rounded', 0.10, 0 + decimal.pow(0.011,0.5));
				AddTestCase('pwsx2283:p2 r:HALF_EVEN (0 + decimal.pow(11.0e-1,0.5)) inexact rounded', 1.0, 0 + decimal.pow(11.0e-1,0.5));
				AddTestCase('pwsx2284:p2 r:HALF_EVEN (0 + decimal.pow(11.00e-2,0.5)) inexact rounded', 0.33, 0 + decimal.pow(11.00e-2,0.5));
				AddTestCase('pwsx2285:p2 r:HALF_EVEN (0 + decimal.pow(11e-3,0.5)) inexact rounded', 0.10, 0 + decimal.pow(11e-3,0.5));
				AddTestCase('pwsx2286:p2 r:HALF_EVEN (0 + decimal.pow(11e+1,0.5)) inexact rounded', 10, 0 + decimal.pow(11e+1,0.5));
				AddTestCase('pwsx2287:p2 r:HALF_EVEN (0 + decimal.pow(11e+2,0.5)) inexact rounded', 33, 0 + decimal.pow(11e+2,0.5));
				AddTestCase('pwsx2288:p2 r:HALF_EVEN (0 + decimal.pow(11e+3,0.5)) inexact rounded', 1.0e+2, 0 + decimal.pow(11e+3,0.5));
				AddTestCase('pwsx2289:p2 r:HALF_EVEN (0 + decimal.pow(0.12,0.5)) inexact rounded', 0.35, 0 + decimal.pow(0.12,0.5));
				AddTestCase('pwsx2290:p2 r:HALF_EVEN (0 + decimal.pow(0.012,0.5)) inexact rounded', 0.11, 0 + decimal.pow(0.012,0.5));
				AddTestCase('pwsx2291:p2 r:HALF_EVEN (0 + decimal.pow(12.0e-1,0.5)) inexact rounded', 1.1, 0 + decimal.pow(12.0e-1,0.5));
				AddTestCase('pwsx2292:p2 r:HALF_EVEN (0 + decimal.pow(12.00e-2,0.5)) inexact rounded', 0.35, 0 + decimal.pow(12.00e-2,0.5));
				AddTestCase('pwsx2293:p2 r:HALF_EVEN (0 + decimal.pow(12e-3,0.5)) inexact rounded', 0.11, 0 + decimal.pow(12e-3,0.5));
				AddTestCase('pwsx2294:p2 r:HALF_EVEN (0 + decimal.pow(12e+1,0.5)) inexact rounded', 11, 0 + decimal.pow(12e+1,0.5));
				AddTestCase('pwsx2295:p2 r:HALF_EVEN (0 + decimal.pow(12e+2,0.5)) inexact rounded', 35, 0 + decimal.pow(12e+2,0.5));
				AddTestCase('pwsx2296:p2 r:HALF_EVEN (0 + decimal.pow(12e+3,0.5)) inexact rounded', 1.1e+2, 0 + decimal.pow(12e+3,0.5));
				AddTestCase('pwsx2297:p2 r:HALF_EVEN (0 + decimal.pow(0.13,0.5)) inexact rounded', 0.36, 0 + decimal.pow(0.13,0.5));
				AddTestCase('pwsx2298:p2 r:HALF_EVEN (0 + decimal.pow(0.013,0.5)) inexact rounded', 0.11, 0 + decimal.pow(0.013,0.5));
				AddTestCase('pwsx2299:p2 r:HALF_EVEN (0 + decimal.pow(13.0e-1,0.5)) inexact rounded', 1.1, 0 + decimal.pow(13.0e-1,0.5));
				AddTestCase('pwsx2300:p2 r:HALF_EVEN (0 + decimal.pow(13.00e-2,0.5)) inexact rounded', 0.36, 0 + decimal.pow(13.00e-2,0.5));
				AddTestCase('pwsx2301:p2 r:HALF_EVEN (0 + decimal.pow(13e-3,0.5)) inexact rounded', 0.11, 0 + decimal.pow(13e-3,0.5));
				AddTestCase('pwsx2302:p2 r:HALF_EVEN (0 + decimal.pow(13e+1,0.5)) inexact rounded', 11, 0 + decimal.pow(13e+1,0.5));
				AddTestCase('pwsx2303:p2 r:HALF_EVEN (0 + decimal.pow(13e+2,0.5)) inexact rounded', 36, 0 + decimal.pow(13e+2,0.5));
				AddTestCase('pwsx2304:p2 r:HALF_EVEN (0 + decimal.pow(13e+3,0.5)) inexact rounded', 1.1e+2, 0 + decimal.pow(13e+3,0.5));
				AddTestCase('pwsx2305:p2 r:HALF_EVEN (0 + decimal.pow(0.14,0.5)) inexact rounded', 0.37, 0 + decimal.pow(0.14,0.5));
				AddTestCase('pwsx2306:p2 r:HALF_EVEN (0 + decimal.pow(0.014,0.5)) inexact rounded', 0.12, 0 + decimal.pow(0.014,0.5));
				AddTestCase('pwsx2307:p2 r:HALF_EVEN (0 + decimal.pow(14.0e-1,0.5)) inexact rounded', 1.2, 0 + decimal.pow(14.0e-1,0.5));
				AddTestCase('pwsx2308:p2 r:HALF_EVEN (0 + decimal.pow(14.00e-2,0.5)) inexact rounded', 0.37, 0 + decimal.pow(14.00e-2,0.5));
				AddTestCase('pwsx2309:p2 r:HALF_EVEN (0 + decimal.pow(14e-3,0.5)) inexact rounded', 0.12, 0 + decimal.pow(14e-3,0.5));
				AddTestCase('pwsx2310:p2 r:HALF_EVEN (0 + decimal.pow(14e+1,0.5)) inexact rounded', 12, 0 + decimal.pow(14e+1,0.5));
				AddTestCase('pwsx2311:p2 r:HALF_EVEN (0 + decimal.pow(14e+2,0.5)) inexact rounded', 37, 0 + decimal.pow(14e+2,0.5));
				AddTestCase('pwsx2312:p2 r:HALF_EVEN (0 + decimal.pow(14e+3,0.5)) inexact rounded', 1.2e+2, 0 + decimal.pow(14e+3,0.5));
				AddTestCase('pwsx2313:p2 r:HALF_EVEN (0 + decimal.pow(0.15,0.5)) inexact rounded', 0.39, 0 + decimal.pow(0.15,0.5));
				AddTestCase('pwsx2314:p2 r:HALF_EVEN (0 + decimal.pow(0.015,0.5)) inexact rounded', 0.12, 0 + decimal.pow(0.015,0.5));
				AddTestCase('pwsx2315:p2 r:HALF_EVEN (0 + decimal.pow(15.0e-1,0.5)) inexact rounded', 1.2, 0 + decimal.pow(15.0e-1,0.5));
				AddTestCase('pwsx2316:p2 r:HALF_EVEN (0 + decimal.pow(15.00e-2,0.5)) inexact rounded', 0.39, 0 + decimal.pow(15.00e-2,0.5));
				AddTestCase('pwsx2317:p2 r:HALF_EVEN (0 + decimal.pow(15e-3,0.5)) inexact rounded', 0.12, 0 + decimal.pow(15e-3,0.5));
				AddTestCase('pwsx2318:p2 r:HALF_EVEN (0 + decimal.pow(15e+1,0.5)) inexact rounded', 12, 0 + decimal.pow(15e+1,0.5));
				AddTestCase('pwsx2319:p2 r:HALF_EVEN (0 + decimal.pow(15e+2,0.5)) inexact rounded', 39, 0 + decimal.pow(15e+2,0.5));
				AddTestCase('pwsx2320:p2 r:HALF_EVEN (0 + decimal.pow(15e+3,0.5)) inexact rounded', 1.2e+2, 0 + decimal.pow(15e+3,0.5));
				AddTestCase('pwsx2321:p2 r:HALF_EVEN (0 + decimal.pow(0.16,0.5)) inexact rounded', 0.40, 0 + decimal.pow(0.16,0.5));
				AddTestCase('pwsx2322:p2 r:HALF_EVEN (0 + decimal.pow(0.016,0.5)) inexact rounded', 0.13, 0 + decimal.pow(0.016,0.5));
				AddTestCase('pwsx2323:p2 r:HALF_EVEN (0 + decimal.pow(16.0e-1,0.5)) inexact rounded', 1.3, 0 + decimal.pow(16.0e-1,0.5));
				AddTestCase('pwsx2324:p2 r:HALF_EVEN (0 + decimal.pow(16.00e-2,0.5)) inexact rounded', 0.40, 0 + decimal.pow(16.00e-2,0.5));
				AddTestCase('pwsx2325:p2 r:HALF_EVEN (0 + decimal.pow(16e-3,0.5)) inexact rounded', 0.13, 0 + decimal.pow(16e-3,0.5));
				AddTestCase('pwsx2326:p2 r:HALF_EVEN (0 + decimal.pow(16e+1,0.5)) inexact rounded', 13, 0 + decimal.pow(16e+1,0.5));
				AddTestCase('pwsx2327:p2 r:HALF_EVEN (0 + decimal.pow(16e+2,0.5)) inexact rounded', 40, 0 + decimal.pow(16e+2,0.5));
				AddTestCase('pwsx2328:p2 r:HALF_EVEN (0 + decimal.pow(16e+3,0.5)) inexact rounded', 1.3e+2, 0 + decimal.pow(16e+3,0.5));
				AddTestCase('pwsx2329:p2 r:HALF_EVEN (0 + decimal.pow(0.17,0.5)) inexact rounded', 0.41, 0 + decimal.pow(0.17,0.5));
				AddTestCase('pwsx2330:p2 r:HALF_EVEN (0 + decimal.pow(0.017,0.5)) inexact rounded', 0.13, 0 + decimal.pow(0.017,0.5));
				AddTestCase('pwsx2331:p2 r:HALF_EVEN (0 + decimal.pow(17.0e-1,0.5)) inexact rounded', 1.3, 0 + decimal.pow(17.0e-1,0.5));
				AddTestCase('pwsx2332:p2 r:HALF_EVEN (0 + decimal.pow(17.00e-2,0.5)) inexact rounded', 0.41, 0 + decimal.pow(17.00e-2,0.5));
				AddTestCase('pwsx2333:p2 r:HALF_EVEN (0 + decimal.pow(17e-3,0.5)) inexact rounded', 0.13, 0 + decimal.pow(17e-3,0.5));
				AddTestCase('pwsx2334:p2 r:HALF_EVEN (0 + decimal.pow(17e+1,0.5)) inexact rounded', 13, 0 + decimal.pow(17e+1,0.5));
				AddTestCase('pwsx2335:p2 r:HALF_EVEN (0 + decimal.pow(17e+2,0.5)) inexact rounded', 41, 0 + decimal.pow(17e+2,0.5));
				AddTestCase('pwsx2336:p2 r:HALF_EVEN (0 + decimal.pow(17e+3,0.5)) inexact rounded', 1.3e+2, 0 + decimal.pow(17e+3,0.5));
				AddTestCase('pwsx2337:p2 r:HALF_EVEN (0 + decimal.pow(0.18,0.5)) inexact rounded', 0.42, 0 + decimal.pow(0.18,0.5));
				AddTestCase('pwsx2338:p2 r:HALF_EVEN (0 + decimal.pow(0.018,0.5)) inexact rounded', 0.13, 0 + decimal.pow(0.018,0.5));
				AddTestCase('pwsx2339:p2 r:HALF_EVEN (0 + decimal.pow(18.0e-1,0.5)) inexact rounded', 1.3, 0 + decimal.pow(18.0e-1,0.5));
				AddTestCase('pwsx2340:p2 r:HALF_EVEN (0 + decimal.pow(18.00e-2,0.5)) inexact rounded', 0.42, 0 + decimal.pow(18.00e-2,0.5));
				AddTestCase('pwsx2341:p2 r:HALF_EVEN (0 + decimal.pow(18e-3,0.5)) inexact rounded', 0.13, 0 + decimal.pow(18e-3,0.5));
				AddTestCase('pwsx2342:p2 r:HALF_EVEN (0 + decimal.pow(18e+1,0.5)) inexact rounded', 13, 0 + decimal.pow(18e+1,0.5));
				AddTestCase('pwsx2343:p2 r:HALF_EVEN (0 + decimal.pow(18e+2,0.5)) inexact rounded', 42, 0 + decimal.pow(18e+2,0.5));
				AddTestCase('pwsx2344:p2 r:HALF_EVEN (0 + decimal.pow(18e+3,0.5)) inexact rounded', 1.3e+2, 0 + decimal.pow(18e+3,0.5));
				AddTestCase('pwsx2345:p2 r:HALF_EVEN (0 + decimal.pow(0.19,0.5)) inexact rounded', 0.44, 0 + decimal.pow(0.19,0.5));
				AddTestCase('pwsx2346:p2 r:HALF_EVEN (0 + decimal.pow(0.019,0.5)) inexact rounded', 0.14, 0 + decimal.pow(0.019,0.5));
				AddTestCase('pwsx2347:p2 r:HALF_EVEN (0 + decimal.pow(19.0e-1,0.5)) inexact rounded', 1.4, 0 + decimal.pow(19.0e-1,0.5));
				AddTestCase('pwsx2348:p2 r:HALF_EVEN (0 + decimal.pow(19.00e-2,0.5)) inexact rounded', 0.44, 0 + decimal.pow(19.00e-2,0.5));
				AddTestCase('pwsx2349:p2 r:HALF_EVEN (0 + decimal.pow(19e-3,0.5)) inexact rounded', 0.14, 0 + decimal.pow(19e-3,0.5));
				AddTestCase('pwsx2350:p2 r:HALF_EVEN (0 + decimal.pow(19e+1,0.5)) inexact rounded', 14, 0 + decimal.pow(19e+1,0.5));
				AddTestCase('pwsx2351:p2 r:HALF_EVEN (0 + decimal.pow(19e+2,0.5)) inexact rounded', 44, 0 + decimal.pow(19e+2,0.5));
				AddTestCase('pwsx2352:p2 r:HALF_EVEN (0 + decimal.pow(19e+3,0.5)) inexact rounded', 1.4e+2, 0 + decimal.pow(19e+3,0.5));
				AddTestCase('pwsx2353:p2 r:HALF_EVEN (0 + decimal.pow(0.20,0.5)) inexact rounded', 0.45, 0 + decimal.pow(0.20,0.5));
				AddTestCase('pwsx2354:p2 r:HALF_EVEN (0 + decimal.pow(0.020,0.5)) inexact rounded', 0.14, 0 + decimal.pow(0.020,0.5));
				AddTestCase('pwsx2355:p2 r:HALF_EVEN (0 + decimal.pow(20.0e-1,0.5)) inexact rounded', 1.4, 0 + decimal.pow(20.0e-1,0.5));
				AddTestCase('pwsx2356:p2 r:HALF_EVEN (0 + decimal.pow(20.00e-2,0.5)) inexact rounded', 0.45, 0 + decimal.pow(20.00e-2,0.5));
				AddTestCase('pwsx2357:p2 r:HALF_EVEN (0 + decimal.pow(20e-3,0.5)) inexact rounded', 0.14, 0 + decimal.pow(20e-3,0.5));
				AddTestCase('pwsx2358:p2 r:HALF_EVEN (0 + decimal.pow(20e+1,0.5)) inexact rounded', 14, 0 + decimal.pow(20e+1,0.5));
				AddTestCase('pwsx2359:p2 r:HALF_EVEN (0 + decimal.pow(20e+2,0.5)) inexact rounded', 45, 0 + decimal.pow(20e+2,0.5));
				AddTestCase('pwsx2360:p2 r:HALF_EVEN (0 + decimal.pow(20e+3,0.5)) inexact rounded', 1.4e+2, 0 + decimal.pow(20e+3,0.5));
				AddTestCase('pwsx2361:p2 r:HALF_EVEN (0 + decimal.pow(0.21,0.5)) inexact rounded', 0.46, 0 + decimal.pow(0.21,0.5));
				AddTestCase('pwsx2362:p2 r:HALF_EVEN (0 + decimal.pow(0.021,0.5)) inexact rounded', 0.14, 0 + decimal.pow(0.021,0.5));
				AddTestCase('pwsx2363:p2 r:HALF_EVEN (0 + decimal.pow(21.0e-1,0.5)) inexact rounded', 1.4, 0 + decimal.pow(21.0e-1,0.5));
				AddTestCase('pwsx2364:p2 r:HALF_EVEN (0 + decimal.pow(21.00e-2,0.5)) inexact rounded', 0.46, 0 + decimal.pow(21.00e-2,0.5));
				AddTestCase('pwsx2365:p2 r:HALF_EVEN (0 + decimal.pow(21e-3,0.5)) inexact rounded', 0.14, 0 + decimal.pow(21e-3,0.5));
				AddTestCase('pwsx2366:p2 r:HALF_EVEN (0 + decimal.pow(21e+1,0.5)) inexact rounded', 14, 0 + decimal.pow(21e+1,0.5));
				AddTestCase('pwsx2367:p2 r:HALF_EVEN (0 + decimal.pow(21e+2,0.5)) inexact rounded', 46, 0 + decimal.pow(21e+2,0.5));
				AddTestCase('pwsx2368:p2 r:HALF_EVEN (0 + decimal.pow(21e+3,0.5)) inexact rounded', 1.4e+2, 0 + decimal.pow(21e+3,0.5));
				AddTestCase('pwsx2369:p2 r:HALF_EVEN (0 + decimal.pow(0.22,0.5)) inexact rounded', 0.47, 0 + decimal.pow(0.22,0.5));
				AddTestCase('pwsx2370:p2 r:HALF_EVEN (0 + decimal.pow(0.022,0.5)) inexact rounded', 0.15, 0 + decimal.pow(0.022,0.5));
				AddTestCase('pwsx2371:p2 r:HALF_EVEN (0 + decimal.pow(22.0e-1,0.5)) inexact rounded', 1.5, 0 + decimal.pow(22.0e-1,0.5));
				AddTestCase('pwsx2372:p2 r:HALF_EVEN (0 + decimal.pow(22.00e-2,0.5)) inexact rounded', 0.47, 0 + decimal.pow(22.00e-2,0.5));
				AddTestCase('pwsx2373:p2 r:HALF_EVEN (0 + decimal.pow(22e-3,0.5)) inexact rounded', 0.15, 0 + decimal.pow(22e-3,0.5));
				AddTestCase('pwsx2374:p2 r:HALF_EVEN (0 + decimal.pow(22e+1,0.5)) inexact rounded', 15, 0 + decimal.pow(22e+1,0.5));
				AddTestCase('pwsx2375:p2 r:HALF_EVEN (0 + decimal.pow(22e+2,0.5)) inexact rounded', 47, 0 + decimal.pow(22e+2,0.5));
				AddTestCase('pwsx2376:p2 r:HALF_EVEN (0 + decimal.pow(22e+3,0.5)) inexact rounded', 1.5e+2, 0 + decimal.pow(22e+3,0.5));
				AddTestCase('pwsx2377:p2 r:HALF_EVEN (0 + decimal.pow(0.23,0.5)) inexact rounded', 0.48, 0 + decimal.pow(0.23,0.5));
				AddTestCase('pwsx2378:p2 r:HALF_EVEN (0 + decimal.pow(0.023,0.5)) inexact rounded', 0.15, 0 + decimal.pow(0.023,0.5));
				AddTestCase('pwsx2379:p2 r:HALF_EVEN (0 + decimal.pow(23.0e-1,0.5)) inexact rounded', 1.5, 0 + decimal.pow(23.0e-1,0.5));
				AddTestCase('pwsx2380:p2 r:HALF_EVEN (0 + decimal.pow(23.00e-2,0.5)) inexact rounded', 0.48, 0 + decimal.pow(23.00e-2,0.5));
				AddTestCase('pwsx2381:p2 r:HALF_EVEN (0 + decimal.pow(23e-3,0.5)) inexact rounded', 0.15, 0 + decimal.pow(23e-3,0.5));
				AddTestCase('pwsx2382:p2 r:HALF_EVEN (0 + decimal.pow(23e+1,0.5)) inexact rounded', 15, 0 + decimal.pow(23e+1,0.5));
				AddTestCase('pwsx2383:p2 r:HALF_EVEN (0 + decimal.pow(23e+2,0.5)) inexact rounded', 48, 0 + decimal.pow(23e+2,0.5));
				AddTestCase('pwsx2384:p2 r:HALF_EVEN (0 + decimal.pow(23e+3,0.5)) inexact rounded', 1.5e+2, 0 + decimal.pow(23e+3,0.5));
				AddTestCase('pwsx2385:p2 r:HALF_EVEN (0 + decimal.pow(0.24,0.5)) inexact rounded', 0.49, 0 + decimal.pow(0.24,0.5));
				AddTestCase('pwsx2386:p2 r:HALF_EVEN (0 + decimal.pow(0.024,0.5)) inexact rounded', 0.15, 0 + decimal.pow(0.024,0.5));
				AddTestCase('pwsx2387:p2 r:HALF_EVEN (0 + decimal.pow(24.0e-1,0.5)) inexact rounded', 1.5, 0 + decimal.pow(24.0e-1,0.5));
				AddTestCase('pwsx2388:p2 r:HALF_EVEN (0 + decimal.pow(24.00e-2,0.5)) inexact rounded', 0.49, 0 + decimal.pow(24.00e-2,0.5));
				AddTestCase('pwsx2389:p2 r:HALF_EVEN (0 + decimal.pow(24e-3,0.5)) inexact rounded', 0.15, 0 + decimal.pow(24e-3,0.5));
				AddTestCase('pwsx2390:p2 r:HALF_EVEN (0 + decimal.pow(24e+1,0.5)) inexact rounded', 15, 0 + decimal.pow(24e+1,0.5));
				AddTestCase('pwsx2391:p2 r:HALF_EVEN (0 + decimal.pow(24e+2,0.5)) inexact rounded', 49, 0 + decimal.pow(24e+2,0.5));
				AddTestCase('pwsx2392:p2 r:HALF_EVEN (0 + decimal.pow(24e+3,0.5)) inexact rounded', 1.5e+2, 0 + decimal.pow(24e+3,0.5));
				AddTestCase('pwsx2393:p2 r:HALF_EVEN (0 + decimal.pow(0.25,0.5)) inexact rounded', 0.50, 0 + decimal.pow(0.25,0.5));
				AddTestCase('pwsx2394:p2 r:HALF_EVEN (0 + decimal.pow(0.025,0.5)) inexact rounded', 0.16, 0 + decimal.pow(0.025,0.5));
				AddTestCase('pwsx2395:p2 r:HALF_EVEN (0 + decimal.pow(25.0e-1,0.5)) inexact rounded', 1.6, 0 + decimal.pow(25.0e-1,0.5));
				AddTestCase('pwsx2396:p2 r:HALF_EVEN (0 + decimal.pow(25.00e-2,0.5)) inexact rounded', 0.50, 0 + decimal.pow(25.00e-2,0.5));
				AddTestCase('pwsx2397:p2 r:HALF_EVEN (0 + decimal.pow(25e-3,0.5)) inexact rounded', 0.16, 0 + decimal.pow(25e-3,0.5));
				AddTestCase('pwsx2398:p2 r:HALF_EVEN (0 + decimal.pow(25e+1,0.5)) inexact rounded', 16, 0 + decimal.pow(25e+1,0.5));
				AddTestCase('pwsx2399:p2 r:HALF_EVEN (0 + decimal.pow(25e+2,0.5)) inexact rounded', 50, 0 + decimal.pow(25e+2,0.5));
				AddTestCase('pwsx2400:p2 r:HALF_EVEN (0 + decimal.pow(25e+3,0.5)) inexact rounded', 1.6e+2, 0 + decimal.pow(25e+3,0.5));
				AddTestCase('pwsx2401:p2 r:HALF_EVEN (0 + decimal.pow(0.26,0.5)) inexact rounded', 0.51, 0 + decimal.pow(0.26,0.5));
				AddTestCase('pwsx2402:p2 r:HALF_EVEN (0 + decimal.pow(0.026,0.5)) inexact rounded', 0.16, 0 + decimal.pow(0.026,0.5));
				AddTestCase('pwsx2403:p2 r:HALF_EVEN (0 + decimal.pow(26.0e-1,0.5)) inexact rounded', 1.6, 0 + decimal.pow(26.0e-1,0.5));
				AddTestCase('pwsx2404:p2 r:HALF_EVEN (0 + decimal.pow(26.00e-2,0.5)) inexact rounded', 0.51, 0 + decimal.pow(26.00e-2,0.5));
				AddTestCase('pwsx2405:p2 r:HALF_EVEN (0 + decimal.pow(26e-3,0.5)) inexact rounded', 0.16, 0 + decimal.pow(26e-3,0.5));
				AddTestCase('pwsx2406:p2 r:HALF_EVEN (0 + decimal.pow(26e+1,0.5)) inexact rounded', 16, 0 + decimal.pow(26e+1,0.5));
				AddTestCase('pwsx2407:p2 r:HALF_EVEN (0 + decimal.pow(26e+2,0.5)) inexact rounded', 51, 0 + decimal.pow(26e+2,0.5));
				AddTestCase('pwsx2408:p2 r:HALF_EVEN (0 + decimal.pow(26e+3,0.5)) inexact rounded', 1.6e+2, 0 + decimal.pow(26e+3,0.5));
				AddTestCase('pwsx2409:p2 r:HALF_EVEN (0 + decimal.pow(0.27,0.5)) inexact rounded', 0.52, 0 + decimal.pow(0.27,0.5));
				AddTestCase('pwsx2410:p2 r:HALF_EVEN (0 + decimal.pow(0.027,0.5)) inexact rounded', 0.16, 0 + decimal.pow(0.027,0.5));
				AddTestCase('pwsx2411:p2 r:HALF_EVEN (0 + decimal.pow(27.0e-1,0.5)) inexact rounded', 1.6, 0 + decimal.pow(27.0e-1,0.5));
				AddTestCase('pwsx2412:p2 r:HALF_EVEN (0 + decimal.pow(27.00e-2,0.5)) inexact rounded', 0.52, 0 + decimal.pow(27.00e-2,0.5));
				AddTestCase('pwsx2413:p2 r:HALF_EVEN (0 + decimal.pow(27e-3,0.5)) inexact rounded', 0.16, 0 + decimal.pow(27e-3,0.5));
				AddTestCase('pwsx2414:p2 r:HALF_EVEN (0 + decimal.pow(27e+1,0.5)) inexact rounded', 16, 0 + decimal.pow(27e+1,0.5));
				AddTestCase('pwsx2415:p2 r:HALF_EVEN (0 + decimal.pow(27e+2,0.5)) inexact rounded', 52, 0 + decimal.pow(27e+2,0.5));
				AddTestCase('pwsx2416:p2 r:HALF_EVEN (0 + decimal.pow(27e+3,0.5)) inexact rounded', 1.6e+2, 0 + decimal.pow(27e+3,0.5));
				AddTestCase('pwsx2417:p2 r:HALF_EVEN (0 + decimal.pow(0.28,0.5)) inexact rounded', 0.53, 0 + decimal.pow(0.28,0.5));
				AddTestCase('pwsx2418:p2 r:HALF_EVEN (0 + decimal.pow(0.028,0.5)) inexact rounded', 0.17, 0 + decimal.pow(0.028,0.5));
				AddTestCase('pwsx2419:p2 r:HALF_EVEN (0 + decimal.pow(28.0e-1,0.5)) inexact rounded', 1.7, 0 + decimal.pow(28.0e-1,0.5));
				AddTestCase('pwsx2420:p2 r:HALF_EVEN (0 + decimal.pow(28.00e-2,0.5)) inexact rounded', 0.53, 0 + decimal.pow(28.00e-2,0.5));
				AddTestCase('pwsx2421:p2 r:HALF_EVEN (0 + decimal.pow(28e-3,0.5)) inexact rounded', 0.17, 0 + decimal.pow(28e-3,0.5));
				AddTestCase('pwsx2422:p2 r:HALF_EVEN (0 + decimal.pow(28e+1,0.5)) inexact rounded', 17, 0 + decimal.pow(28e+1,0.5));
				AddTestCase('pwsx2423:p2 r:HALF_EVEN (0 + decimal.pow(28e+2,0.5)) inexact rounded', 53, 0 + decimal.pow(28e+2,0.5));
				AddTestCase('pwsx2424:p2 r:HALF_EVEN (0 + decimal.pow(28e+3,0.5)) inexact rounded', 1.7e+2, 0 + decimal.pow(28e+3,0.5));
				AddTestCase('pwsx2425:p2 r:HALF_EVEN (0 + decimal.pow(0.29,0.5)) inexact rounded', 0.54, 0 + decimal.pow(0.29,0.5));
				AddTestCase('pwsx2426:p2 r:HALF_EVEN (0 + decimal.pow(0.029,0.5)) inexact rounded', 0.17, 0 + decimal.pow(0.029,0.5));
				AddTestCase('pwsx2427:p2 r:HALF_EVEN (0 + decimal.pow(29.0e-1,0.5)) inexact rounded', 1.7, 0 + decimal.pow(29.0e-1,0.5));
				AddTestCase('pwsx2428:p2 r:HALF_EVEN (0 + decimal.pow(29.00e-2,0.5)) inexact rounded', 0.54, 0 + decimal.pow(29.00e-2,0.5));
				AddTestCase('pwsx2429:p2 r:HALF_EVEN (0 + decimal.pow(29e-3,0.5)) inexact rounded', 0.17, 0 + decimal.pow(29e-3,0.5));
				AddTestCase('pwsx2430:p2 r:HALF_EVEN (0 + decimal.pow(29e+1,0.5)) inexact rounded', 17, 0 + decimal.pow(29e+1,0.5));
				AddTestCase('pwsx2431:p2 r:HALF_EVEN (0 + decimal.pow(29e+2,0.5)) inexact rounded', 54, 0 + decimal.pow(29e+2,0.5));
				AddTestCase('pwsx2432:p2 r:HALF_EVEN (0 + decimal.pow(29e+3,0.5)) inexact rounded', 1.7e+2, 0 + decimal.pow(29e+3,0.5));
				AddTestCase('pwsx2433:p2 r:HALF_EVEN (0 + decimal.pow(0.30,0.5)) inexact rounded', 0.55, 0 + decimal.pow(0.30,0.5));
				AddTestCase('pwsx2434:p2 r:HALF_EVEN (0 + decimal.pow(0.030,0.5)) inexact rounded', 0.17, 0 + decimal.pow(0.030,0.5));
				AddTestCase('pwsx2435:p2 r:HALF_EVEN (0 + decimal.pow(30.0e-1,0.5)) inexact rounded', 1.7, 0 + decimal.pow(30.0e-1,0.5));
				AddTestCase('pwsx2436:p2 r:HALF_EVEN (0 + decimal.pow(30.00e-2,0.5)) inexact rounded', 0.55, 0 + decimal.pow(30.00e-2,0.5));
				AddTestCase('pwsx2437:p2 r:HALF_EVEN (0 + decimal.pow(30e-3,0.5)) inexact rounded', 0.17, 0 + decimal.pow(30e-3,0.5));
				AddTestCase('pwsx2438:p2 r:HALF_EVEN (0 + decimal.pow(30e+1,0.5)) inexact rounded', 17, 0 + decimal.pow(30e+1,0.5));
				AddTestCase('pwsx2439:p2 r:HALF_EVEN (0 + decimal.pow(30e+2,0.5)) inexact rounded', 55, 0 + decimal.pow(30e+2,0.5));
				AddTestCase('pwsx2440:p2 r:HALF_EVEN (0 + decimal.pow(30e+3,0.5)) inexact rounded', 1.7e+2, 0 + decimal.pow(30e+3,0.5));
				AddTestCase('pwsx2441:p2 r:HALF_EVEN (0 + decimal.pow(0.31,0.5)) inexact rounded', 0.56, 0 + decimal.pow(0.31,0.5));
				AddTestCase('pwsx2442:p2 r:HALF_EVEN (0 + decimal.pow(0.031,0.5)) inexact rounded', 0.18, 0 + decimal.pow(0.031,0.5));
				AddTestCase('pwsx2443:p2 r:HALF_EVEN (0 + decimal.pow(31.0e-1,0.5)) inexact rounded', 1.8, 0 + decimal.pow(31.0e-1,0.5));
				AddTestCase('pwsx2444:p2 r:HALF_EVEN (0 + decimal.pow(31.00e-2,0.5)) inexact rounded', 0.56, 0 + decimal.pow(31.00e-2,0.5));
				AddTestCase('pwsx2445:p2 r:HALF_EVEN (0 + decimal.pow(31e-3,0.5)) inexact rounded', 0.18, 0 + decimal.pow(31e-3,0.5));
				AddTestCase('pwsx2446:p2 r:HALF_EVEN (0 + decimal.pow(31e+1,0.5)) inexact rounded', 18, 0 + decimal.pow(31e+1,0.5));
				AddTestCase('pwsx2447:p2 r:HALF_EVEN (0 + decimal.pow(31e+2,0.5)) inexact rounded', 56, 0 + decimal.pow(31e+2,0.5));
				AddTestCase('pwsx2448:p2 r:HALF_EVEN (0 + decimal.pow(31e+3,0.5)) inexact rounded', 1.8e+2, 0 + decimal.pow(31e+3,0.5));
				AddTestCase('pwsx2449:p2 r:HALF_EVEN (0 + decimal.pow(0.32,0.5)) inexact rounded', 0.57, 0 + decimal.pow(0.32,0.5));
				AddTestCase('pwsx2450:p2 r:HALF_EVEN (0 + decimal.pow(0.032,0.5)) inexact rounded', 0.18, 0 + decimal.pow(0.032,0.5));
				AddTestCase('pwsx2451:p2 r:HALF_EVEN (0 + decimal.pow(32.0e-1,0.5)) inexact rounded', 1.8, 0 + decimal.pow(32.0e-1,0.5));
				AddTestCase('pwsx2452:p2 r:HALF_EVEN (0 + decimal.pow(32.00e-2,0.5)) inexact rounded', 0.57, 0 + decimal.pow(32.00e-2,0.5));
				AddTestCase('pwsx2453:p2 r:HALF_EVEN (0 + decimal.pow(32e-3,0.5)) inexact rounded', 0.18, 0 + decimal.pow(32e-3,0.5));
				AddTestCase('pwsx2454:p2 r:HALF_EVEN (0 + decimal.pow(32e+1,0.5)) inexact rounded', 18, 0 + decimal.pow(32e+1,0.5));
				AddTestCase('pwsx2455:p2 r:HALF_EVEN (0 + decimal.pow(32e+2,0.5)) inexact rounded', 57, 0 + decimal.pow(32e+2,0.5));
				AddTestCase('pwsx2456:p2 r:HALF_EVEN (0 + decimal.pow(32e+3,0.5)) inexact rounded', 1.8e+2, 0 + decimal.pow(32e+3,0.5));
				AddTestCase('pwsx2457:p2 r:HALF_EVEN (0 + decimal.pow(0.33,0.5)) inexact rounded', 0.57, 0 + decimal.pow(0.33,0.5));
				AddTestCase('pwsx2458:p2 r:HALF_EVEN (0 + decimal.pow(0.033,0.5)) inexact rounded', 0.18, 0 + decimal.pow(0.033,0.5));
				AddTestCase('pwsx2459:p2 r:HALF_EVEN (0 + decimal.pow(33.0e-1,0.5)) inexact rounded', 1.8, 0 + decimal.pow(33.0e-1,0.5));
				AddTestCase('pwsx2460:p2 r:HALF_EVEN (0 + decimal.pow(33.00e-2,0.5)) inexact rounded', 0.57, 0 + decimal.pow(33.00e-2,0.5));
				AddTestCase('pwsx2461:p2 r:HALF_EVEN (0 + decimal.pow(33e-3,0.5)) inexact rounded', 0.18, 0 + decimal.pow(33e-3,0.5));
				AddTestCase('pwsx2462:p2 r:HALF_EVEN (0 + decimal.pow(33e+1,0.5)) inexact rounded', 18, 0 + decimal.pow(33e+1,0.5));
				AddTestCase('pwsx2463:p2 r:HALF_EVEN (0 + decimal.pow(33e+2,0.5)) inexact rounded', 57, 0 + decimal.pow(33e+2,0.5));
				AddTestCase('pwsx2464:p2 r:HALF_EVEN (0 + decimal.pow(33e+3,0.5)) inexact rounded', 1.8e+2, 0 + decimal.pow(33e+3,0.5));
				AddTestCase('pwsx2465:p2 r:HALF_EVEN (0 + decimal.pow(0.34,0.5)) inexact rounded', 0.58, 0 + decimal.pow(0.34,0.5));
				AddTestCase('pwsx2466:p2 r:HALF_EVEN (0 + decimal.pow(0.034,0.5)) inexact rounded', 0.18, 0 + decimal.pow(0.034,0.5));
				AddTestCase('pwsx2467:p2 r:HALF_EVEN (0 + decimal.pow(34.0e-1,0.5)) inexact rounded', 1.8, 0 + decimal.pow(34.0e-1,0.5));
				AddTestCase('pwsx2468:p2 r:HALF_EVEN (0 + decimal.pow(34.00e-2,0.5)) inexact rounded', 0.58, 0 + decimal.pow(34.00e-2,0.5));
				AddTestCase('pwsx2469:p2 r:HALF_EVEN (0 + decimal.pow(34e-3,0.5)) inexact rounded', 0.18, 0 + decimal.pow(34e-3,0.5));
				AddTestCase('pwsx2470:p2 r:HALF_EVEN (0 + decimal.pow(34e+1,0.5)) inexact rounded', 18, 0 + decimal.pow(34e+1,0.5));
				AddTestCase('pwsx2471:p2 r:HALF_EVEN (0 + decimal.pow(34e+2,0.5)) inexact rounded', 58, 0 + decimal.pow(34e+2,0.5));
				AddTestCase('pwsx2472:p2 r:HALF_EVEN (0 + decimal.pow(34e+3,0.5)) inexact rounded', 1.8e+2, 0 + decimal.pow(34e+3,0.5));
				AddTestCase('pwsx2473:p2 r:HALF_EVEN (0 + decimal.pow(0.35,0.5)) inexact rounded', 0.59, 0 + decimal.pow(0.35,0.5));
				AddTestCase('pwsx2474:p2 r:HALF_EVEN (0 + decimal.pow(0.035,0.5)) inexact rounded', 0.19, 0 + decimal.pow(0.035,0.5));
				AddTestCase('pwsx2475:p2 r:HALF_EVEN (0 + decimal.pow(35.0e-1,0.5)) inexact rounded', 1.9, 0 + decimal.pow(35.0e-1,0.5));
				AddTestCase('pwsx2476:p2 r:HALF_EVEN (0 + decimal.pow(35.00e-2,0.5)) inexact rounded', 0.59, 0 + decimal.pow(35.00e-2,0.5));
				AddTestCase('pwsx2477:p2 r:HALF_EVEN (0 + decimal.pow(35e-3,0.5)) inexact rounded', 0.19, 0 + decimal.pow(35e-3,0.5));
				AddTestCase('pwsx2478:p2 r:HALF_EVEN (0 + decimal.pow(35e+1,0.5)) inexact rounded', 19, 0 + decimal.pow(35e+1,0.5));
				AddTestCase('pwsx2479:p2 r:HALF_EVEN (0 + decimal.pow(35e+2,0.5)) inexact rounded', 59, 0 + decimal.pow(35e+2,0.5));
				AddTestCase('pwsx2480:p2 r:HALF_EVEN (0 + decimal.pow(35e+3,0.5)) inexact rounded', 1.9e+2, 0 + decimal.pow(35e+3,0.5));
				AddTestCase('pwsx2481:p2 r:HALF_EVEN (0 + decimal.pow(0.36,0.5)) inexact rounded', 0.60, 0 + decimal.pow(0.36,0.5));
				AddTestCase('pwsx2482:p2 r:HALF_EVEN (0 + decimal.pow(0.036,0.5)) inexact rounded', 0.19, 0 + decimal.pow(0.036,0.5));
				AddTestCase('pwsx2483:p2 r:HALF_EVEN (0 + decimal.pow(36.0e-1,0.5)) inexact rounded', 1.9, 0 + decimal.pow(36.0e-1,0.5));
				AddTestCase('pwsx2484:p2 r:HALF_EVEN (0 + decimal.pow(36.00e-2,0.5)) inexact rounded', 0.60, 0 + decimal.pow(36.00e-2,0.5));
				AddTestCase('pwsx2485:p2 r:HALF_EVEN (0 + decimal.pow(36e-3,0.5)) inexact rounded', 0.19, 0 + decimal.pow(36e-3,0.5));
				AddTestCase('pwsx2486:p2 r:HALF_EVEN (0 + decimal.pow(36e+1,0.5)) inexact rounded', 19, 0 + decimal.pow(36e+1,0.5));
				AddTestCase('pwsx2487:p2 r:HALF_EVEN (0 + decimal.pow(36e+2,0.5)) inexact rounded', 60, 0 + decimal.pow(36e+2,0.5));
				AddTestCase('pwsx2488:p2 r:HALF_EVEN (0 + decimal.pow(36e+3,0.5)) inexact rounded', 1.9e+2, 0 + decimal.pow(36e+3,0.5));
				AddTestCase('pwsx2489:p2 r:HALF_EVEN (0 + decimal.pow(0.37,0.5)) inexact rounded', 0.61, 0 + decimal.pow(0.37,0.5));
				AddTestCase('pwsx2490:p2 r:HALF_EVEN (0 + decimal.pow(0.037,0.5)) inexact rounded', 0.19, 0 + decimal.pow(0.037,0.5));
				AddTestCase('pwsx2491:p2 r:HALF_EVEN (0 + decimal.pow(37.0e-1,0.5)) inexact rounded', 1.9, 0 + decimal.pow(37.0e-1,0.5));
				AddTestCase('pwsx2492:p2 r:HALF_EVEN (0 + decimal.pow(37.00e-2,0.5)) inexact rounded', 0.61, 0 + decimal.pow(37.00e-2,0.5));
				AddTestCase('pwsx2493:p2 r:HALF_EVEN (0 + decimal.pow(37e-3,0.5)) inexact rounded', 0.19, 0 + decimal.pow(37e-3,0.5));
				AddTestCase('pwsx2494:p2 r:HALF_EVEN (0 + decimal.pow(37e+1,0.5)) inexact rounded', 19, 0 + decimal.pow(37e+1,0.5));
				AddTestCase('pwsx2495:p2 r:HALF_EVEN (0 + decimal.pow(37e+2,0.5)) inexact rounded', 61, 0 + decimal.pow(37e+2,0.5));
				AddTestCase('pwsx2496:p2 r:HALF_EVEN (0 + decimal.pow(37e+3,0.5)) inexact rounded', 1.9e+2, 0 + decimal.pow(37e+3,0.5));
				AddTestCase('pwsx2497:p2 r:HALF_EVEN (0 + decimal.pow(0.38,0.5)) inexact rounded', 0.62, 0 + decimal.pow(0.38,0.5));
				AddTestCase('pwsx2498:p2 r:HALF_EVEN (0 + decimal.pow(0.038,0.5)) inexact rounded', 0.19, 0 + decimal.pow(0.038,0.5));
				AddTestCase('pwsx2499:p2 r:HALF_EVEN (0 + decimal.pow(38.0e-1,0.5)) inexact rounded', 1.9, 0 + decimal.pow(38.0e-1,0.5));
				AddTestCase('pwsx2500:p2 r:HALF_EVEN (0 + decimal.pow(38.00e-2,0.5)) inexact rounded', 0.62, 0 + decimal.pow(38.00e-2,0.5));
				AddTestCase('pwsx2501:p2 r:HALF_EVEN (0 + decimal.pow(38e-3,0.5)) inexact rounded', 0.19, 0 + decimal.pow(38e-3,0.5));
				AddTestCase('pwsx2502:p2 r:HALF_EVEN (0 + decimal.pow(38e+1,0.5)) inexact rounded', 19, 0 + decimal.pow(38e+1,0.5));
				AddTestCase('pwsx2503:p2 r:HALF_EVEN (0 + decimal.pow(38e+2,0.5)) inexact rounded', 62, 0 + decimal.pow(38e+2,0.5));
				AddTestCase('pwsx2504:p2 r:HALF_EVEN (0 + decimal.pow(38e+3,0.5)) inexact rounded', 1.9e+2, 0 + decimal.pow(38e+3,0.5));
				AddTestCase('pwsx2505:p2 r:HALF_EVEN (0 + decimal.pow(0.39,0.5)) inexact rounded', 0.62, 0 + decimal.pow(0.39,0.5));
				AddTestCase('pwsx2506:p2 r:HALF_EVEN (0 + decimal.pow(0.039,0.5)) inexact rounded', 0.20, 0 + decimal.pow(0.039,0.5));
				AddTestCase('pwsx2507:p2 r:HALF_EVEN (0 + decimal.pow(39.0e-1,0.5)) inexact rounded', 2.0, 0 + decimal.pow(39.0e-1,0.5));
				AddTestCase('pwsx2508:p2 r:HALF_EVEN (0 + decimal.pow(39.00e-2,0.5)) inexact rounded', 0.62, 0 + decimal.pow(39.00e-2,0.5));
				AddTestCase('pwsx2509:p2 r:HALF_EVEN (0 + decimal.pow(39e-3,0.5)) inexact rounded', 0.20, 0 + decimal.pow(39e-3,0.5));
				AddTestCase('pwsx2510:p2 r:HALF_EVEN (0 + decimal.pow(39e+1,0.5)) inexact rounded', 20, 0 + decimal.pow(39e+1,0.5));
				AddTestCase('pwsx2511:p2 r:HALF_EVEN (0 + decimal.pow(39e+2,0.5)) inexact rounded', 62, 0 + decimal.pow(39e+2,0.5));
				AddTestCase('pwsx2512:p2 r:HALF_EVEN (0 + decimal.pow(39e+3,0.5)) inexact rounded', 2.0e+2, 0 + decimal.pow(39e+3,0.5));
				AddTestCase('pwsx2513:p2 r:HALF_EVEN (0 + decimal.pow(0.40,0.5)) inexact rounded', 0.63, 0 + decimal.pow(0.40,0.5));
				AddTestCase('pwsx2514:p2 r:HALF_EVEN (0 + decimal.pow(0.040,0.5)) inexact rounded', 0.20, 0 + decimal.pow(0.040,0.5));
				AddTestCase('pwsx2515:p2 r:HALF_EVEN (0 + decimal.pow(40.0e-1,0.5)) inexact rounded', 2.0, 0 + decimal.pow(40.0e-1,0.5));
				AddTestCase('pwsx2516:p2 r:HALF_EVEN (0 + decimal.pow(40.00e-2,0.5)) inexact rounded', 0.63, 0 + decimal.pow(40.00e-2,0.5));
				AddTestCase('pwsx2517:p2 r:HALF_EVEN (0 + decimal.pow(40e-3,0.5)) inexact rounded', 0.20, 0 + decimal.pow(40e-3,0.5));
				AddTestCase('pwsx2518:p2 r:HALF_EVEN (0 + decimal.pow(40e+1,0.5)) inexact rounded', 20, 0 + decimal.pow(40e+1,0.5));
				AddTestCase('pwsx2519:p2 r:HALF_EVEN (0 + decimal.pow(40e+2,0.5)) inexact rounded', 63, 0 + decimal.pow(40e+2,0.5));
				AddTestCase('pwsx2520:p2 r:HALF_EVEN (0 + decimal.pow(40e+3,0.5)) inexact rounded', 2.0e+2, 0 + decimal.pow(40e+3,0.5));
				AddTestCase('pwsx2521:p2 r:HALF_EVEN (0 + decimal.pow(0.41,0.5)) inexact rounded', 0.64, 0 + decimal.pow(0.41,0.5));
				AddTestCase('pwsx2522:p2 r:HALF_EVEN (0 + decimal.pow(0.041,0.5)) inexact rounded', 0.20, 0 + decimal.pow(0.041,0.5));
				AddTestCase('pwsx2523:p2 r:HALF_EVEN (0 + decimal.pow(41.0e-1,0.5)) inexact rounded', 2.0, 0 + decimal.pow(41.0e-1,0.5));
				AddTestCase('pwsx2524:p2 r:HALF_EVEN (0 + decimal.pow(41.00e-2,0.5)) inexact rounded', 0.64, 0 + decimal.pow(41.00e-2,0.5));
				AddTestCase('pwsx2525:p2 r:HALF_EVEN (0 + decimal.pow(41e-3,0.5)) inexact rounded', 0.20, 0 + decimal.pow(41e-3,0.5));
				AddTestCase('pwsx2526:p2 r:HALF_EVEN (0 + decimal.pow(41e+1,0.5)) inexact rounded', 20, 0 + decimal.pow(41e+1,0.5));
				AddTestCase('pwsx2527:p2 r:HALF_EVEN (0 + decimal.pow(41e+2,0.5)) inexact rounded', 64, 0 + decimal.pow(41e+2,0.5));
				AddTestCase('pwsx2528:p2 r:HALF_EVEN (0 + decimal.pow(41e+3,0.5)) inexact rounded', 2.0e+2, 0 + decimal.pow(41e+3,0.5));
				AddTestCase('pwsx2529:p2 r:HALF_EVEN (0 + decimal.pow(0.42,0.5)) inexact rounded', 0.65, 0 + decimal.pow(0.42,0.5));
				AddTestCase('pwsx2530:p2 r:HALF_EVEN (0 + decimal.pow(0.042,0.5)) inexact rounded', 0.20, 0 + decimal.pow(0.042,0.5));
				AddTestCase('pwsx2531:p2 r:HALF_EVEN (0 + decimal.pow(42.0e-1,0.5)) inexact rounded', 2.0, 0 + decimal.pow(42.0e-1,0.5));
				AddTestCase('pwsx2532:p2 r:HALF_EVEN (0 + decimal.pow(42.00e-2,0.5)) inexact rounded', 0.65, 0 + decimal.pow(42.00e-2,0.5));
				AddTestCase('pwsx2533:p2 r:HALF_EVEN (0 + decimal.pow(42e-3,0.5)) inexact rounded', 0.20, 0 + decimal.pow(42e-3,0.5));
				AddTestCase('pwsx2534:p2 r:HALF_EVEN (0 + decimal.pow(42e+1,0.5)) inexact rounded', 20, 0 + decimal.pow(42e+1,0.5));
				AddTestCase('pwsx2535:p2 r:HALF_EVEN (0 + decimal.pow(42e+2,0.5)) inexact rounded', 65, 0 + decimal.pow(42e+2,0.5));
				AddTestCase('pwsx2536:p2 r:HALF_EVEN (0 + decimal.pow(42e+3,0.5)) inexact rounded', 2.0e+2, 0 + decimal.pow(42e+3,0.5));
				AddTestCase('pwsx2537:p2 r:HALF_EVEN (0 + decimal.pow(0.43,0.5)) inexact rounded', 0.66, 0 + decimal.pow(0.43,0.5));
				AddTestCase('pwsx2538:p2 r:HALF_EVEN (0 + decimal.pow(0.043,0.5)) inexact rounded', 0.21, 0 + decimal.pow(0.043,0.5));
				AddTestCase('pwsx2539:p2 r:HALF_EVEN (0 + decimal.pow(43.0e-1,0.5)) inexact rounded', 2.1, 0 + decimal.pow(43.0e-1,0.5));
				AddTestCase('pwsx2540:p2 r:HALF_EVEN (0 + decimal.pow(43.00e-2,0.5)) inexact rounded', 0.66, 0 + decimal.pow(43.00e-2,0.5));
				AddTestCase('pwsx2541:p2 r:HALF_EVEN (0 + decimal.pow(43e-3,0.5)) inexact rounded', 0.21, 0 + decimal.pow(43e-3,0.5));
				AddTestCase('pwsx2542:p2 r:HALF_EVEN (0 + decimal.pow(43e+1,0.5)) inexact rounded', 21, 0 + decimal.pow(43e+1,0.5));
				AddTestCase('pwsx2543:p2 r:HALF_EVEN (0 + decimal.pow(43e+2,0.5)) inexact rounded', 66, 0 + decimal.pow(43e+2,0.5));
				AddTestCase('pwsx2544:p2 r:HALF_EVEN (0 + decimal.pow(43e+3,0.5)) inexact rounded', 2.1e+2, 0 + decimal.pow(43e+3,0.5));
				AddTestCase('pwsx2545:p2 r:HALF_EVEN (0 + decimal.pow(0.44,0.5)) inexact rounded', 0.66, 0 + decimal.pow(0.44,0.5));
				AddTestCase('pwsx2546:p2 r:HALF_EVEN (0 + decimal.pow(0.044,0.5)) inexact rounded', 0.21, 0 + decimal.pow(0.044,0.5));
				AddTestCase('pwsx2547:p2 r:HALF_EVEN (0 + decimal.pow(44.0e-1,0.5)) inexact rounded', 2.1, 0 + decimal.pow(44.0e-1,0.5));
				AddTestCase('pwsx2548:p2 r:HALF_EVEN (0 + decimal.pow(44.00e-2,0.5)) inexact rounded', 0.66, 0 + decimal.pow(44.00e-2,0.5));
				AddTestCase('pwsx2549:p2 r:HALF_EVEN (0 + decimal.pow(44e-3,0.5)) inexact rounded', 0.21, 0 + decimal.pow(44e-3,0.5));
				AddTestCase('pwsx2550:p2 r:HALF_EVEN (0 + decimal.pow(44e+1,0.5)) inexact rounded', 21, 0 + decimal.pow(44e+1,0.5));
				AddTestCase('pwsx2551:p2 r:HALF_EVEN (0 + decimal.pow(44e+2,0.5)) inexact rounded', 66, 0 + decimal.pow(44e+2,0.5));
				AddTestCase('pwsx2552:p2 r:HALF_EVEN (0 + decimal.pow(44e+3,0.5)) inexact rounded', 2.1e+2, 0 + decimal.pow(44e+3,0.5));
				AddTestCase('pwsx2553:p2 r:HALF_EVEN (0 + decimal.pow(0.45,0.5)) inexact rounded', 0.67, 0 + decimal.pow(0.45,0.5));
				AddTestCase('pwsx2554:p2 r:HALF_EVEN (0 + decimal.pow(0.045,0.5)) inexact rounded', 0.21, 0 + decimal.pow(0.045,0.5));
				AddTestCase('pwsx2555:p2 r:HALF_EVEN (0 + decimal.pow(45.0e-1,0.5)) inexact rounded', 2.1, 0 + decimal.pow(45.0e-1,0.5));
				AddTestCase('pwsx2556:p2 r:HALF_EVEN (0 + decimal.pow(45.00e-2,0.5)) inexact rounded', 0.67, 0 + decimal.pow(45.00e-2,0.5));
				AddTestCase('pwsx2557:p2 r:HALF_EVEN (0 + decimal.pow(45e-3,0.5)) inexact rounded', 0.21, 0 + decimal.pow(45e-3,0.5));
				AddTestCase('pwsx2558:p2 r:HALF_EVEN (0 + decimal.pow(45e+1,0.5)) inexact rounded', 21, 0 + decimal.pow(45e+1,0.5));
				AddTestCase('pwsx2559:p2 r:HALF_EVEN (0 + decimal.pow(45e+2,0.5)) inexact rounded', 67, 0 + decimal.pow(45e+2,0.5));
				AddTestCase('pwsx2560:p2 r:HALF_EVEN (0 + decimal.pow(45e+3,0.5)) inexact rounded', 2.1e+2, 0 + decimal.pow(45e+3,0.5));
				AddTestCase('pwsx2561:p2 r:HALF_EVEN (0 + decimal.pow(0.46,0.5)) inexact rounded', 0.68, 0 + decimal.pow(0.46,0.5));
				AddTestCase('pwsx2562:p2 r:HALF_EVEN (0 + decimal.pow(0.046,0.5)) inexact rounded', 0.21, 0 + decimal.pow(0.046,0.5));
				AddTestCase('pwsx2563:p2 r:HALF_EVEN (0 + decimal.pow(46.0e-1,0.5)) inexact rounded', 2.1, 0 + decimal.pow(46.0e-1,0.5));
				AddTestCase('pwsx2564:p2 r:HALF_EVEN (0 + decimal.pow(46.00e-2,0.5)) inexact rounded', 0.68, 0 + decimal.pow(46.00e-2,0.5));
				AddTestCase('pwsx2565:p2 r:HALF_EVEN (0 + decimal.pow(46e-3,0.5)) inexact rounded', 0.21, 0 + decimal.pow(46e-3,0.5));
				AddTestCase('pwsx2566:p2 r:HALF_EVEN (0 + decimal.pow(46e+1,0.5)) inexact rounded', 21, 0 + decimal.pow(46e+1,0.5));
				AddTestCase('pwsx2567:p2 r:HALF_EVEN (0 + decimal.pow(46e+2,0.5)) inexact rounded', 68, 0 + decimal.pow(46e+2,0.5));
				AddTestCase('pwsx2568:p2 r:HALF_EVEN (0 + decimal.pow(46e+3,0.5)) inexact rounded', 2.1e+2, 0 + decimal.pow(46e+3,0.5));
				AddTestCase('pwsx2569:p2 r:HALF_EVEN (0 + decimal.pow(0.47,0.5)) inexact rounded', 0.69, 0 + decimal.pow(0.47,0.5));
				AddTestCase('pwsx2570:p2 r:HALF_EVEN (0 + decimal.pow(0.047,0.5)) inexact rounded', 0.22, 0 + decimal.pow(0.047,0.5));
				AddTestCase('pwsx2571:p2 r:HALF_EVEN (0 + decimal.pow(47.0e-1,0.5)) inexact rounded', 2.2, 0 + decimal.pow(47.0e-1,0.5));
				AddTestCase('pwsx2572:p2 r:HALF_EVEN (0 + decimal.pow(47.00e-2,0.5)) inexact rounded', 0.69, 0 + decimal.pow(47.00e-2,0.5));
				AddTestCase('pwsx2573:p2 r:HALF_EVEN (0 + decimal.pow(47e-3,0.5)) inexact rounded', 0.22, 0 + decimal.pow(47e-3,0.5));
				AddTestCase('pwsx2574:p2 r:HALF_EVEN (0 + decimal.pow(47e+1,0.5)) inexact rounded', 22, 0 + decimal.pow(47e+1,0.5));
				AddTestCase('pwsx2575:p2 r:HALF_EVEN (0 + decimal.pow(47e+2,0.5)) inexact rounded', 69, 0 + decimal.pow(47e+2,0.5));
				AddTestCase('pwsx2576:p2 r:HALF_EVEN (0 + decimal.pow(47e+3,0.5)) inexact rounded', 2.2e+2, 0 + decimal.pow(47e+3,0.5));
				AddTestCase('pwsx2577:p2 r:HALF_EVEN (0 + decimal.pow(0.48,0.5)) inexact rounded', 0.69, 0 + decimal.pow(0.48,0.5));
				AddTestCase('pwsx2578:p2 r:HALF_EVEN (0 + decimal.pow(0.048,0.5)) inexact rounded', 0.22, 0 + decimal.pow(0.048,0.5));
				AddTestCase('pwsx2579:p2 r:HALF_EVEN (0 + decimal.pow(48.0e-1,0.5)) inexact rounded', 2.2, 0 + decimal.pow(48.0e-1,0.5));
				AddTestCase('pwsx2580:p2 r:HALF_EVEN (0 + decimal.pow(48.00e-2,0.5)) inexact rounded', 0.69, 0 + decimal.pow(48.00e-2,0.5));
				AddTestCase('pwsx2581:p2 r:HALF_EVEN (0 + decimal.pow(48e-3,0.5)) inexact rounded', 0.22, 0 + decimal.pow(48e-3,0.5));
				AddTestCase('pwsx2582:p2 r:HALF_EVEN (0 + decimal.pow(48e+1,0.5)) inexact rounded', 22, 0 + decimal.pow(48e+1,0.5));
				AddTestCase('pwsx2583:p2 r:HALF_EVEN (0 + decimal.pow(48e+2,0.5)) inexact rounded', 69, 0 + decimal.pow(48e+2,0.5));
				AddTestCase('pwsx2584:p2 r:HALF_EVEN (0 + decimal.pow(48e+3,0.5)) inexact rounded', 2.2e+2, 0 + decimal.pow(48e+3,0.5));
				AddTestCase('pwsx2585:p2 r:HALF_EVEN (0 + decimal.pow(0.49,0.5)) inexact rounded', 0.70, 0 + decimal.pow(0.49,0.5));
				AddTestCase('pwsx2586:p2 r:HALF_EVEN (0 + decimal.pow(0.049,0.5)) inexact rounded', 0.22, 0 + decimal.pow(0.049,0.5));
				AddTestCase('pwsx2587:p2 r:HALF_EVEN (0 + decimal.pow(49.0e-1,0.5)) inexact rounded', 2.2, 0 + decimal.pow(49.0e-1,0.5));
				AddTestCase('pwsx2588:p2 r:HALF_EVEN (0 + decimal.pow(49.00e-2,0.5)) inexact rounded', 0.70, 0 + decimal.pow(49.00e-2,0.5));
				AddTestCase('pwsx2589:p2 r:HALF_EVEN (0 + decimal.pow(49e-3,0.5)) inexact rounded', 0.22, 0 + decimal.pow(49e-3,0.5));
				AddTestCase('pwsx2590:p2 r:HALF_EVEN (0 + decimal.pow(49e+1,0.5)) inexact rounded', 22, 0 + decimal.pow(49e+1,0.5));
				AddTestCase('pwsx2591:p2 r:HALF_EVEN (0 + decimal.pow(49e+2,0.5)) inexact rounded', 70, 0 + decimal.pow(49e+2,0.5));
				AddTestCase('pwsx2592:p2 r:HALF_EVEN (0 + decimal.pow(49e+3,0.5)) inexact rounded', 2.2e+2, 0 + decimal.pow(49e+3,0.5));
				AddTestCase('pwsx2593:p2 r:HALF_EVEN (0 + decimal.pow(0.50,0.5)) inexact rounded', 0.71, 0 + decimal.pow(0.50,0.5));
				AddTestCase('pwsx2594:p2 r:HALF_EVEN (0 + decimal.pow(0.050,0.5)) inexact rounded', 0.22, 0 + decimal.pow(0.050,0.5));
				AddTestCase('pwsx2595:p2 r:HALF_EVEN (0 + decimal.pow(50.0e-1,0.5)) inexact rounded', 2.2, 0 + decimal.pow(50.0e-1,0.5));
				AddTestCase('pwsx2596:p2 r:HALF_EVEN (0 + decimal.pow(50.00e-2,0.5)) inexact rounded', 0.71, 0 + decimal.pow(50.00e-2,0.5));
				AddTestCase('pwsx2597:p2 r:HALF_EVEN (0 + decimal.pow(50e-3,0.5)) inexact rounded', 0.22, 0 + decimal.pow(50e-3,0.5));
				AddTestCase('pwsx2598:p2 r:HALF_EVEN (0 + decimal.pow(50e+1,0.5)) inexact rounded', 22, 0 + decimal.pow(50e+1,0.5));
				AddTestCase('pwsx2599:p2 r:HALF_EVEN (0 + decimal.pow(50e+2,0.5)) inexact rounded', 71, 0 + decimal.pow(50e+2,0.5));
				AddTestCase('pwsx2600:p2 r:HALF_EVEN (0 + decimal.pow(50e+3,0.5)) inexact rounded', 2.2e+2, 0 + decimal.pow(50e+3,0.5));
				AddTestCase('pwsx2601:p2 r:HALF_EVEN (0 + decimal.pow(0.51,0.5)) inexact rounded', 0.71, 0 + decimal.pow(0.51,0.5));
				AddTestCase('pwsx2602:p2 r:HALF_EVEN (0 + decimal.pow(0.051,0.5)) inexact rounded', 0.23, 0 + decimal.pow(0.051,0.5));
				AddTestCase('pwsx2603:p2 r:HALF_EVEN (0 + decimal.pow(51.0e-1,0.5)) inexact rounded', 2.3, 0 + decimal.pow(51.0e-1,0.5));
				AddTestCase('pwsx2604:p2 r:HALF_EVEN (0 + decimal.pow(51.00e-2,0.5)) inexact rounded', 0.71, 0 + decimal.pow(51.00e-2,0.5));
				AddTestCase('pwsx2605:p2 r:HALF_EVEN (0 + decimal.pow(51e-3,0.5)) inexact rounded', 0.23, 0 + decimal.pow(51e-3,0.5));
				AddTestCase('pwsx2606:p2 r:HALF_EVEN (0 + decimal.pow(51e+1,0.5)) inexact rounded', 23, 0 + decimal.pow(51e+1,0.5));
				AddTestCase('pwsx2607:p2 r:HALF_EVEN (0 + decimal.pow(51e+2,0.5)) inexact rounded', 71, 0 + decimal.pow(51e+2,0.5));
				AddTestCase('pwsx2608:p2 r:HALF_EVEN (0 + decimal.pow(51e+3,0.5)) inexact rounded', 2.3e+2, 0 + decimal.pow(51e+3,0.5));
				AddTestCase('pwsx2609:p2 r:HALF_EVEN (0 + decimal.pow(0.52,0.5)) inexact rounded', 0.72, 0 + decimal.pow(0.52,0.5));
				AddTestCase('pwsx2610:p2 r:HALF_EVEN (0 + decimal.pow(0.052,0.5)) inexact rounded', 0.23, 0 + decimal.pow(0.052,0.5));
				AddTestCase('pwsx2611:p2 r:HALF_EVEN (0 + decimal.pow(52.0e-1,0.5)) inexact rounded', 2.3, 0 + decimal.pow(52.0e-1,0.5));
				AddTestCase('pwsx2612:p2 r:HALF_EVEN (0 + decimal.pow(52.00e-2,0.5)) inexact rounded', 0.72, 0 + decimal.pow(52.00e-2,0.5));
				AddTestCase('pwsx2613:p2 r:HALF_EVEN (0 + decimal.pow(52e-3,0.5)) inexact rounded', 0.23, 0 + decimal.pow(52e-3,0.5));
				AddTestCase('pwsx2614:p2 r:HALF_EVEN (0 + decimal.pow(52e+1,0.5)) inexact rounded', 23, 0 + decimal.pow(52e+1,0.5));
				AddTestCase('pwsx2615:p2 r:HALF_EVEN (0 + decimal.pow(52e+2,0.5)) inexact rounded', 72, 0 + decimal.pow(52e+2,0.5));
				AddTestCase('pwsx2616:p2 r:HALF_EVEN (0 + decimal.pow(52e+3,0.5)) inexact rounded', 2.3e+2, 0 + decimal.pow(52e+3,0.5));
				AddTestCase('pwsx2617:p2 r:HALF_EVEN (0 + decimal.pow(0.53,0.5)) inexact rounded', 0.73, 0 + decimal.pow(0.53,0.5));
				AddTestCase('pwsx2618:p2 r:HALF_EVEN (0 + decimal.pow(0.053,0.5)) inexact rounded', 0.23, 0 + decimal.pow(0.053,0.5));
				AddTestCase('pwsx2619:p2 r:HALF_EVEN (0 + decimal.pow(53.0e-1,0.5)) inexact rounded', 2.3, 0 + decimal.pow(53.0e-1,0.5));
				AddTestCase('pwsx2620:p2 r:HALF_EVEN (0 + decimal.pow(53.00e-2,0.5)) inexact rounded', 0.73, 0 + decimal.pow(53.00e-2,0.5));
				AddTestCase('pwsx2621:p2 r:HALF_EVEN (0 + decimal.pow(53e-3,0.5)) inexact rounded', 0.23, 0 + decimal.pow(53e-3,0.5));
				AddTestCase('pwsx2622:p2 r:HALF_EVEN (0 + decimal.pow(53e+1,0.5)) inexact rounded', 23, 0 + decimal.pow(53e+1,0.5));
				AddTestCase('pwsx2623:p2 r:HALF_EVEN (0 + decimal.pow(53e+2,0.5)) inexact rounded', 73, 0 + decimal.pow(53e+2,0.5));
				AddTestCase('pwsx2624:p2 r:HALF_EVEN (0 + decimal.pow(53e+3,0.5)) inexact rounded', 2.3e+2, 0 + decimal.pow(53e+3,0.5));
				AddTestCase('pwsx2625:p2 r:HALF_EVEN (0 + decimal.pow(0.54,0.5)) inexact rounded', 0.73, 0 + decimal.pow(0.54,0.5));
				AddTestCase('pwsx2626:p2 r:HALF_EVEN (0 + decimal.pow(0.054,0.5)) inexact rounded', 0.23, 0 + decimal.pow(0.054,0.5));
				AddTestCase('pwsx2627:p2 r:HALF_EVEN (0 + decimal.pow(54.0e-1,0.5)) inexact rounded', 2.3, 0 + decimal.pow(54.0e-1,0.5));
				AddTestCase('pwsx2628:p2 r:HALF_EVEN (0 + decimal.pow(54.00e-2,0.5)) inexact rounded', 0.73, 0 + decimal.pow(54.00e-2,0.5));
				AddTestCase('pwsx2629:p2 r:HALF_EVEN (0 + decimal.pow(54e-3,0.5)) inexact rounded', 0.23, 0 + decimal.pow(54e-3,0.5));
				AddTestCase('pwsx2630:p2 r:HALF_EVEN (0 + decimal.pow(54e+1,0.5)) inexact rounded', 23, 0 + decimal.pow(54e+1,0.5));
				AddTestCase('pwsx2631:p2 r:HALF_EVEN (0 + decimal.pow(54e+2,0.5)) inexact rounded', 73, 0 + decimal.pow(54e+2,0.5));
				AddTestCase('pwsx2632:p2 r:HALF_EVEN (0 + decimal.pow(54e+3,0.5)) inexact rounded', 2.3e+2, 0 + decimal.pow(54e+3,0.5));
				AddTestCase('pwsx2633:p2 r:HALF_EVEN (0 + decimal.pow(0.55,0.5)) inexact rounded', 0.74, 0 + decimal.pow(0.55,0.5));
				AddTestCase('pwsx2634:p2 r:HALF_EVEN (0 + decimal.pow(0.055,0.5)) inexact rounded', 0.23, 0 + decimal.pow(0.055,0.5));
				AddTestCase('pwsx2635:p2 r:HALF_EVEN (0 + decimal.pow(55.0e-1,0.5)) inexact rounded', 2.3, 0 + decimal.pow(55.0e-1,0.5));
				AddTestCase('pwsx2636:p2 r:HALF_EVEN (0 + decimal.pow(55.00e-2,0.5)) inexact rounded', 0.74, 0 + decimal.pow(55.00e-2,0.5));
				AddTestCase('pwsx2637:p2 r:HALF_EVEN (0 + decimal.pow(55e-3,0.5)) inexact rounded', 0.23, 0 + decimal.pow(55e-3,0.5));
				AddTestCase('pwsx2638:p2 r:HALF_EVEN (0 + decimal.pow(55e+1,0.5)) inexact rounded', 23, 0 + decimal.pow(55e+1,0.5));
				AddTestCase('pwsx2639:p2 r:HALF_EVEN (0 + decimal.pow(55e+2,0.5)) inexact rounded', 74, 0 + decimal.pow(55e+2,0.5));
				AddTestCase('pwsx2640:p2 r:HALF_EVEN (0 + decimal.pow(55e+3,0.5)) inexact rounded', 2.3e+2, 0 + decimal.pow(55e+3,0.5));
				AddTestCase('pwsx2641:p2 r:HALF_EVEN (0 + decimal.pow(0.56,0.5)) inexact rounded', 0.75, 0 + decimal.pow(0.56,0.5));
				AddTestCase('pwsx2642:p2 r:HALF_EVEN (0 + decimal.pow(0.056,0.5)) inexact rounded', 0.24, 0 + decimal.pow(0.056,0.5));
				AddTestCase('pwsx2643:p2 r:HALF_EVEN (0 + decimal.pow(56.0e-1,0.5)) inexact rounded', 2.4, 0 + decimal.pow(56.0e-1,0.5));
				AddTestCase('pwsx2644:p2 r:HALF_EVEN (0 + decimal.pow(56.00e-2,0.5)) inexact rounded', 0.75, 0 + decimal.pow(56.00e-2,0.5));
				AddTestCase('pwsx2645:p2 r:HALF_EVEN (0 + decimal.pow(56e-3,0.5)) inexact rounded', 0.24, 0 + decimal.pow(56e-3,0.5));
				AddTestCase('pwsx2646:p2 r:HALF_EVEN (0 + decimal.pow(56e+1,0.5)) inexact rounded', 24, 0 + decimal.pow(56e+1,0.5));
				AddTestCase('pwsx2647:p2 r:HALF_EVEN (0 + decimal.pow(56e+2,0.5)) inexact rounded', 75, 0 + decimal.pow(56e+2,0.5));
				AddTestCase('pwsx2648:p2 r:HALF_EVEN (0 + decimal.pow(56e+3,0.5)) inexact rounded', 2.4e+2, 0 + decimal.pow(56e+3,0.5));
				AddTestCase('pwsx2649:p2 r:HALF_EVEN (0 + decimal.pow(0.57,0.5)) inexact rounded', 0.75, 0 + decimal.pow(0.57,0.5));
				AddTestCase('pwsx2650:p2 r:HALF_EVEN (0 + decimal.pow(0.057,0.5)) inexact rounded', 0.24, 0 + decimal.pow(0.057,0.5));
				AddTestCase('pwsx2651:p2 r:HALF_EVEN (0 + decimal.pow(57.0e-1,0.5)) inexact rounded', 2.4, 0 + decimal.pow(57.0e-1,0.5));
				AddTestCase('pwsx2652:p2 r:HALF_EVEN (0 + decimal.pow(57.00e-2,0.5)) inexact rounded', 0.75, 0 + decimal.pow(57.00e-2,0.5));
				AddTestCase('pwsx2653:p2 r:HALF_EVEN (0 + decimal.pow(57e-3,0.5)) inexact rounded', 0.24, 0 + decimal.pow(57e-3,0.5));
				AddTestCase('pwsx2654:p2 r:HALF_EVEN (0 + decimal.pow(57e+1,0.5)) inexact rounded', 24, 0 + decimal.pow(57e+1,0.5));
				AddTestCase('pwsx2655:p2 r:HALF_EVEN (0 + decimal.pow(57e+2,0.5)) inexact rounded', 75, 0 + decimal.pow(57e+2,0.5));
				AddTestCase('pwsx2656:p2 r:HALF_EVEN (0 + decimal.pow(57e+3,0.5)) inexact rounded', 2.4e+2, 0 + decimal.pow(57e+3,0.5));
				AddTestCase('pwsx2657:p2 r:HALF_EVEN (0 + decimal.pow(0.58,0.5)) inexact rounded', 0.76, 0 + decimal.pow(0.58,0.5));
				AddTestCase('pwsx2658:p2 r:HALF_EVEN (0 + decimal.pow(0.058,0.5)) inexact rounded', 0.24, 0 + decimal.pow(0.058,0.5));
				AddTestCase('pwsx2659:p2 r:HALF_EVEN (0 + decimal.pow(58.0e-1,0.5)) inexact rounded', 2.4, 0 + decimal.pow(58.0e-1,0.5));
				AddTestCase('pwsx2660:p2 r:HALF_EVEN (0 + decimal.pow(58.00e-2,0.5)) inexact rounded', 0.76, 0 + decimal.pow(58.00e-2,0.5));
				AddTestCase('pwsx2661:p2 r:HALF_EVEN (0 + decimal.pow(58e-3,0.5)) inexact rounded', 0.24, 0 + decimal.pow(58e-3,0.5));
				AddTestCase('pwsx2662:p2 r:HALF_EVEN (0 + decimal.pow(58e+1,0.5)) inexact rounded', 24, 0 + decimal.pow(58e+1,0.5));
				AddTestCase('pwsx2663:p2 r:HALF_EVEN (0 + decimal.pow(58e+2,0.5)) inexact rounded', 76, 0 + decimal.pow(58e+2,0.5));
				AddTestCase('pwsx2664:p2 r:HALF_EVEN (0 + decimal.pow(58e+3,0.5)) inexact rounded', 2.4e+2, 0 + decimal.pow(58e+3,0.5));
				AddTestCase('pwsx2665:p2 r:HALF_EVEN (0 + decimal.pow(0.59,0.5)) inexact rounded', 0.77, 0 + decimal.pow(0.59,0.5));
				AddTestCase('pwsx2666:p2 r:HALF_EVEN (0 + decimal.pow(0.059,0.5)) inexact rounded', 0.24, 0 + decimal.pow(0.059,0.5));
				AddTestCase('pwsx2667:p2 r:HALF_EVEN (0 + decimal.pow(59.0e-1,0.5)) inexact rounded', 2.4, 0 + decimal.pow(59.0e-1,0.5));
				AddTestCase('pwsx2668:p2 r:HALF_EVEN (0 + decimal.pow(59.00e-2,0.5)) inexact rounded', 0.77, 0 + decimal.pow(59.00e-2,0.5));
				AddTestCase('pwsx2669:p2 r:HALF_EVEN (0 + decimal.pow(59e-3,0.5)) inexact rounded', 0.24, 0 + decimal.pow(59e-3,0.5));
				AddTestCase('pwsx2670:p2 r:HALF_EVEN (0 + decimal.pow(59e+1,0.5)) inexact rounded', 24, 0 + decimal.pow(59e+1,0.5));
				AddTestCase('pwsx2671:p2 r:HALF_EVEN (0 + decimal.pow(59e+2,0.5)) inexact rounded', 77, 0 + decimal.pow(59e+2,0.5));
				AddTestCase('pwsx2672:p2 r:HALF_EVEN (0 + decimal.pow(59e+3,0.5)) inexact rounded', 2.4e+2, 0 + decimal.pow(59e+3,0.5));
				AddTestCase('pwsx2673:p2 r:HALF_EVEN (0 + decimal.pow(0.60,0.5)) inexact rounded', 0.77, 0 + decimal.pow(0.60,0.5));
				AddTestCase('pwsx2674:p2 r:HALF_EVEN (0 + decimal.pow(0.060,0.5)) inexact rounded', 0.24, 0 + decimal.pow(0.060,0.5));
				AddTestCase('pwsx2675:p2 r:HALF_EVEN (0 + decimal.pow(60.0e-1,0.5)) inexact rounded', 2.4, 0 + decimal.pow(60.0e-1,0.5));
				AddTestCase('pwsx2676:p2 r:HALF_EVEN (0 + decimal.pow(60.00e-2,0.5)) inexact rounded', 0.77, 0 + decimal.pow(60.00e-2,0.5));
				AddTestCase('pwsx2677:p2 r:HALF_EVEN (0 + decimal.pow(60e-3,0.5)) inexact rounded', 0.24, 0 + decimal.pow(60e-3,0.5));
				AddTestCase('pwsx2678:p2 r:HALF_EVEN (0 + decimal.pow(60e+1,0.5)) inexact rounded', 24, 0 + decimal.pow(60e+1,0.5));
				AddTestCase('pwsx2679:p2 r:HALF_EVEN (0 + decimal.pow(60e+2,0.5)) inexact rounded', 77, 0 + decimal.pow(60e+2,0.5));
				AddTestCase('pwsx2680:p2 r:HALF_EVEN (0 + decimal.pow(60e+3,0.5)) inexact rounded', 2.4e+2, 0 + decimal.pow(60e+3,0.5));
				AddTestCase('pwsx2681:p2 r:HALF_EVEN (0 + decimal.pow(0.61,0.5)) inexact rounded', 0.78, 0 + decimal.pow(0.61,0.5));
				AddTestCase('pwsx2682:p2 r:HALF_EVEN (0 + decimal.pow(0.061,0.5)) inexact rounded', 0.25, 0 + decimal.pow(0.061,0.5));
				AddTestCase('pwsx2683:p2 r:HALF_EVEN (0 + decimal.pow(61.0e-1,0.5)) inexact rounded', 2.5, 0 + decimal.pow(61.0e-1,0.5));
				AddTestCase('pwsx2684:p2 r:HALF_EVEN (0 + decimal.pow(61.00e-2,0.5)) inexact rounded', 0.78, 0 + decimal.pow(61.00e-2,0.5));
				AddTestCase('pwsx2685:p2 r:HALF_EVEN (0 + decimal.pow(61e-3,0.5)) inexact rounded', 0.25, 0 + decimal.pow(61e-3,0.5));
				AddTestCase('pwsx2686:p2 r:HALF_EVEN (0 + decimal.pow(61e+1,0.5)) inexact rounded', 25, 0 + decimal.pow(61e+1,0.5));
				AddTestCase('pwsx2687:p2 r:HALF_EVEN (0 + decimal.pow(61e+2,0.5)) inexact rounded', 78, 0 + decimal.pow(61e+2,0.5));
				AddTestCase('pwsx2688:p2 r:HALF_EVEN (0 + decimal.pow(61e+3,0.5)) inexact rounded', 2.5e+2, 0 + decimal.pow(61e+3,0.5));
				AddTestCase('pwsx2689:p2 r:HALF_EVEN (0 + decimal.pow(0.62,0.5)) inexact rounded', 0.79, 0 + decimal.pow(0.62,0.5));
				AddTestCase('pwsx2690:p2 r:HALF_EVEN (0 + decimal.pow(0.062,0.5)) inexact rounded', 0.25, 0 + decimal.pow(0.062,0.5));
				AddTestCase('pwsx2691:p2 r:HALF_EVEN (0 + decimal.pow(62.0e-1,0.5)) inexact rounded', 2.5, 0 + decimal.pow(62.0e-1,0.5));
				AddTestCase('pwsx2692:p2 r:HALF_EVEN (0 + decimal.pow(62.00e-2,0.5)) inexact rounded', 0.79, 0 + decimal.pow(62.00e-2,0.5));
				AddTestCase('pwsx2693:p2 r:HALF_EVEN (0 + decimal.pow(62e-3,0.5)) inexact rounded', 0.25, 0 + decimal.pow(62e-3,0.5));
				AddTestCase('pwsx2694:p2 r:HALF_EVEN (0 + decimal.pow(62e+1,0.5)) inexact rounded', 25, 0 + decimal.pow(62e+1,0.5));
				AddTestCase('pwsx2695:p2 r:HALF_EVEN (0 + decimal.pow(62e+2,0.5)) inexact rounded', 79, 0 + decimal.pow(62e+2,0.5));
				AddTestCase('pwsx2696:p2 r:HALF_EVEN (0 + decimal.pow(62e+3,0.5)) inexact rounded', 2.5e+2, 0 + decimal.pow(62e+3,0.5));
				AddTestCase('pwsx2697:p2 r:HALF_EVEN (0 + decimal.pow(0.63,0.5)) inexact rounded', 0.79, 0 + decimal.pow(0.63,0.5));
				AddTestCase('pwsx2698:p2 r:HALF_EVEN (0 + decimal.pow(0.063,0.5)) inexact rounded', 0.25, 0 + decimal.pow(0.063,0.5));
				AddTestCase('pwsx2699:p2 r:HALF_EVEN (0 + decimal.pow(63.0e-1,0.5)) inexact rounded', 2.5, 0 + decimal.pow(63.0e-1,0.5));
				AddTestCase('pwsx2700:p2 r:HALF_EVEN (0 + decimal.pow(63.00e-2,0.5)) inexact rounded', 0.79, 0 + decimal.pow(63.00e-2,0.5));
				AddTestCase('pwsx2701:p2 r:HALF_EVEN (0 + decimal.pow(63e-3,0.5)) inexact rounded', 0.25, 0 + decimal.pow(63e-3,0.5));
				AddTestCase('pwsx2702:p2 r:HALF_EVEN (0 + decimal.pow(63e+1,0.5)) inexact rounded', 25, 0 + decimal.pow(63e+1,0.5));
				AddTestCase('pwsx2703:p2 r:HALF_EVEN (0 + decimal.pow(63e+2,0.5)) inexact rounded', 79, 0 + decimal.pow(63e+2,0.5));
				AddTestCase('pwsx2704:p2 r:HALF_EVEN (0 + decimal.pow(63e+3,0.5)) inexact rounded', 2.5e+2, 0 + decimal.pow(63e+3,0.5));
				AddTestCase('pwsx2705:p2 r:HALF_EVEN (0 + decimal.pow(0.64,0.5)) inexact rounded', 0.80, 0 + decimal.pow(0.64,0.5));
				AddTestCase('pwsx2706:p2 r:HALF_EVEN (0 + decimal.pow(0.064,0.5)) inexact rounded', 0.25, 0 + decimal.pow(0.064,0.5));
				AddTestCase('pwsx2707:p2 r:HALF_EVEN (0 + decimal.pow(64.0e-1,0.5)) inexact rounded', 2.5, 0 + decimal.pow(64.0e-1,0.5));
				AddTestCase('pwsx2708:p2 r:HALF_EVEN (0 + decimal.pow(64.00e-2,0.5)) inexact rounded', 0.80, 0 + decimal.pow(64.00e-2,0.5));
				AddTestCase('pwsx2709:p2 r:HALF_EVEN (0 + decimal.pow(64e-3,0.5)) inexact rounded', 0.25, 0 + decimal.pow(64e-3,0.5));
				AddTestCase('pwsx2710:p2 r:HALF_EVEN (0 + decimal.pow(64e+1,0.5)) inexact rounded', 25, 0 + decimal.pow(64e+1,0.5));
				AddTestCase('pwsx2711:p2 r:HALF_EVEN (0 + decimal.pow(64e+2,0.5)) inexact rounded', 80, 0 + decimal.pow(64e+2,0.5));
				AddTestCase('pwsx2712:p2 r:HALF_EVEN (0 + decimal.pow(64e+3,0.5)) inexact rounded', 2.5e+2, 0 + decimal.pow(64e+3,0.5));
				AddTestCase('pwsx2713:p2 r:HALF_EVEN (0 + decimal.pow(0.65,0.5)) inexact rounded', 0.81, 0 + decimal.pow(0.65,0.5));
				AddTestCase('pwsx2714:p2 r:HALF_EVEN (0 + decimal.pow(0.065,0.5)) inexact rounded', 0.25, 0 + decimal.pow(0.065,0.5));
				AddTestCase('pwsx2715:p2 r:HALF_EVEN (0 + decimal.pow(65.0e-1,0.5)) inexact rounded', 2.5, 0 + decimal.pow(65.0e-1,0.5));
				AddTestCase('pwsx2716:p2 r:HALF_EVEN (0 + decimal.pow(65.00e-2,0.5)) inexact rounded', 0.81, 0 + decimal.pow(65.00e-2,0.5));
				AddTestCase('pwsx2717:p2 r:HALF_EVEN (0 + decimal.pow(65e-3,0.5)) inexact rounded', 0.25, 0 + decimal.pow(65e-3,0.5));
				AddTestCase('pwsx2718:p2 r:HALF_EVEN (0 + decimal.pow(65e+1,0.5)) inexact rounded', 25, 0 + decimal.pow(65e+1,0.5));
				AddTestCase('pwsx2719:p2 r:HALF_EVEN (0 + decimal.pow(65e+2,0.5)) inexact rounded', 81, 0 + decimal.pow(65e+2,0.5));
				AddTestCase('pwsx2720:p2 r:HALF_EVEN (0 + decimal.pow(65e+3,0.5)) inexact rounded', 2.5e+2, 0 + decimal.pow(65e+3,0.5));
				AddTestCase('pwsx2721:p2 r:HALF_EVEN (0 + decimal.pow(0.66,0.5)) inexact rounded', 0.81, 0 + decimal.pow(0.66,0.5));
				AddTestCase('pwsx2722:p2 r:HALF_EVEN (0 + decimal.pow(0.066,0.5)) inexact rounded', 0.26, 0 + decimal.pow(0.066,0.5));
				AddTestCase('pwsx2723:p2 r:HALF_EVEN (0 + decimal.pow(66.0e-1,0.5)) inexact rounded', 2.6, 0 + decimal.pow(66.0e-1,0.5));
				AddTestCase('pwsx2724:p2 r:HALF_EVEN (0 + decimal.pow(66.00e-2,0.5)) inexact rounded', 0.81, 0 + decimal.pow(66.00e-2,0.5));
				AddTestCase('pwsx2725:p2 r:HALF_EVEN (0 + decimal.pow(66e-3,0.5)) inexact rounded', 0.26, 0 + decimal.pow(66e-3,0.5));
				AddTestCase('pwsx2726:p2 r:HALF_EVEN (0 + decimal.pow(66e+1,0.5)) inexact rounded', 26, 0 + decimal.pow(66e+1,0.5));
				AddTestCase('pwsx2727:p2 r:HALF_EVEN (0 + decimal.pow(66e+2,0.5)) inexact rounded', 81, 0 + decimal.pow(66e+2,0.5));
				AddTestCase('pwsx2728:p2 r:HALF_EVEN (0 + decimal.pow(66e+3,0.5)) inexact rounded', 2.6e+2, 0 + decimal.pow(66e+3,0.5));
				AddTestCase('pwsx2729:p2 r:HALF_EVEN (0 + decimal.pow(0.67,0.5)) inexact rounded', 0.82, 0 + decimal.pow(0.67,0.5));
				AddTestCase('pwsx2730:p2 r:HALF_EVEN (0 + decimal.pow(0.067,0.5)) inexact rounded', 0.26, 0 + decimal.pow(0.067,0.5));
				AddTestCase('pwsx2731:p2 r:HALF_EVEN (0 + decimal.pow(67.0e-1,0.5)) inexact rounded', 2.6, 0 + decimal.pow(67.0e-1,0.5));
				AddTestCase('pwsx2732:p2 r:HALF_EVEN (0 + decimal.pow(67.00e-2,0.5)) inexact rounded', 0.82, 0 + decimal.pow(67.00e-2,0.5));
				AddTestCase('pwsx2733:p2 r:HALF_EVEN (0 + decimal.pow(67e-3,0.5)) inexact rounded', 0.26, 0 + decimal.pow(67e-3,0.5));
				AddTestCase('pwsx2734:p2 r:HALF_EVEN (0 + decimal.pow(67e+1,0.5)) inexact rounded', 26, 0 + decimal.pow(67e+1,0.5));
				AddTestCase('pwsx2735:p2 r:HALF_EVEN (0 + decimal.pow(67e+2,0.5)) inexact rounded', 82, 0 + decimal.pow(67e+2,0.5));
				AddTestCase('pwsx2736:p2 r:HALF_EVEN (0 + decimal.pow(67e+3,0.5)) inexact rounded', 2.6e+2, 0 + decimal.pow(67e+3,0.5));
				AddTestCase('pwsx2737:p2 r:HALF_EVEN (0 + decimal.pow(0.68,0.5)) inexact rounded', 0.82, 0 + decimal.pow(0.68,0.5));
				AddTestCase('pwsx2738:p2 r:HALF_EVEN (0 + decimal.pow(0.068,0.5)) inexact rounded', 0.26, 0 + decimal.pow(0.068,0.5));
				AddTestCase('pwsx2739:p2 r:HALF_EVEN (0 + decimal.pow(68.0e-1,0.5)) inexact rounded', 2.6, 0 + decimal.pow(68.0e-1,0.5));
				AddTestCase('pwsx2740:p2 r:HALF_EVEN (0 + decimal.pow(68.00e-2,0.5)) inexact rounded', 0.82, 0 + decimal.pow(68.00e-2,0.5));
				AddTestCase('pwsx2741:p2 r:HALF_EVEN (0 + decimal.pow(68e-3,0.5)) inexact rounded', 0.26, 0 + decimal.pow(68e-3,0.5));
				AddTestCase('pwsx2742:p2 r:HALF_EVEN (0 + decimal.pow(68e+1,0.5)) inexact rounded', 26, 0 + decimal.pow(68e+1,0.5));
				AddTestCase('pwsx2743:p2 r:HALF_EVEN (0 + decimal.pow(68e+2,0.5)) inexact rounded', 82, 0 + decimal.pow(68e+2,0.5));
				AddTestCase('pwsx2744:p2 r:HALF_EVEN (0 + decimal.pow(68e+3,0.5)) inexact rounded', 2.6e+2, 0 + decimal.pow(68e+3,0.5));
				AddTestCase('pwsx2745:p2 r:HALF_EVEN (0 + decimal.pow(0.69,0.5)) inexact rounded', 0.83, 0 + decimal.pow(0.69,0.5));
				AddTestCase('pwsx2746:p2 r:HALF_EVEN (0 + decimal.pow(0.069,0.5)) inexact rounded', 0.26, 0 + decimal.pow(0.069,0.5));
				AddTestCase('pwsx2747:p2 r:HALF_EVEN (0 + decimal.pow(69.0e-1,0.5)) inexact rounded', 2.6, 0 + decimal.pow(69.0e-1,0.5));
				AddTestCase('pwsx2748:p2 r:HALF_EVEN (0 + decimal.pow(69.00e-2,0.5)) inexact rounded', 0.83, 0 + decimal.pow(69.00e-2,0.5));
				AddTestCase('pwsx2749:p2 r:HALF_EVEN (0 + decimal.pow(69e-3,0.5)) inexact rounded', 0.26, 0 + decimal.pow(69e-3,0.5));
				AddTestCase('pwsx2750:p2 r:HALF_EVEN (0 + decimal.pow(69e+1,0.5)) inexact rounded', 26, 0 + decimal.pow(69e+1,0.5));
				AddTestCase('pwsx2751:p2 r:HALF_EVEN (0 + decimal.pow(69e+2,0.5)) inexact rounded', 83, 0 + decimal.pow(69e+2,0.5));
				AddTestCase('pwsx2752:p2 r:HALF_EVEN (0 + decimal.pow(69e+3,0.5)) inexact rounded', 2.6e+2, 0 + decimal.pow(69e+3,0.5));
				AddTestCase('pwsx2753:p2 r:HALF_EVEN (0 + decimal.pow(0.70,0.5)) inexact rounded', 0.84, 0 + decimal.pow(0.70,0.5));
				AddTestCase('pwsx2754:p2 r:HALF_EVEN (0 + decimal.pow(0.070,0.5)) inexact rounded', 0.26, 0 + decimal.pow(0.070,0.5));
				AddTestCase('pwsx2755:p2 r:HALF_EVEN (0 + decimal.pow(70.0e-1,0.5)) inexact rounded', 2.6, 0 + decimal.pow(70.0e-1,0.5));
				AddTestCase('pwsx2756:p2 r:HALF_EVEN (0 + decimal.pow(70.00e-2,0.5)) inexact rounded', 0.84, 0 + decimal.pow(70.00e-2,0.5));
				AddTestCase('pwsx2757:p2 r:HALF_EVEN (0 + decimal.pow(70e-3,0.5)) inexact rounded', 0.26, 0 + decimal.pow(70e-3,0.5));
				AddTestCase('pwsx2758:p2 r:HALF_EVEN (0 + decimal.pow(70e+1,0.5)) inexact rounded', 26, 0 + decimal.pow(70e+1,0.5));
				AddTestCase('pwsx2759:p2 r:HALF_EVEN (0 + decimal.pow(70e+2,0.5)) inexact rounded', 84, 0 + decimal.pow(70e+2,0.5));
				AddTestCase('pwsx2760:p2 r:HALF_EVEN (0 + decimal.pow(70e+3,0.5)) inexact rounded', 2.6e+2, 0 + decimal.pow(70e+3,0.5));
				AddTestCase('pwsx2761:p2 r:HALF_EVEN (0 + decimal.pow(0.71,0.5)) inexact rounded', 0.84, 0 + decimal.pow(0.71,0.5));
				AddTestCase('pwsx2762:p2 r:HALF_EVEN (0 + decimal.pow(0.071,0.5)) inexact rounded', 0.27, 0 + decimal.pow(0.071,0.5));
				AddTestCase('pwsx2763:p2 r:HALF_EVEN (0 + decimal.pow(71.0e-1,0.5)) inexact rounded', 2.7, 0 + decimal.pow(71.0e-1,0.5));
				AddTestCase('pwsx2764:p2 r:HALF_EVEN (0 + decimal.pow(71.00e-2,0.5)) inexact rounded', 0.84, 0 + decimal.pow(71.00e-2,0.5));
				AddTestCase('pwsx2765:p2 r:HALF_EVEN (0 + decimal.pow(71e-3,0.5)) inexact rounded', 0.27, 0 + decimal.pow(71e-3,0.5));
				AddTestCase('pwsx2766:p2 r:HALF_EVEN (0 + decimal.pow(71e+1,0.5)) inexact rounded', 27, 0 + decimal.pow(71e+1,0.5));
				AddTestCase('pwsx2767:p2 r:HALF_EVEN (0 + decimal.pow(71e+2,0.5)) inexact rounded', 84, 0 + decimal.pow(71e+2,0.5));
				AddTestCase('pwsx2768:p2 r:HALF_EVEN (0 + decimal.pow(71e+3,0.5)) inexact rounded', 2.7e+2, 0 + decimal.pow(71e+3,0.5));
				AddTestCase('pwsx2769:p2 r:HALF_EVEN (0 + decimal.pow(0.72,0.5)) inexact rounded', 0.85, 0 + decimal.pow(0.72,0.5));
				AddTestCase('pwsx2770:p2 r:HALF_EVEN (0 + decimal.pow(0.072,0.5)) inexact rounded', 0.27, 0 + decimal.pow(0.072,0.5));
				AddTestCase('pwsx2771:p2 r:HALF_EVEN (0 + decimal.pow(72.0e-1,0.5)) inexact rounded', 2.7, 0 + decimal.pow(72.0e-1,0.5));
				AddTestCase('pwsx2772:p2 r:HALF_EVEN (0 + decimal.pow(72.00e-2,0.5)) inexact rounded', 0.85, 0 + decimal.pow(72.00e-2,0.5));
				AddTestCase('pwsx2773:p2 r:HALF_EVEN (0 + decimal.pow(72e-3,0.5)) inexact rounded', 0.27, 0 + decimal.pow(72e-3,0.5));
				AddTestCase('pwsx2774:p2 r:HALF_EVEN (0 + decimal.pow(72e+1,0.5)) inexact rounded', 27, 0 + decimal.pow(72e+1,0.5));
				AddTestCase('pwsx2775:p2 r:HALF_EVEN (0 + decimal.pow(72e+2,0.5)) inexact rounded', 85, 0 + decimal.pow(72e+2,0.5));
				AddTestCase('pwsx2776:p2 r:HALF_EVEN (0 + decimal.pow(72e+3,0.5)) inexact rounded', 2.7e+2, 0 + decimal.pow(72e+3,0.5));
				AddTestCase('pwsx2777:p2 r:HALF_EVEN (0 + decimal.pow(0.73,0.5)) inexact rounded', 0.85, 0 + decimal.pow(0.73,0.5));
				AddTestCase('pwsx2778:p2 r:HALF_EVEN (0 + decimal.pow(0.073,0.5)) inexact rounded', 0.27, 0 + decimal.pow(0.073,0.5));
				AddTestCase('pwsx2779:p2 r:HALF_EVEN (0 + decimal.pow(73.0e-1,0.5)) inexact rounded', 2.7, 0 + decimal.pow(73.0e-1,0.5));
				AddTestCase('pwsx2780:p2 r:HALF_EVEN (0 + decimal.pow(73.00e-2,0.5)) inexact rounded', 0.85, 0 + decimal.pow(73.00e-2,0.5));
				AddTestCase('pwsx2781:p2 r:HALF_EVEN (0 + decimal.pow(73e-3,0.5)) inexact rounded', 0.27, 0 + decimal.pow(73e-3,0.5));
				AddTestCase('pwsx2782:p2 r:HALF_EVEN (0 + decimal.pow(73e+1,0.5)) inexact rounded', 27, 0 + decimal.pow(73e+1,0.5));
				AddTestCase('pwsx2783:p2 r:HALF_EVEN (0 + decimal.pow(73e+2,0.5)) inexact rounded', 85, 0 + decimal.pow(73e+2,0.5));
				AddTestCase('pwsx2784:p2 r:HALF_EVEN (0 + decimal.pow(73e+3,0.5)) inexact rounded', 2.7e+2, 0 + decimal.pow(73e+3,0.5));
				AddTestCase('pwsx2785:p2 r:HALF_EVEN (0 + decimal.pow(0.74,0.5)) inexact rounded', 0.86, 0 + decimal.pow(0.74,0.5));
				AddTestCase('pwsx2786:p2 r:HALF_EVEN (0 + decimal.pow(0.074,0.5)) inexact rounded', 0.27, 0 + decimal.pow(0.074,0.5));
				AddTestCase('pwsx2787:p2 r:HALF_EVEN (0 + decimal.pow(74.0e-1,0.5)) inexact rounded', 2.7, 0 + decimal.pow(74.0e-1,0.5));
				AddTestCase('pwsx2788:p2 r:HALF_EVEN (0 + decimal.pow(74.00e-2,0.5)) inexact rounded', 0.86, 0 + decimal.pow(74.00e-2,0.5));
				AddTestCase('pwsx2789:p2 r:HALF_EVEN (0 + decimal.pow(74e-3,0.5)) inexact rounded', 0.27, 0 + decimal.pow(74e-3,0.5));
				AddTestCase('pwsx2790:p2 r:HALF_EVEN (0 + decimal.pow(74e+1,0.5)) inexact rounded', 27, 0 + decimal.pow(74e+1,0.5));
				AddTestCase('pwsx2791:p2 r:HALF_EVEN (0 + decimal.pow(74e+2,0.5)) inexact rounded', 86, 0 + decimal.pow(74e+2,0.5));
				AddTestCase('pwsx2792:p2 r:HALF_EVEN (0 + decimal.pow(74e+3,0.5)) inexact rounded', 2.7e+2, 0 + decimal.pow(74e+3,0.5));
				AddTestCase('pwsx2793:p2 r:HALF_EVEN (0 + decimal.pow(0.75,0.5)) inexact rounded', 0.87, 0 + decimal.pow(0.75,0.5));
				AddTestCase('pwsx2794:p2 r:HALF_EVEN (0 + decimal.pow(0.075,0.5)) inexact rounded', 0.27, 0 + decimal.pow(0.075,0.5));
				AddTestCase('pwsx2795:p2 r:HALF_EVEN (0 + decimal.pow(75.0e-1,0.5)) inexact rounded', 2.7, 0 + decimal.pow(75.0e-1,0.5));
				AddTestCase('pwsx2796:p2 r:HALF_EVEN (0 + decimal.pow(75.00e-2,0.5)) inexact rounded', 0.87, 0 + decimal.pow(75.00e-2,0.5));
				AddTestCase('pwsx2797:p2 r:HALF_EVEN (0 + decimal.pow(75e-3,0.5)) inexact rounded', 0.27, 0 + decimal.pow(75e-3,0.5));
				AddTestCase('pwsx2798:p2 r:HALF_EVEN (0 + decimal.pow(75e+1,0.5)) inexact rounded', 27, 0 + decimal.pow(75e+1,0.5));
				AddTestCase('pwsx2799:p2 r:HALF_EVEN (0 + decimal.pow(75e+2,0.5)) inexact rounded', 87, 0 + decimal.pow(75e+2,0.5));
				AddTestCase('pwsx2800:p2 r:HALF_EVEN (0 + decimal.pow(75e+3,0.5)) inexact rounded', 2.7e+2, 0 + decimal.pow(75e+3,0.5));
				AddTestCase('pwsx2801:p2 r:HALF_EVEN (0 + decimal.pow(0.76,0.5)) inexact rounded', 0.87, 0 + decimal.pow(0.76,0.5));
				AddTestCase('pwsx2802:p2 r:HALF_EVEN (0 + decimal.pow(0.076,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.076,0.5));
				AddTestCase('pwsx2803:p2 r:HALF_EVEN (0 + decimal.pow(76.0e-1,0.5)) inexact rounded', 2.8, 0 + decimal.pow(76.0e-1,0.5));
				AddTestCase('pwsx2804:p2 r:HALF_EVEN (0 + decimal.pow(76.00e-2,0.5)) inexact rounded', 0.87, 0 + decimal.pow(76.00e-2,0.5));
				AddTestCase('pwsx2805:p2 r:HALF_EVEN (0 + decimal.pow(76e-3,0.5)) inexact rounded', 0.28, 0 + decimal.pow(76e-3,0.5));
				AddTestCase('pwsx2806:p2 r:HALF_EVEN (0 + decimal.pow(76e+1,0.5)) inexact rounded', 28, 0 + decimal.pow(76e+1,0.5));
				AddTestCase('pwsx2807:p2 r:HALF_EVEN (0 + decimal.pow(76e+2,0.5)) inexact rounded', 87, 0 + decimal.pow(76e+2,0.5));
				AddTestCase('pwsx2808:p2 r:HALF_EVEN (0 + decimal.pow(76e+3,0.5)) inexact rounded', 2.8e+2, 0 + decimal.pow(76e+3,0.5));
				AddTestCase('pwsx2809:p2 r:HALF_EVEN (0 + decimal.pow(0.77,0.5)) inexact rounded', 0.88, 0 + decimal.pow(0.77,0.5));
				AddTestCase('pwsx2810:p2 r:HALF_EVEN (0 + decimal.pow(0.077,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.077,0.5));
				AddTestCase('pwsx2811:p2 r:HALF_EVEN (0 + decimal.pow(77.0e-1,0.5)) inexact rounded', 2.8, 0 + decimal.pow(77.0e-1,0.5));
				AddTestCase('pwsx2812:p2 r:HALF_EVEN (0 + decimal.pow(77.00e-2,0.5)) inexact rounded', 0.88, 0 + decimal.pow(77.00e-2,0.5));
				AddTestCase('pwsx2813:p2 r:HALF_EVEN (0 + decimal.pow(77e-3,0.5)) inexact rounded', 0.28, 0 + decimal.pow(77e-3,0.5));
				AddTestCase('pwsx2814:p2 r:HALF_EVEN (0 + decimal.pow(77e+1,0.5)) inexact rounded', 28, 0 + decimal.pow(77e+1,0.5));
				AddTestCase('pwsx2815:p2 r:HALF_EVEN (0 + decimal.pow(77e+2,0.5)) inexact rounded', 88, 0 + decimal.pow(77e+2,0.5));
				AddTestCase('pwsx2816:p2 r:HALF_EVEN (0 + decimal.pow(77e+3,0.5)) inexact rounded', 2.8e+2, 0 + decimal.pow(77e+3,0.5));
				AddTestCase('pwsx2817:p2 r:HALF_EVEN (0 + decimal.pow(0.78,0.5)) inexact rounded', 0.88, 0 + decimal.pow(0.78,0.5));
				AddTestCase('pwsx2818:p2 r:HALF_EVEN (0 + decimal.pow(0.078,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.078,0.5));
				AddTestCase('pwsx2819:p2 r:HALF_EVEN (0 + decimal.pow(78.0e-1,0.5)) inexact rounded', 2.8, 0 + decimal.pow(78.0e-1,0.5));
				AddTestCase('pwsx2820:p2 r:HALF_EVEN (0 + decimal.pow(78.00e-2,0.5)) inexact rounded', 0.88, 0 + decimal.pow(78.00e-2,0.5));
				AddTestCase('pwsx2821:p2 r:HALF_EVEN (0 + decimal.pow(78e-3,0.5)) inexact rounded', 0.28, 0 + decimal.pow(78e-3,0.5));
				AddTestCase('pwsx2822:p2 r:HALF_EVEN (0 + decimal.pow(78e+1,0.5)) inexact rounded', 28, 0 + decimal.pow(78e+1,0.5));
				AddTestCase('pwsx2823:p2 r:HALF_EVEN (0 + decimal.pow(78e+2,0.5)) inexact rounded', 88, 0 + decimal.pow(78e+2,0.5));
				AddTestCase('pwsx2824:p2 r:HALF_EVEN (0 + decimal.pow(78e+3,0.5)) inexact rounded', 2.8e+2, 0 + decimal.pow(78e+3,0.5));
				AddTestCase('pwsx2825:p2 r:HALF_EVEN (0 + decimal.pow(0.79,0.5)) inexact rounded', 0.89, 0 + decimal.pow(0.79,0.5));
				AddTestCase('pwsx2826:p2 r:HALF_EVEN (0 + decimal.pow(0.079,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.079,0.5));
				AddTestCase('pwsx2827:p2 r:HALF_EVEN (0 + decimal.pow(79.0e-1,0.5)) inexact rounded', 2.8, 0 + decimal.pow(79.0e-1,0.5));
				AddTestCase('pwsx2828:p2 r:HALF_EVEN (0 + decimal.pow(79.00e-2,0.5)) inexact rounded', 0.89, 0 + decimal.pow(79.00e-2,0.5));
				AddTestCase('pwsx2829:p2 r:HALF_EVEN (0 + decimal.pow(79e-3,0.5)) inexact rounded', 0.28, 0 + decimal.pow(79e-3,0.5));
				AddTestCase('pwsx2830:p2 r:HALF_EVEN (0 + decimal.pow(79e+1,0.5)) inexact rounded', 28, 0 + decimal.pow(79e+1,0.5));
				AddTestCase('pwsx2831:p2 r:HALF_EVEN (0 + decimal.pow(79e+2,0.5)) inexact rounded', 89, 0 + decimal.pow(79e+2,0.5));
				AddTestCase('pwsx2832:p2 r:HALF_EVEN (0 + decimal.pow(79e+3,0.5)) inexact rounded', 2.8e+2, 0 + decimal.pow(79e+3,0.5));
				AddTestCase('pwsx2833:p2 r:HALF_EVEN (0 + decimal.pow(0.80,0.5)) inexact rounded', 0.89, 0 + decimal.pow(0.80,0.5));
				AddTestCase('pwsx2834:p2 r:HALF_EVEN (0 + decimal.pow(0.080,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.080,0.5));
				AddTestCase('pwsx2835:p2 r:HALF_EVEN (0 + decimal.pow(80.0e-1,0.5)) inexact rounded', 2.8, 0 + decimal.pow(80.0e-1,0.5));
				AddTestCase('pwsx2836:p2 r:HALF_EVEN (0 + decimal.pow(80.00e-2,0.5)) inexact rounded', 0.89, 0 + decimal.pow(80.00e-2,0.5));
				AddTestCase('pwsx2837:p2 r:HALF_EVEN (0 + decimal.pow(80e-3,0.5)) inexact rounded', 0.28, 0 + decimal.pow(80e-3,0.5));
				AddTestCase('pwsx2838:p2 r:HALF_EVEN (0 + decimal.pow(80e+1,0.5)) inexact rounded', 28, 0 + decimal.pow(80e+1,0.5));
				AddTestCase('pwsx2839:p2 r:HALF_EVEN (0 + decimal.pow(80e+2,0.5)) inexact rounded', 89, 0 + decimal.pow(80e+2,0.5));
				AddTestCase('pwsx2840:p2 r:HALF_EVEN (0 + decimal.pow(80e+3,0.5)) inexact rounded', 2.8e+2, 0 + decimal.pow(80e+3,0.5));
				AddTestCase('pwsx2841:p2 r:HALF_EVEN (0 + decimal.pow(0.81,0.5)) inexact rounded', 0.90, 0 + decimal.pow(0.81,0.5));
				AddTestCase('pwsx2842:p2 r:HALF_EVEN (0 + decimal.pow(0.081,0.5)) inexact rounded', 0.28, 0 + decimal.pow(0.081,0.5));
				AddTestCase('pwsx2843:p2 r:HALF_EVEN (0 + decimal.pow(81.0e-1,0.5)) inexact rounded', 2.8, 0 + decimal.pow(81.0e-1,0.5));
				AddTestCase('pwsx2844:p2 r:HALF_EVEN (0 + decimal.pow(81.00e-2,0.5)) inexact rounded', 0.90, 0 + decimal.pow(81.00e-2,0.5));
				AddTestCase('pwsx2845:p2 r:HALF_EVEN (0 + decimal.pow(81e-3,0.5)) inexact rounded', 0.28, 0 + decimal.pow(81e-3,0.5));
				AddTestCase('pwsx2846:p2 r:HALF_EVEN (0 + decimal.pow(81e+1,0.5)) inexact rounded', 28, 0 + decimal.pow(81e+1,0.5));
				AddTestCase('pwsx2847:p2 r:HALF_EVEN (0 + decimal.pow(81e+2,0.5)) inexact rounded', 90, 0 + decimal.pow(81e+2,0.5));
				AddTestCase('pwsx2848:p2 r:HALF_EVEN (0 + decimal.pow(81e+3,0.5)) inexact rounded', 2.8e+2, 0 + decimal.pow(81e+3,0.5));
				AddTestCase('pwsx2849:p2 r:HALF_EVEN (0 + decimal.pow(0.82,0.5)) inexact rounded', 0.91, 0 + decimal.pow(0.82,0.5));
				AddTestCase('pwsx2850:p2 r:HALF_EVEN (0 + decimal.pow(0.082,0.5)) inexact rounded', 0.29, 0 + decimal.pow(0.082,0.5));
				AddTestCase('pwsx2851:p2 r:HALF_EVEN (0 + decimal.pow(82.0e-1,0.5)) inexact rounded', 2.9, 0 + decimal.pow(82.0e-1,0.5));
				AddTestCase('pwsx2852:p2 r:HALF_EVEN (0 + decimal.pow(82.00e-2,0.5)) inexact rounded', 0.91, 0 + decimal.pow(82.00e-2,0.5));
				AddTestCase('pwsx2853:p2 r:HALF_EVEN (0 + decimal.pow(82e-3,0.5)) inexact rounded', 0.29, 0 + decimal.pow(82e-3,0.5));
				AddTestCase('pwsx2854:p2 r:HALF_EVEN (0 + decimal.pow(82e+1,0.5)) inexact rounded', 29, 0 + decimal.pow(82e+1,0.5));
				AddTestCase('pwsx2855:p2 r:HALF_EVEN (0 + decimal.pow(82e+2,0.5)) inexact rounded', 91, 0 + decimal.pow(82e+2,0.5));
				AddTestCase('pwsx2856:p2 r:HALF_EVEN (0 + decimal.pow(82e+3,0.5)) inexact rounded', 2.9e+2, 0 + decimal.pow(82e+3,0.5));
				AddTestCase('pwsx2857:p2 r:HALF_EVEN (0 + decimal.pow(0.83,0.5)) inexact rounded', 0.91, 0 + decimal.pow(0.83,0.5));
				AddTestCase('pwsx2858:p2 r:HALF_EVEN (0 + decimal.pow(0.083,0.5)) inexact rounded', 0.29, 0 + decimal.pow(0.083,0.5));
				AddTestCase('pwsx2859:p2 r:HALF_EVEN (0 + decimal.pow(83.0e-1,0.5)) inexact rounded', 2.9, 0 + decimal.pow(83.0e-1,0.5));
				AddTestCase('pwsx2860:p2 r:HALF_EVEN (0 + decimal.pow(83.00e-2,0.5)) inexact rounded', 0.91, 0 + decimal.pow(83.00e-2,0.5));
				AddTestCase('pwsx2861:p2 r:HALF_EVEN (0 + decimal.pow(83e-3,0.5)) inexact rounded', 0.29, 0 + decimal.pow(83e-3,0.5));
				AddTestCase('pwsx2862:p2 r:HALF_EVEN (0 + decimal.pow(83e+1,0.5)) inexact rounded', 29, 0 + decimal.pow(83e+1,0.5));
				AddTestCase('pwsx2863:p2 r:HALF_EVEN (0 + decimal.pow(83e+2,0.5)) inexact rounded', 91, 0 + decimal.pow(83e+2,0.5));
				AddTestCase('pwsx2864:p2 r:HALF_EVEN (0 + decimal.pow(83e+3,0.5)) inexact rounded', 2.9e+2, 0 + decimal.pow(83e+3,0.5));
				AddTestCase('pwsx2865:p2 r:HALF_EVEN (0 + decimal.pow(0.84,0.5)) inexact rounded', 0.92, 0 + decimal.pow(0.84,0.5));
				AddTestCase('pwsx2866:p2 r:HALF_EVEN (0 + decimal.pow(0.084,0.5)) inexact rounded', 0.29, 0 + decimal.pow(0.084,0.5));
				AddTestCase('pwsx2867:p2 r:HALF_EVEN (0 + decimal.pow(84.0e-1,0.5)) inexact rounded', 2.9, 0 + decimal.pow(84.0e-1,0.5));
				AddTestCase('pwsx2868:p2 r:HALF_EVEN (0 + decimal.pow(84.00e-2,0.5)) inexact rounded', 0.92, 0 + decimal.pow(84.00e-2,0.5));
				AddTestCase('pwsx2869:p2 r:HALF_EVEN (0 + decimal.pow(84e-3,0.5)) inexact rounded', 0.29, 0 + decimal.pow(84e-3,0.5));
				AddTestCase('pwsx2870:p2 r:HALF_EVEN (0 + decimal.pow(84e+1,0.5)) inexact rounded', 29, 0 + decimal.pow(84e+1,0.5));
				AddTestCase('pwsx2871:p2 r:HALF_EVEN (0 + decimal.pow(84e+2,0.5)) inexact rounded', 92, 0 + decimal.pow(84e+2,0.5));
				AddTestCase('pwsx2872:p2 r:HALF_EVEN (0 + decimal.pow(84e+3,0.5)) inexact rounded', 2.9e+2, 0 + decimal.pow(84e+3,0.5));
				AddTestCase('pwsx2873:p2 r:HALF_EVEN (0 + decimal.pow(0.85,0.5)) inexact rounded', 0.92, 0 + decimal.pow(0.85,0.5));
				AddTestCase('pwsx2874:p2 r:HALF_EVEN (0 + decimal.pow(0.085,0.5)) inexact rounded', 0.29, 0 + decimal.pow(0.085,0.5));
				AddTestCase('pwsx2875:p2 r:HALF_EVEN (0 + decimal.pow(85.0e-1,0.5)) inexact rounded', 2.9, 0 + decimal.pow(85.0e-1,0.5));
				AddTestCase('pwsx2876:p2 r:HALF_EVEN (0 + decimal.pow(85.00e-2,0.5)) inexact rounded', 0.92, 0 + decimal.pow(85.00e-2,0.5));
				AddTestCase('pwsx2877:p2 r:HALF_EVEN (0 + decimal.pow(85e-3,0.5)) inexact rounded', 0.29, 0 + decimal.pow(85e-3,0.5));
				AddTestCase('pwsx2878:p2 r:HALF_EVEN (0 + decimal.pow(85e+1,0.5)) inexact rounded', 29, 0 + decimal.pow(85e+1,0.5));
				AddTestCase('pwsx2879:p2 r:HALF_EVEN (0 + decimal.pow(85e+2,0.5)) inexact rounded', 92, 0 + decimal.pow(85e+2,0.5));
				AddTestCase('pwsx2880:p2 r:HALF_EVEN (0 + decimal.pow(85e+3,0.5)) inexact rounded', 2.9e+2, 0 + decimal.pow(85e+3,0.5));
				AddTestCase('pwsx2881:p2 r:HALF_EVEN (0 + decimal.pow(0.86,0.5)) inexact rounded', 0.93, 0 + decimal.pow(0.86,0.5));
				AddTestCase('pwsx2882:p2 r:HALF_EVEN (0 + decimal.pow(0.086,0.5)) inexact rounded', 0.29, 0 + decimal.pow(0.086,0.5));
				AddTestCase('pwsx2883:p2 r:HALF_EVEN (0 + decimal.pow(86.0e-1,0.5)) inexact rounded', 2.9, 0 + decimal.pow(86.0e-1,0.5));
				AddTestCase('pwsx2884:p2 r:HALF_EVEN (0 + decimal.pow(86.00e-2,0.5)) inexact rounded', 0.93, 0 + decimal.pow(86.00e-2,0.5));
				AddTestCase('pwsx2885:p2 r:HALF_EVEN (0 + decimal.pow(86e-3,0.5)) inexact rounded', 0.29, 0 + decimal.pow(86e-3,0.5));
				AddTestCase('pwsx2886:p2 r:HALF_EVEN (0 + decimal.pow(86e+1,0.5)) inexact rounded', 29, 0 + decimal.pow(86e+1,0.5));
				AddTestCase('pwsx2887:p2 r:HALF_EVEN (0 + decimal.pow(86e+2,0.5)) inexact rounded', 93, 0 + decimal.pow(86e+2,0.5));
				AddTestCase('pwsx2888:p2 r:HALF_EVEN (0 + decimal.pow(86e+3,0.5)) inexact rounded', 2.9e+2, 0 + decimal.pow(86e+3,0.5));
				AddTestCase('pwsx2889:p2 r:HALF_EVEN (0 + decimal.pow(0.87,0.5)) inexact rounded', 0.93, 0 + decimal.pow(0.87,0.5));
				AddTestCase('pwsx2890:p2 r:HALF_EVEN (0 + decimal.pow(0.087,0.5)) inexact rounded', 0.29, 0 + decimal.pow(0.087,0.5));
				AddTestCase('pwsx2891:p2 r:HALF_EVEN (0 + decimal.pow(87.0e-1,0.5)) inexact rounded', 2.9, 0 + decimal.pow(87.0e-1,0.5));
				AddTestCase('pwsx2892:p2 r:HALF_EVEN (0 + decimal.pow(87.00e-2,0.5)) inexact rounded', 0.93, 0 + decimal.pow(87.00e-2,0.5));
				AddTestCase('pwsx2893:p2 r:HALF_EVEN (0 + decimal.pow(87e-3,0.5)) inexact rounded', 0.29, 0 + decimal.pow(87e-3,0.5));
				AddTestCase('pwsx2894:p2 r:HALF_EVEN (0 + decimal.pow(87e+1,0.5)) inexact rounded', 29, 0 + decimal.pow(87e+1,0.5));
				AddTestCase('pwsx2895:p2 r:HALF_EVEN (0 + decimal.pow(87e+2,0.5)) inexact rounded', 93, 0 + decimal.pow(87e+2,0.5));
				AddTestCase('pwsx2896:p2 r:HALF_EVEN (0 + decimal.pow(87e+3,0.5)) inexact rounded', 2.9e+2, 0 + decimal.pow(87e+3,0.5));
				AddTestCase('pwsx2897:p2 r:HALF_EVEN (0 + decimal.pow(0.88,0.5)) inexact rounded', 0.94, 0 + decimal.pow(0.88,0.5));
				AddTestCase('pwsx2898:p2 r:HALF_EVEN (0 + decimal.pow(0.088,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.088,0.5));
				AddTestCase('pwsx2899:p2 r:HALF_EVEN (0 + decimal.pow(88.0e-1,0.5)) inexact rounded', 3.0, 0 + decimal.pow(88.0e-1,0.5));
				AddTestCase('pwsx2900:p2 r:HALF_EVEN (0 + decimal.pow(88.00e-2,0.5)) inexact rounded', 0.94, 0 + decimal.pow(88.00e-2,0.5));
				AddTestCase('pwsx2901:p2 r:HALF_EVEN (0 + decimal.pow(88e-3,0.5)) inexact rounded', 0.30, 0 + decimal.pow(88e-3,0.5));
				AddTestCase('pwsx2902:p2 r:HALF_EVEN (0 + decimal.pow(88e+1,0.5)) inexact rounded', 30, 0 + decimal.pow(88e+1,0.5));
				AddTestCase('pwsx2903:p2 r:HALF_EVEN (0 + decimal.pow(88e+2,0.5)) inexact rounded', 94, 0 + decimal.pow(88e+2,0.5));
				AddTestCase('pwsx2904:p2 r:HALF_EVEN (0 + decimal.pow(88e+3,0.5)) inexact rounded', 3.0e+2, 0 + decimal.pow(88e+3,0.5));
				AddTestCase('pwsx2905:p2 r:HALF_EVEN (0 + decimal.pow(0.89,0.5)) inexact rounded', 0.94, 0 + decimal.pow(0.89,0.5));
				AddTestCase('pwsx2906:p2 r:HALF_EVEN (0 + decimal.pow(0.089,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.089,0.5));
				AddTestCase('pwsx2907:p2 r:HALF_EVEN (0 + decimal.pow(89.0e-1,0.5)) inexact rounded', 3.0, 0 + decimal.pow(89.0e-1,0.5));
				AddTestCase('pwsx2908:p2 r:HALF_EVEN (0 + decimal.pow(89.00e-2,0.5)) inexact rounded', 0.94, 0 + decimal.pow(89.00e-2,0.5));
				AddTestCase('pwsx2909:p2 r:HALF_EVEN (0 + decimal.pow(89e-3,0.5)) inexact rounded', 0.30, 0 + decimal.pow(89e-3,0.5));
				AddTestCase('pwsx2910:p2 r:HALF_EVEN (0 + decimal.pow(89e+1,0.5)) inexact rounded', 30, 0 + decimal.pow(89e+1,0.5));
				AddTestCase('pwsx2911:p2 r:HALF_EVEN (0 + decimal.pow(89e+2,0.5)) inexact rounded', 94, 0 + decimal.pow(89e+2,0.5));
				AddTestCase('pwsx2912:p2 r:HALF_EVEN (0 + decimal.pow(89e+3,0.5)) inexact rounded', 3.0e+2, 0 + decimal.pow(89e+3,0.5));
				AddTestCase('pwsx2913:p2 r:HALF_EVEN (0 + decimal.pow(0.90,0.5)) inexact rounded', 0.95, 0 + decimal.pow(0.90,0.5));
				AddTestCase('pwsx2914:p2 r:HALF_EVEN (0 + decimal.pow(0.090,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.090,0.5));
				AddTestCase('pwsx2915:p2 r:HALF_EVEN (0 + decimal.pow(90.0e-1,0.5)) inexact rounded', 3.0, 0 + decimal.pow(90.0e-1,0.5));
				AddTestCase('pwsx2916:p2 r:HALF_EVEN (0 + decimal.pow(90.00e-2,0.5)) inexact rounded', 0.95, 0 + decimal.pow(90.00e-2,0.5));
				AddTestCase('pwsx2917:p2 r:HALF_EVEN (0 + decimal.pow(90e-3,0.5)) inexact rounded', 0.30, 0 + decimal.pow(90e-3,0.5));
				AddTestCase('pwsx2918:p2 r:HALF_EVEN (0 + decimal.pow(90e+1,0.5)) inexact rounded', 30, 0 + decimal.pow(90e+1,0.5));
				AddTestCase('pwsx2919:p2 r:HALF_EVEN (0 + decimal.pow(90e+2,0.5)) inexact rounded', 95, 0 + decimal.pow(90e+2,0.5));
				AddTestCase('pwsx2920:p2 r:HALF_EVEN (0 + decimal.pow(90e+3,0.5)) inexact rounded', 3.0e+2, 0 + decimal.pow(90e+3,0.5));
				AddTestCase('pwsx2921:p2 r:HALF_EVEN (0 + decimal.pow(0.91,0.5)) inexact rounded', 0.95, 0 + decimal.pow(0.91,0.5));
				AddTestCase('pwsx2922:p2 r:HALF_EVEN (0 + decimal.pow(0.091,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.091,0.5));
				AddTestCase('pwsx2923:p2 r:HALF_EVEN (0 + decimal.pow(91.0e-1,0.5)) inexact rounded', 3.0, 0 + decimal.pow(91.0e-1,0.5));
				AddTestCase('pwsx2924:p2 r:HALF_EVEN (0 + decimal.pow(91.00e-2,0.5)) inexact rounded', 0.95, 0 + decimal.pow(91.00e-2,0.5));
				AddTestCase('pwsx2925:p2 r:HALF_EVEN (0 + decimal.pow(91e-3,0.5)) inexact rounded', 0.30, 0 + decimal.pow(91e-3,0.5));
				AddTestCase('pwsx2926:p2 r:HALF_EVEN (0 + decimal.pow(91e+1,0.5)) inexact rounded', 30, 0 + decimal.pow(91e+1,0.5));
				AddTestCase('pwsx2927:p2 r:HALF_EVEN (0 + decimal.pow(91e+2,0.5)) inexact rounded', 95, 0 + decimal.pow(91e+2,0.5));
				AddTestCase('pwsx2928:p2 r:HALF_EVEN (0 + decimal.pow(91e+3,0.5)) inexact rounded', 3.0e+2, 0 + decimal.pow(91e+3,0.5));
				AddTestCase('pwsx2929:p2 r:HALF_EVEN (0 + decimal.pow(0.92,0.5)) inexact rounded', 0.96, 0 + decimal.pow(0.92,0.5));
				AddTestCase('pwsx2930:p2 r:HALF_EVEN (0 + decimal.pow(0.092,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.092,0.5));
				AddTestCase('pwsx2931:p2 r:HALF_EVEN (0 + decimal.pow(92.0e-1,0.5)) inexact rounded', 3.0, 0 + decimal.pow(92.0e-1,0.5));
				AddTestCase('pwsx2932:p2 r:HALF_EVEN (0 + decimal.pow(92.00e-2,0.5)) inexact rounded', 0.96, 0 + decimal.pow(92.00e-2,0.5));
				AddTestCase('pwsx2933:p2 r:HALF_EVEN (0 + decimal.pow(92e-3,0.5)) inexact rounded', 0.30, 0 + decimal.pow(92e-3,0.5));
				AddTestCase('pwsx2934:p2 r:HALF_EVEN (0 + decimal.pow(92e+1,0.5)) inexact rounded', 30, 0 + decimal.pow(92e+1,0.5));
				AddTestCase('pwsx2935:p2 r:HALF_EVEN (0 + decimal.pow(92e+2,0.5)) inexact rounded', 96, 0 + decimal.pow(92e+2,0.5));
				AddTestCase('pwsx2936:p2 r:HALF_EVEN (0 + decimal.pow(92e+3,0.5)) inexact rounded', 3.0e+2, 0 + decimal.pow(92e+3,0.5));
				AddTestCase('pwsx2937:p2 r:HALF_EVEN (0 + decimal.pow(0.93,0.5)) inexact rounded', 0.96, 0 + decimal.pow(0.93,0.5));
				AddTestCase('pwsx2938:p2 r:HALF_EVEN (0 + decimal.pow(0.093,0.5)) inexact rounded', 0.30, 0 + decimal.pow(0.093,0.5));
				AddTestCase('pwsx2939:p2 r:HALF_EVEN (0 + decimal.pow(93.0e-1,0.5)) inexact rounded', 3.0, 0 + decimal.pow(93.0e-1,0.5));
				AddTestCase('pwsx2940:p2 r:HALF_EVEN (0 + decimal.pow(93.00e-2,0.5)) inexact rounded', 0.96, 0 + decimal.pow(93.00e-2,0.5));
				AddTestCase('pwsx2941:p2 r:HALF_EVEN (0 + decimal.pow(93e-3,0.5)) inexact rounded', 0.30, 0 + decimal.pow(93e-3,0.5));
				AddTestCase('pwsx2942:p2 r:HALF_EVEN (0 + decimal.pow(93e+1,0.5)) inexact rounded', 30, 0 + decimal.pow(93e+1,0.5));
				AddTestCase('pwsx2943:p2 r:HALF_EVEN (0 + decimal.pow(93e+2,0.5)) inexact rounded', 96, 0 + decimal.pow(93e+2,0.5));
				AddTestCase('pwsx2944:p2 r:HALF_EVEN (0 + decimal.pow(93e+3,0.5)) inexact rounded', 3.0e+2, 0 + decimal.pow(93e+3,0.5));
				AddTestCase('pwsx2945:p2 r:HALF_EVEN (0 + decimal.pow(0.94,0.5)) inexact rounded', 0.97, 0 + decimal.pow(0.94,0.5));
				AddTestCase('pwsx2946:p2 r:HALF_EVEN (0 + decimal.pow(0.094,0.5)) inexact rounded', 0.31, 0 + decimal.pow(0.094,0.5));
				AddTestCase('pwsx2947:p2 r:HALF_EVEN (0 + decimal.pow(94.0e-1,0.5)) inexact rounded', 3.1, 0 + decimal.pow(94.0e-1,0.5));
				AddTestCase('pwsx2948:p2 r:HALF_EVEN (0 + decimal.pow(94.00e-2,0.5)) inexact rounded', 0.97, 0 + decimal.pow(94.00e-2,0.5));
				AddTestCase('pwsx2949:p2 r:HALF_EVEN (0 + decimal.pow(94e-3,0.5)) inexact rounded', 0.31, 0 + decimal.pow(94e-3,0.5));
				AddTestCase('pwsx2950:p2 r:HALF_EVEN (0 + decimal.pow(94e+1,0.5)) inexact rounded', 31, 0 + decimal.pow(94e+1,0.5));
				AddTestCase('pwsx2951:p2 r:HALF_EVEN (0 + decimal.pow(94e+2,0.5)) inexact rounded', 97, 0 + decimal.pow(94e+2,0.5));
				AddTestCase('pwsx2952:p2 r:HALF_EVEN (0 + decimal.pow(94e+3,0.5)) inexact rounded', 3.1e+2, 0 + decimal.pow(94e+3,0.5));
				AddTestCase('pwsx2953:p2 r:HALF_EVEN (0 + decimal.pow(0.95,0.5)) inexact rounded', 0.97, 0 + decimal.pow(0.95,0.5));
				AddTestCase('pwsx2954:p2 r:HALF_EVEN (0 + decimal.pow(0.095,0.5)) inexact rounded', 0.31, 0 + decimal.pow(0.095,0.5));
				AddTestCase('pwsx2955:p2 r:HALF_EVEN (0 + decimal.pow(95.0e-1,0.5)) inexact rounded', 3.1, 0 + decimal.pow(95.0e-1,0.5));
				AddTestCase('pwsx2956:p2 r:HALF_EVEN (0 + decimal.pow(95.00e-2,0.5)) inexact rounded', 0.97, 0 + decimal.pow(95.00e-2,0.5));
				AddTestCase('pwsx2957:p2 r:HALF_EVEN (0 + decimal.pow(95e-3,0.5)) inexact rounded', 0.31, 0 + decimal.pow(95e-3,0.5));
				AddTestCase('pwsx2958:p2 r:HALF_EVEN (0 + decimal.pow(95e+1,0.5)) inexact rounded', 31, 0 + decimal.pow(95e+1,0.5));
				AddTestCase('pwsx2959:p2 r:HALF_EVEN (0 + decimal.pow(95e+2,0.5)) inexact rounded', 97, 0 + decimal.pow(95e+2,0.5));
				AddTestCase('pwsx2960:p2 r:HALF_EVEN (0 + decimal.pow(95e+3,0.5)) inexact rounded', 3.1e+2, 0 + decimal.pow(95e+3,0.5));
				AddTestCase('pwsx2961:p2 r:HALF_EVEN (0 + decimal.pow(0.96,0.5)) inexact rounded', 0.98, 0 + decimal.pow(0.96,0.5));
				AddTestCase('pwsx2962:p2 r:HALF_EVEN (0 + decimal.pow(0.096,0.5)) inexact rounded', 0.31, 0 + decimal.pow(0.096,0.5));
				AddTestCase('pwsx2963:p2 r:HALF_EVEN (0 + decimal.pow(96.0e-1,0.5)) inexact rounded', 3.1, 0 + decimal.pow(96.0e-1,0.5));
				AddTestCase('pwsx2964:p2 r:HALF_EVEN (0 + decimal.pow(96.00e-2,0.5)) inexact rounded', 0.98, 0 + decimal.pow(96.00e-2,0.5));
				AddTestCase('pwsx2965:p2 r:HALF_EVEN (0 + decimal.pow(96e-3,0.5)) inexact rounded', 0.31, 0 + decimal.pow(96e-3,0.5));
				AddTestCase('pwsx2966:p2 r:HALF_EVEN (0 + decimal.pow(96e+1,0.5)) inexact rounded', 31, 0 + decimal.pow(96e+1,0.5));
				AddTestCase('pwsx2967:p2 r:HALF_EVEN (0 + decimal.pow(96e+2,0.5)) inexact rounded', 98, 0 + decimal.pow(96e+2,0.5));
				AddTestCase('pwsx2968:p2 r:HALF_EVEN (0 + decimal.pow(96e+3,0.5)) inexact rounded', 3.1e+2, 0 + decimal.pow(96e+3,0.5));
				AddTestCase('pwsx2969:p2 r:HALF_EVEN (0 + decimal.pow(0.97,0.5)) inexact rounded', 0.98, 0 + decimal.pow(0.97,0.5));
				AddTestCase('pwsx2970:p2 r:HALF_EVEN (0 + decimal.pow(0.097,0.5)) inexact rounded', 0.31, 0 + decimal.pow(0.097,0.5));
				AddTestCase('pwsx2971:p2 r:HALF_EVEN (0 + decimal.pow(97.0e-1,0.5)) inexact rounded', 3.1, 0 + decimal.pow(97.0e-1,0.5));
				AddTestCase('pwsx2972:p2 r:HALF_EVEN (0 + decimal.pow(97.00e-2,0.5)) inexact rounded', 0.98, 0 + decimal.pow(97.00e-2,0.5));
				AddTestCase('pwsx2973:p2 r:HALF_EVEN (0 + decimal.pow(97e-3,0.5)) inexact rounded', 0.31, 0 + decimal.pow(97e-3,0.5));
				AddTestCase('pwsx2974:p2 r:HALF_EVEN (0 + decimal.pow(97e+1,0.5)) inexact rounded', 31, 0 + decimal.pow(97e+1,0.5));
				AddTestCase('pwsx2975:p2 r:HALF_EVEN (0 + decimal.pow(97e+2,0.5)) inexact rounded', 98, 0 + decimal.pow(97e+2,0.5));
				AddTestCase('pwsx2976:p2 r:HALF_EVEN (0 + decimal.pow(97e+3,0.5)) inexact rounded', 3.1e+2, 0 + decimal.pow(97e+3,0.5));
				AddTestCase('pwsx2977:p2 r:HALF_EVEN (0 + decimal.pow(0.98,0.5)) inexact rounded', 0.99, 0 + decimal.pow(0.98,0.5));
				AddTestCase('pwsx2978:p2 r:HALF_EVEN (0 + decimal.pow(0.098,0.5)) inexact rounded', 0.31, 0 + decimal.pow(0.098,0.5));
				AddTestCase('pwsx2979:p2 r:HALF_EVEN (0 + decimal.pow(98.0e-1,0.5)) inexact rounded', 3.1, 0 + decimal.pow(98.0e-1,0.5));
				AddTestCase('pwsx2980:p2 r:HALF_EVEN (0 + decimal.pow(98.00e-2,0.5)) inexact rounded', 0.99, 0 + decimal.pow(98.00e-2,0.5));
				AddTestCase('pwsx2981:p2 r:HALF_EVEN (0 + decimal.pow(98e-3,0.5)) inexact rounded', 0.31, 0 + decimal.pow(98e-3,0.5));
				AddTestCase('pwsx2982:p2 r:HALF_EVEN (0 + decimal.pow(98e+1,0.5)) inexact rounded', 31, 0 + decimal.pow(98e+1,0.5));
				AddTestCase('pwsx2983:p2 r:HALF_EVEN (0 + decimal.pow(98e+2,0.5)) inexact rounded', 99, 0 + decimal.pow(98e+2,0.5));
				AddTestCase('pwsx2984:p2 r:HALF_EVEN (0 + decimal.pow(98e+3,0.5)) inexact rounded', 3.1e+2, 0 + decimal.pow(98e+3,0.5));
				AddTestCase('pwsx2985:p2 r:HALF_EVEN (0 + decimal.pow(0.99,0.5)) inexact rounded', 0.99, 0 + decimal.pow(0.99,0.5));
				AddTestCase('pwsx2986:p2 r:HALF_EVEN (0 + decimal.pow(0.099,0.5)) inexact rounded', 0.31, 0 + decimal.pow(0.099,0.5));
				AddTestCase('pwsx2987:p2 r:HALF_EVEN (0 + decimal.pow(99.0e-1,0.5)) inexact rounded', 3.1, 0 + decimal.pow(99.0e-1,0.5));
				AddTestCase('pwsx2988:p2 r:HALF_EVEN (0 + decimal.pow(99.00e-2,0.5)) inexact rounded', 0.99, 0 + decimal.pow(99.00e-2,0.5));
				AddTestCase('pwsx2989:p2 r:HALF_EVEN (0 + decimal.pow(99e-3,0.5)) inexact rounded', 0.31, 0 + decimal.pow(99e-3,0.5));
				AddTestCase('pwsx2990:p2 r:HALF_EVEN (0 + decimal.pow(99e+1,0.5)) inexact rounded', 31, 0 + decimal.pow(99e+1,0.5));
				AddTestCase('pwsx2991:p2 r:HALF_EVEN (0 + decimal.pow(99e+2,0.5)) inexact rounded', 99, 0 + decimal.pow(99e+2,0.5));
				AddTestCase('pwsx2992:p2 r:HALF_EVEN (0 + decimal.pow(99e+3,0.5)) inexact rounded', 3.1e+2, 0 + decimal.pow(99e+3,0.5));
				// precision 3 squareroot tests [exhaustive, f and f/10]
				{
					use rounding HALF_EVEN;
					{
						use precision 3;
						AddTestCase('pwsx3001:p3 r:HALF_EVEN (0 + decimal.pow(0.1,0.5)) inexact rounded', 0.316, 0 + decimal.pow(0.1,0.5));
						AddTestCase('pwsx3002:p3 r:HALF_EVEN (0 + decimal.pow(0.01,0.5)) inexact rounded', 0.100, 0 + decimal.pow(0.01,0.5));
						AddTestCase('pwsx3003:p3 r:HALF_EVEN (0 + decimal.pow(0.2,0.5)) inexact rounded', 0.447, 0 + decimal.pow(0.2,0.5));
						AddTestCase('pwsx3004:p3 r:HALF_EVEN (0 + decimal.pow(0.02,0.5)) inexact rounded', 0.141, 0 + decimal.pow(0.02,0.5));
						AddTestCase('pwsx3005:p3 r:HALF_EVEN (0 + decimal.pow(0.3,0.5)) inexact rounded', 0.548, 0 + decimal.pow(0.3,0.5));
						AddTestCase('pwsx3006:p3 r:HALF_EVEN (0 + decimal.pow(0.03,0.5)) inexact rounded', 0.173, 0 + decimal.pow(0.03,0.5));
						AddTestCase('pwsx3007:p3 r:HALF_EVEN (0 + decimal.pow(0.4,0.5)) inexact rounded', 0.632, 0 + decimal.pow(0.4,0.5));
						AddTestCase('pwsx3008:p3 r:HALF_EVEN (0 + decimal.pow(0.04,0.5)) inexact rounded', 0.200, 0 + decimal.pow(0.04,0.5));
						AddTestCase('pwsx3009:p3 r:HALF_EVEN (0 + decimal.pow(0.5,0.5)) inexact rounded', 0.707, 0 + decimal.pow(0.5,0.5));
						AddTestCase('pwsx3010:p3 r:HALF_EVEN (0 + decimal.pow(0.05,0.5)) inexact rounded', 0.224, 0 + decimal.pow(0.05,0.5));
						AddTestCase('pwsx3011:p3 r:HALF_EVEN (0 + decimal.pow(0.6,0.5)) inexact rounded', 0.775, 0 + decimal.pow(0.6,0.5));
						AddTestCase('pwsx3012:p3 r:HALF_EVEN (0 + decimal.pow(0.06,0.5)) inexact rounded', 0.245, 0 + decimal.pow(0.06,0.5));
						AddTestCase('pwsx3013:p3 r:HALF_EVEN (0 + decimal.pow(0.7,0.5)) inexact rounded', 0.837, 0 + decimal.pow(0.7,0.5));
						AddTestCase('pwsx3014:p3 r:HALF_EVEN (0 + decimal.pow(0.07,0.5)) inexact rounded', 0.265, 0 + decimal.pow(0.07,0.5));
						AddTestCase('pwsx3015:p3 r:HALF_EVEN (0 + decimal.pow(0.8,0.5)) inexact rounded', 0.894, 0 + decimal.pow(0.8,0.5));
						AddTestCase('pwsx3016:p3 r:HALF_EVEN (0 + decimal.pow(0.08,0.5)) inexact rounded', 0.283, 0 + decimal.pow(0.08,0.5));
						AddTestCase('pwsx3017:p3 r:HALF_EVEN (0 + decimal.pow(0.9,0.5)) inexact rounded', 0.949, 0 + decimal.pow(0.9,0.5));
						AddTestCase('pwsx3018:p3 r:HALF_EVEN (0 + decimal.pow(0.09,0.5)) inexact rounded', 0.300, 0 + decimal.pow(0.09,0.5));
						AddTestCase('pwsx3019:p3 r:HALF_EVEN (0 + decimal.pow(0.11,0.5)) inexact rounded', 0.332, 0 + decimal.pow(0.11,0.5));
						AddTestCase('pwsx3020:p3 r:HALF_EVEN (0 + decimal.pow(0.011,0.5)) inexact rounded', 0.105, 0 + decimal.pow(0.011,0.5));
						AddTestCase('pwsx3021:p3 r:HALF_EVEN (0 + decimal.pow(0.12,0.5)) inexact rounded', 0.346, 0 + decimal.pow(0.12,0.5));
						AddTestCase('pwsx3022:p3 r:HALF_EVEN (0 + decimal.pow(0.012,0.5)) inexact rounded', 0.110, 0 + decimal.pow(0.012,0.5));
						AddTestCase('pwsx3023:p3 r:HALF_EVEN (0 + decimal.pow(0.13,0.5)) inexact rounded', 0.361, 0 + decimal.pow(0.13,0.5));
						AddTestCase('pwsx3024:p3 r:HALF_EVEN (0 + decimal.pow(0.013,0.5)) inexact rounded', 0.114, 0 + decimal.pow(0.013,0.5));
						AddTestCase('pwsx3025:p3 r:HALF_EVEN (0 + decimal.pow(0.14,0.5)) inexact rounded', 0.374, 0 + decimal.pow(0.14,0.5));
						AddTestCase('pwsx3026:p3 r:HALF_EVEN (0 + decimal.pow(0.014,0.5)) inexact rounded', 0.118, 0 + decimal.pow(0.014,0.5));
						AddTestCase('pwsx3027:p3 r:HALF_EVEN (0 + decimal.pow(0.15,0.5)) inexact rounded', 0.387, 0 + decimal.pow(0.15,0.5));
						AddTestCase('pwsx3028:p3 r:HALF_EVEN (0 + decimal.pow(0.015,0.5)) inexact rounded', 0.122, 0 + decimal.pow(0.015,0.5));
						AddTestCase('pwsx3029:p3 r:HALF_EVEN (0 + decimal.pow(0.16,0.5)) inexact rounded', 0.400, 0 + decimal.pow(0.16,0.5));
						AddTestCase('pwsx3030:p3 r:HALF_EVEN (0 + decimal.pow(0.016,0.5)) inexact rounded', 0.126, 0 + decimal.pow(0.016,0.5));
						AddTestCase('pwsx3031:p3 r:HALF_EVEN (0 + decimal.pow(0.17,0.5)) inexact rounded', 0.412, 0 + decimal.pow(0.17,0.5));
						AddTestCase('pwsx3032:p3 r:HALF_EVEN (0 + decimal.pow(0.017,0.5)) inexact rounded', 0.130, 0 + decimal.pow(0.017,0.5));
						AddTestCase('pwsx3033:p3 r:HALF_EVEN (0 + decimal.pow(0.18,0.5)) inexact rounded', 0.424, 0 + decimal.pow(0.18,0.5));
						AddTestCase('pwsx3034:p3 r:HALF_EVEN (0 + decimal.pow(0.018,0.5)) inexact rounded', 0.134, 0 + decimal.pow(0.018,0.5));
						AddTestCase('pwsx3035:p3 r:HALF_EVEN (0 + decimal.pow(0.19,0.5)) inexact rounded', 0.436, 0 + decimal.pow(0.19,0.5));
						AddTestCase('pwsx3036:p3 r:HALF_EVEN (0 + decimal.pow(0.019,0.5)) inexact rounded', 0.138, 0 + decimal.pow(0.019,0.5));
						AddTestCase('pwsx3037:p3 r:HALF_EVEN (0 + decimal.pow(0.21,0.5)) inexact rounded', 0.458, 0 + decimal.pow(0.21,0.5));
						AddTestCase('pwsx3038:p3 r:HALF_EVEN (0 + decimal.pow(0.021,0.5)) inexact rounded', 0.145, 0 + decimal.pow(0.021,0.5));
						AddTestCase('pwsx3039:p3 r:HALF_EVEN (0 + decimal.pow(0.22,0.5)) inexact rounded', 0.469, 0 + decimal.pow(0.22,0.5));
						AddTestCase('pwsx3040:p3 r:HALF_EVEN (0 + decimal.pow(0.022,0.5)) inexact rounded', 0.148, 0 + decimal.pow(0.022,0.5));
						AddTestCase('pwsx3041:p3 r:HALF_EVEN (0 + decimal.pow(0.23,0.5)) inexact rounded', 0.480, 0 + decimal.pow(0.23,0.5));
						AddTestCase('pwsx3042:p3 r:HALF_EVEN (0 + decimal.pow(0.023,0.5)) inexact rounded', 0.152, 0 + decimal.pow(0.023,0.5));
						AddTestCase('pwsx3043:p3 r:HALF_EVEN (0 + decimal.pow(0.24,0.5)) inexact rounded', 0.490, 0 + decimal.pow(0.24,0.5));
						AddTestCase('pwsx3044:p3 r:HALF_EVEN (0 + decimal.pow(0.024,0.5)) inexact rounded', 0.155, 0 + decimal.pow(0.024,0.5));
						AddTestCase('pwsx3045:p3 r:HALF_EVEN (0 + decimal.pow(0.25,0.5)) inexact rounded', 0.500, 0 + decimal.pow(0.25,0.5));
						AddTestCase('pwsx3046:p3 r:HALF_EVEN (0 + decimal.pow(0.025,0.5)) inexact rounded', 0.158, 0 + decimal.pow(0.025,0.5));
						AddTestCase('pwsx3047:p3 r:HALF_EVEN (0 + decimal.pow(0.26,0.5)) inexact rounded', 0.510, 0 + decimal.pow(0.26,0.5));
						AddTestCase('pwsx3048:p3 r:HALF_EVEN (0 + decimal.pow(0.026,0.5)) inexact rounded', 0.161, 0 + decimal.pow(0.026,0.5));
						AddTestCase('pwsx3049:p3 r:HALF_EVEN (0 + decimal.pow(0.27,0.5)) inexact rounded', 0.520, 0 + decimal.pow(0.27,0.5));
						AddTestCase('pwsx3050:p3 r:HALF_EVEN (0 + decimal.pow(0.027,0.5)) inexact rounded', 0.164, 0 + decimal.pow(0.027,0.5));
						AddTestCase('pwsx3051:p3 r:HALF_EVEN (0 + decimal.pow(0.28,0.5)) inexact rounded', 0.529, 0 + decimal.pow(0.28,0.5));
						AddTestCase('pwsx3052:p3 r:HALF_EVEN (0 + decimal.pow(0.028,0.5)) inexact rounded', 0.167, 0 + decimal.pow(0.028,0.5));
						AddTestCase('pwsx3053:p3 r:HALF_EVEN (0 + decimal.pow(0.29,0.5)) inexact rounded', 0.539, 0 + decimal.pow(0.29,0.5));
						AddTestCase('pwsx3054:p3 r:HALF_EVEN (0 + decimal.pow(0.029,0.5)) inexact rounded', 0.170, 0 + decimal.pow(0.029,0.5));
						AddTestCase('pwsx3055:p3 r:HALF_EVEN (0 + decimal.pow(0.31,0.5)) inexact rounded', 0.557, 0 + decimal.pow(0.31,0.5));
						AddTestCase('pwsx3056:p3 r:HALF_EVEN (0 + decimal.pow(0.031,0.5)) inexact rounded', 0.176, 0 + decimal.pow(0.031,0.5));
						AddTestCase('pwsx3057:p3 r:HALF_EVEN (0 + decimal.pow(0.32,0.5)) inexact rounded', 0.566, 0 + decimal.pow(0.32,0.5));
						AddTestCase('pwsx3058:p3 r:HALF_EVEN (0 + decimal.pow(0.032,0.5)) inexact rounded', 0.179, 0 + decimal.pow(0.032,0.5));
						AddTestCase('pwsx3059:p3 r:HALF_EVEN (0 + decimal.pow(0.33,0.5)) inexact rounded', 0.574, 0 + decimal.pow(0.33,0.5));
						AddTestCase('pwsx3060:p3 r:HALF_EVEN (0 + decimal.pow(0.033,0.5)) inexact rounded', 0.182, 0 + decimal.pow(0.033,0.5));
						AddTestCase('pwsx3061:p3 r:HALF_EVEN (0 + decimal.pow(0.34,0.5)) inexact rounded', 0.583, 0 + decimal.pow(0.34,0.5));
						AddTestCase('pwsx3062:p3 r:HALF_EVEN (0 + decimal.pow(0.034,0.5)) inexact rounded', 0.184, 0 + decimal.pow(0.034,0.5));
						AddTestCase('pwsx3063:p3 r:HALF_EVEN (0 + decimal.pow(0.35,0.5)) inexact rounded', 0.592, 0 + decimal.pow(0.35,0.5));
						AddTestCase('pwsx3064:p3 r:HALF_EVEN (0 + decimal.pow(0.035,0.5)) inexact rounded', 0.187, 0 + decimal.pow(0.035,0.5));
						AddTestCase('pwsx3065:p3 r:HALF_EVEN (0 + decimal.pow(0.36,0.5)) inexact rounded', 0.600, 0 + decimal.pow(0.36,0.5));
						AddTestCase('pwsx3066:p3 r:HALF_EVEN (0 + decimal.pow(0.036,0.5)) inexact rounded', 0.190, 0 + decimal.pow(0.036,0.5));
						AddTestCase('pwsx3067:p3 r:HALF_EVEN (0 + decimal.pow(0.37,0.5)) inexact rounded', 0.608, 0 + decimal.pow(0.37,0.5));
						AddTestCase('pwsx3068:p3 r:HALF_EVEN (0 + decimal.pow(0.037,0.5)) inexact rounded', 0.192, 0 + decimal.pow(0.037,0.5));
						AddTestCase('pwsx3069:p3 r:HALF_EVEN (0 + decimal.pow(0.38,0.5)) inexact rounded', 0.616, 0 + decimal.pow(0.38,0.5));
						AddTestCase('pwsx3070:p3 r:HALF_EVEN (0 + decimal.pow(0.038,0.5)) inexact rounded', 0.195, 0 + decimal.pow(0.038,0.5));
						AddTestCase('pwsx3071:p3 r:HALF_EVEN (0 + decimal.pow(0.39,0.5)) inexact rounded', 0.624, 0 + decimal.pow(0.39,0.5));
						AddTestCase('pwsx3072:p3 r:HALF_EVEN (0 + decimal.pow(0.039,0.5)) inexact rounded', 0.197, 0 + decimal.pow(0.039,0.5));
						AddTestCase('pwsx3073:p3 r:HALF_EVEN (0 + decimal.pow(0.41,0.5)) inexact rounded', 0.640, 0 + decimal.pow(0.41,0.5));
						AddTestCase('pwsx3074:p3 r:HALF_EVEN (0 + decimal.pow(0.041,0.5)) inexact rounded', 0.202, 0 + decimal.pow(0.041,0.5));
						AddTestCase('pwsx3075:p3 r:HALF_EVEN (0 + decimal.pow(0.42,0.5)) inexact rounded', 0.648, 0 + decimal.pow(0.42,0.5));
						AddTestCase('pwsx3076:p3 r:HALF_EVEN (0 + decimal.pow(0.042,0.5)) inexact rounded', 0.205, 0 + decimal.pow(0.042,0.5));
						AddTestCase('pwsx3077:p3 r:HALF_EVEN (0 + decimal.pow(0.43,0.5)) inexact rounded', 0.656, 0 + decimal.pow(0.43,0.5));
						AddTestCase('pwsx3078:p3 r:HALF_EVEN (0 + decimal.pow(0.043,0.5)) inexact rounded', 0.207, 0 + decimal.pow(0.043,0.5));
						AddTestCase('pwsx3079:p3 r:HALF_EVEN (0 + decimal.pow(0.44,0.5)) inexact rounded', 0.663, 0 + decimal.pow(0.44,0.5));
						AddTestCase('pwsx3080:p3 r:HALF_EVEN (0 + decimal.pow(0.044,0.5)) inexact rounded', 0.210, 0 + decimal.pow(0.044,0.5));
						AddTestCase('pwsx3081:p3 r:HALF_EVEN (0 + decimal.pow(0.45,0.5)) inexact rounded', 0.671, 0 + decimal.pow(0.45,0.5));
						AddTestCase('pwsx3082:p3 r:HALF_EVEN (0 + decimal.pow(0.045,0.5)) inexact rounded', 0.212, 0 + decimal.pow(0.045,0.5));
						AddTestCase('pwsx3083:p3 r:HALF_EVEN (0 + decimal.pow(0.46,0.5)) inexact rounded', 0.678, 0 + decimal.pow(0.46,0.5));
						AddTestCase('pwsx3084:p3 r:HALF_EVEN (0 + decimal.pow(0.046,0.5)) inexact rounded', 0.214, 0 + decimal.pow(0.046,0.5));
						AddTestCase('pwsx3085:p3 r:HALF_EVEN (0 + decimal.pow(0.47,0.5)) inexact rounded', 0.686, 0 + decimal.pow(0.47,0.5));
						AddTestCase('pwsx3086:p3 r:HALF_EVEN (0 + decimal.pow(0.047,0.5)) inexact rounded', 0.217, 0 + decimal.pow(0.047,0.5));
						AddTestCase('pwsx3087:p3 r:HALF_EVEN (0 + decimal.pow(0.48,0.5)) inexact rounded', 0.693, 0 + decimal.pow(0.48,0.5));
						AddTestCase('pwsx3088:p3 r:HALF_EVEN (0 + decimal.pow(0.048,0.5)) inexact rounded', 0.219, 0 + decimal.pow(0.048,0.5));
						AddTestCase('pwsx3089:p3 r:HALF_EVEN (0 + decimal.pow(0.49,0.5)) inexact rounded', 0.700, 0 + decimal.pow(0.49,0.5));
						AddTestCase('pwsx3090:p3 r:HALF_EVEN (0 + decimal.pow(0.049,0.5)) inexact rounded', 0.221, 0 + decimal.pow(0.049,0.5));
						AddTestCase('pwsx3091:p3 r:HALF_EVEN (0 + decimal.pow(0.51,0.5)) inexact rounded', 0.714, 0 + decimal.pow(0.51,0.5));
						AddTestCase('pwsx3092:p3 r:HALF_EVEN (0 + decimal.pow(0.051,0.5)) inexact rounded', 0.226, 0 + decimal.pow(0.051,0.5));
						AddTestCase('pwsx3093:p3 r:HALF_EVEN (0 + decimal.pow(0.52,0.5)) inexact rounded', 0.721, 0 + decimal.pow(0.52,0.5));
						AddTestCase('pwsx3094:p3 r:HALF_EVEN (0 + decimal.pow(0.052,0.5)) inexact rounded', 0.228, 0 + decimal.pow(0.052,0.5));
						AddTestCase('pwsx3095:p3 r:HALF_EVEN (0 + decimal.pow(0.53,0.5)) inexact rounded', 0.728, 0 + decimal.pow(0.53,0.5));
						AddTestCase('pwsx3096:p3 r:HALF_EVEN (0 + decimal.pow(0.053,0.5)) inexact rounded', 0.230, 0 + decimal.pow(0.053,0.5));
						AddTestCase('pwsx3097:p3 r:HALF_EVEN (0 + decimal.pow(0.54,0.5)) inexact rounded', 0.735, 0 + decimal.pow(0.54,0.5));
						AddTestCase('pwsx3098:p3 r:HALF_EVEN (0 + decimal.pow(0.054,0.5)) inexact rounded', 0.232, 0 + decimal.pow(0.054,0.5));
						AddTestCase('pwsx3099:p3 r:HALF_EVEN (0 + decimal.pow(0.55,0.5)) inexact rounded', 0.742, 0 + decimal.pow(0.55,0.5));
						AddTestCase('pwsx3100:p3 r:HALF_EVEN (0 + decimal.pow(0.055,0.5)) inexact rounded', 0.235, 0 + decimal.pow(0.055,0.5));
						AddTestCase('pwsx3101:p3 r:HALF_EVEN (0 + decimal.pow(0.56,0.5)) inexact rounded', 0.748, 0 + decimal.pow(0.56,0.5));
						AddTestCase('pwsx3102:p3 r:HALF_EVEN (0 + decimal.pow(0.056,0.5)) inexact rounded', 0.237, 0 + decimal.pow(0.056,0.5));
						AddTestCase('pwsx3103:p3 r:HALF_EVEN (0 + decimal.pow(0.57,0.5)) inexact rounded', 0.755, 0 + decimal.pow(0.57,0.5));
						AddTestCase('pwsx3104:p3 r:HALF_EVEN (0 + decimal.pow(0.057,0.5)) inexact rounded', 0.239, 0 + decimal.pow(0.057,0.5));
						AddTestCase('pwsx3105:p3 r:HALF_EVEN (0 + decimal.pow(0.58,0.5)) inexact rounded', 0.762, 0 + decimal.pow(0.58,0.5));
						AddTestCase('pwsx3106:p3 r:HALF_EVEN (0 + decimal.pow(0.058,0.5)) inexact rounded', 0.241, 0 + decimal.pow(0.058,0.5));
						AddTestCase('pwsx3107:p3 r:HALF_EVEN (0 + decimal.pow(0.59,0.5)) inexact rounded', 0.768, 0 + decimal.pow(0.59,0.5));
						AddTestCase('pwsx3108:p3 r:HALF_EVEN (0 + decimal.pow(0.059,0.5)) inexact rounded', 0.243, 0 + decimal.pow(0.059,0.5));
						AddTestCase('pwsx3109:p3 r:HALF_EVEN (0 + decimal.pow(0.61,0.5)) inexact rounded', 0.781, 0 + decimal.pow(0.61,0.5));
						AddTestCase('pwsx3110:p3 r:HALF_EVEN (0 + decimal.pow(0.061,0.5)) inexact rounded', 0.247, 0 + decimal.pow(0.061,0.5));
						AddTestCase('pwsx3111:p3 r:HALF_EVEN (0 + decimal.pow(0.62,0.5)) inexact rounded', 0.787, 0 + decimal.pow(0.62,0.5));
						AddTestCase('pwsx3112:p3 r:HALF_EVEN (0 + decimal.pow(0.062,0.5)) inexact rounded', 0.249, 0 + decimal.pow(0.062,0.5));
						AddTestCase('pwsx3113:p3 r:HALF_EVEN (0 + decimal.pow(0.63,0.5)) inexact rounded', 0.794, 0 + decimal.pow(0.63,0.5));
						AddTestCase('pwsx3114:p3 r:HALF_EVEN (0 + decimal.pow(0.063,0.5)) inexact rounded', 0.251, 0 + decimal.pow(0.063,0.5));
						AddTestCase('pwsx3115:p3 r:HALF_EVEN (0 + decimal.pow(0.64,0.5)) inexact rounded', 0.800, 0 + decimal.pow(0.64,0.5));
						AddTestCase('pwsx3116:p3 r:HALF_EVEN (0 + decimal.pow(0.064,0.5)) inexact rounded', 0.253, 0 + decimal.pow(0.064,0.5));
						AddTestCase('pwsx3117:p3 r:HALF_EVEN (0 + decimal.pow(0.65,0.5)) inexact rounded', 0.806, 0 + decimal.pow(0.65,0.5));
						AddTestCase('pwsx3118:p3 r:HALF_EVEN (0 + decimal.pow(0.065,0.5)) inexact rounded', 0.255, 0 + decimal.pow(0.065,0.5));
						AddTestCase('pwsx3119:p3 r:HALF_EVEN (0 + decimal.pow(0.66,0.5)) inexact rounded', 0.812, 0 + decimal.pow(0.66,0.5));
						AddTestCase('pwsx3120:p3 r:HALF_EVEN (0 + decimal.pow(0.066,0.5)) inexact rounded', 0.257, 0 + decimal.pow(0.066,0.5));
						AddTestCase('pwsx3121:p3 r:HALF_EVEN (0 + decimal.pow(0.67,0.5)) inexact rounded', 0.819, 0 + decimal.pow(0.67,0.5));
						AddTestCase('pwsx3122:p3 r:HALF_EVEN (0 + decimal.pow(0.067,0.5)) inexact rounded', 0.259, 0 + decimal.pow(0.067,0.5));
						AddTestCase('pwsx3123:p3 r:HALF_EVEN (0 + decimal.pow(0.68,0.5)) inexact rounded', 0.825, 0 + decimal.pow(0.68,0.5));
						AddTestCase('pwsx3124:p3 r:HALF_EVEN (0 + decimal.pow(0.068,0.5)) inexact rounded', 0.261, 0 + decimal.pow(0.068,0.5));
						AddTestCase('pwsx3125:p3 r:HALF_EVEN (0 + decimal.pow(0.69,0.5)) inexact rounded', 0.831, 0 + decimal.pow(0.69,0.5));
						AddTestCase('pwsx3126:p3 r:HALF_EVEN (0 + decimal.pow(0.069,0.5)) inexact rounded', 0.263, 0 + decimal.pow(0.069,0.5));
						AddTestCase('pwsx3127:p3 r:HALF_EVEN (0 + decimal.pow(0.71,0.5)) inexact rounded', 0.843, 0 + decimal.pow(0.71,0.5));
						AddTestCase('pwsx3128:p3 r:HALF_EVEN (0 + decimal.pow(0.071,0.5)) inexact rounded', 0.266, 0 + decimal.pow(0.071,0.5));
						AddTestCase('pwsx3129:p3 r:HALF_EVEN (0 + decimal.pow(0.72,0.5)) inexact rounded', 0.849, 0 + decimal.pow(0.72,0.5));
						AddTestCase('pwsx3130:p3 r:HALF_EVEN (0 + decimal.pow(0.072,0.5)) inexact rounded', 0.268, 0 + decimal.pow(0.072,0.5));
						AddTestCase('pwsx3131:p3 r:HALF_EVEN (0 + decimal.pow(0.73,0.5)) inexact rounded', 0.854, 0 + decimal.pow(0.73,0.5));
						AddTestCase('pwsx3132:p3 r:HALF_EVEN (0 + decimal.pow(0.073,0.5)) inexact rounded', 0.270, 0 + decimal.pow(0.073,0.5));
						AddTestCase('pwsx3133:p3 r:HALF_EVEN (0 + decimal.pow(0.74,0.5)) inexact rounded', 0.860, 0 + decimal.pow(0.74,0.5));
						AddTestCase('pwsx3134:p3 r:HALF_EVEN (0 + decimal.pow(0.074,0.5)) inexact rounded', 0.272, 0 + decimal.pow(0.074,0.5));
						AddTestCase('pwsx3135:p3 r:HALF_EVEN (0 + decimal.pow(0.75,0.5)) inexact rounded', 0.866, 0 + decimal.pow(0.75,0.5));
						AddTestCase('pwsx3136:p3 r:HALF_EVEN (0 + decimal.pow(0.075,0.5)) inexact rounded', 0.274, 0 + decimal.pow(0.075,0.5));
						AddTestCase('pwsx3137:p3 r:HALF_EVEN (0 + decimal.pow(0.76,0.5)) inexact rounded', 0.872, 0 + decimal.pow(0.76,0.5));
						AddTestCase('pwsx3138:p3 r:HALF_EVEN (0 + decimal.pow(0.076,0.5)) inexact rounded', 0.276, 0 + decimal.pow(0.076,0.5));
						AddTestCase('pwsx3139:p3 r:HALF_EVEN (0 + decimal.pow(0.77,0.5)) inexact rounded', 0.877, 0 + decimal.pow(0.77,0.5));
						AddTestCase('pwsx3140:p3 r:HALF_EVEN (0 + decimal.pow(0.077,0.5)) inexact rounded', 0.277, 0 + decimal.pow(0.077,0.5));
						AddTestCase('pwsx3141:p3 r:HALF_EVEN (0 + decimal.pow(0.78,0.5)) inexact rounded', 0.883, 0 + decimal.pow(0.78,0.5));
						AddTestCase('pwsx3142:p3 r:HALF_EVEN (0 + decimal.pow(0.078,0.5)) inexact rounded', 0.279, 0 + decimal.pow(0.078,0.5));
						AddTestCase('pwsx3143:p3 r:HALF_EVEN (0 + decimal.pow(0.79,0.5)) inexact rounded', 0.889, 0 + decimal.pow(0.79,0.5));
						AddTestCase('pwsx3144:p3 r:HALF_EVEN (0 + decimal.pow(0.079,0.5)) inexact rounded', 0.281, 0 + decimal.pow(0.079,0.5));
						AddTestCase('pwsx3145:p3 r:HALF_EVEN (0 + decimal.pow(0.81,0.5)) inexact rounded', 0.900, 0 + decimal.pow(0.81,0.5));
						AddTestCase('pwsx3146:p3 r:HALF_EVEN (0 + decimal.pow(0.081,0.5)) inexact rounded', 0.285, 0 + decimal.pow(0.081,0.5));
						AddTestCase('pwsx3147:p3 r:HALF_EVEN (0 + decimal.pow(0.82,0.5)) inexact rounded', 0.906, 0 + decimal.pow(0.82,0.5));
						AddTestCase('pwsx3148:p3 r:HALF_EVEN (0 + decimal.pow(0.082,0.5)) inexact rounded', 0.286, 0 + decimal.pow(0.082,0.5));
						AddTestCase('pwsx3149:p3 r:HALF_EVEN (0 + decimal.pow(0.83,0.5)) inexact rounded', 0.911, 0 + decimal.pow(0.83,0.5));
						AddTestCase('pwsx3150:p3 r:HALF_EVEN (0 + decimal.pow(0.083,0.5)) inexact rounded', 0.288, 0 + decimal.pow(0.083,0.5));
						AddTestCase('pwsx3151:p3 r:HALF_EVEN (0 + decimal.pow(0.84,0.5)) inexact rounded', 0.917, 0 + decimal.pow(0.84,0.5));
						AddTestCase('pwsx3152:p3 r:HALF_EVEN (0 + decimal.pow(0.084,0.5)) inexact rounded', 0.290, 0 + decimal.pow(0.084,0.5));
						AddTestCase('pwsx3153:p3 r:HALF_EVEN (0 + decimal.pow(0.85,0.5)) inexact rounded', 0.922, 0 + decimal.pow(0.85,0.5));
						AddTestCase('pwsx3154:p3 r:HALF_EVEN (0 + decimal.pow(0.085,0.5)) inexact rounded', 0.292, 0 + decimal.pow(0.085,0.5));
						AddTestCase('pwsx3155:p3 r:HALF_EVEN (0 + decimal.pow(0.86,0.5)) inexact rounded', 0.927, 0 + decimal.pow(0.86,0.5));
						AddTestCase('pwsx3156:p3 r:HALF_EVEN (0 + decimal.pow(0.086,0.5)) inexact rounded', 0.293, 0 + decimal.pow(0.086,0.5));
						AddTestCase('pwsx3157:p3 r:HALF_EVEN (0 + decimal.pow(0.87,0.5)) inexact rounded', 0.933, 0 + decimal.pow(0.87,0.5));
						AddTestCase('pwsx3158:p3 r:HALF_EVEN (0 + decimal.pow(0.087,0.5)) inexact rounded', 0.295, 0 + decimal.pow(0.087,0.5));
						AddTestCase('pwsx3159:p3 r:HALF_EVEN (0 + decimal.pow(0.88,0.5)) inexact rounded', 0.938, 0 + decimal.pow(0.88,0.5));
						AddTestCase('pwsx3160:p3 r:HALF_EVEN (0 + decimal.pow(0.088,0.5)) inexact rounded', 0.297, 0 + decimal.pow(0.088,0.5));
						AddTestCase('pwsx3161:p3 r:HALF_EVEN (0 + decimal.pow(0.89,0.5)) inexact rounded', 0.943, 0 + decimal.pow(0.89,0.5));
						AddTestCase('pwsx3162:p3 r:HALF_EVEN (0 + decimal.pow(0.089,0.5)) inexact rounded', 0.298, 0 + decimal.pow(0.089,0.5));
						AddTestCase('pwsx3163:p3 r:HALF_EVEN (0 + decimal.pow(0.91,0.5)) inexact rounded', 0.954, 0 + decimal.pow(0.91,0.5));
						AddTestCase('pwsx3164:p3 r:HALF_EVEN (0 + decimal.pow(0.091,0.5)) inexact rounded', 0.302, 0 + decimal.pow(0.091,0.5));
						AddTestCase('pwsx3165:p3 r:HALF_EVEN (0 + decimal.pow(0.92,0.5)) inexact rounded', 0.959, 0 + decimal.pow(0.92,0.5));
						AddTestCase('pwsx3166:p3 r:HALF_EVEN (0 + decimal.pow(0.092,0.5)) inexact rounded', 0.303, 0 + decimal.pow(0.092,0.5));
						AddTestCase('pwsx3167:p3 r:HALF_EVEN (0 + decimal.pow(0.93,0.5)) inexact rounded', 0.964, 0 + decimal.pow(0.93,0.5));
						AddTestCase('pwsx3168:p3 r:HALF_EVEN (0 + decimal.pow(0.093,0.5)) inexact rounded', 0.305, 0 + decimal.pow(0.093,0.5));
						AddTestCase('pwsx3169:p3 r:HALF_EVEN (0 + decimal.pow(0.94,0.5)) inexact rounded', 0.970, 0 + decimal.pow(0.94,0.5));
						AddTestCase('pwsx3170:p3 r:HALF_EVEN (0 + decimal.pow(0.094,0.5)) inexact rounded', 0.307, 0 + decimal.pow(0.094,0.5));
						AddTestCase('pwsx3171:p3 r:HALF_EVEN (0 + decimal.pow(0.95,0.5)) inexact rounded', 0.975, 0 + decimal.pow(0.95,0.5));
						AddTestCase('pwsx3172:p3 r:HALF_EVEN (0 + decimal.pow(0.095,0.5)) inexact rounded', 0.308, 0 + decimal.pow(0.095,0.5));
						AddTestCase('pwsx3173:p3 r:HALF_EVEN (0 + decimal.pow(0.96,0.5)) inexact rounded', 0.980, 0 + decimal.pow(0.96,0.5));
						AddTestCase('pwsx3174:p3 r:HALF_EVEN (0 + decimal.pow(0.096,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.096,0.5));
						AddTestCase('pwsx3175:p3 r:HALF_EVEN (0 + decimal.pow(0.97,0.5)) inexact rounded', 0.985, 0 + decimal.pow(0.97,0.5));
						AddTestCase('pwsx3176:p3 r:HALF_EVEN (0 + decimal.pow(0.097,0.5)) inexact rounded', 0.311, 0 + decimal.pow(0.097,0.5));
						AddTestCase('pwsx3177:p3 r:HALF_EVEN (0 + decimal.pow(0.98,0.5)) inexact rounded', 0.990, 0 + decimal.pow(0.98,0.5));
						AddTestCase('pwsx3178:p3 r:HALF_EVEN (0 + decimal.pow(0.098,0.5)) inexact rounded', 0.313, 0 + decimal.pow(0.098,0.5));
						AddTestCase('pwsx3179:p3 r:HALF_EVEN (0 + decimal.pow(0.99,0.5)) inexact rounded', 0.995, 0 + decimal.pow(0.99,0.5));
						AddTestCase('pwsx3180:p3 r:HALF_EVEN (0 + decimal.pow(0.099,0.5)) inexact rounded', 0.315, 0 + decimal.pow(0.099,0.5));
						AddTestCase('pwsx3181:p3 r:HALF_EVEN (0 + decimal.pow(0.101,0.5)) inexact rounded', 0.318, 0 + decimal.pow(0.101,0.5));
						AddTestCase('pwsx3182:p3 r:HALF_EVEN (0 + decimal.pow(0.0101,0.5)) inexact rounded', 0.100, 0 + decimal.pow(0.0101,0.5));
						AddTestCase('pwsx3183:p3 r:HALF_EVEN (0 + decimal.pow(0.102,0.5)) inexact rounded', 0.319, 0 + decimal.pow(0.102,0.5));
						AddTestCase('pwsx3184:p3 r:HALF_EVEN (0 + decimal.pow(0.0102,0.5)) inexact rounded', 0.101, 0 + decimal.pow(0.0102,0.5));
						AddTestCase('pwsx3185:p3 r:HALF_EVEN (0 + decimal.pow(0.103,0.5)) inexact rounded', 0.321, 0 + decimal.pow(0.103,0.5));
						AddTestCase('pwsx3186:p3 r:HALF_EVEN (0 + decimal.pow(0.0103,0.5)) inexact rounded', 0.101, 0 + decimal.pow(0.0103,0.5));
						AddTestCase('pwsx3187:p3 r:HALF_EVEN (0 + decimal.pow(0.104,0.5)) inexact rounded', 0.322, 0 + decimal.pow(0.104,0.5));
						AddTestCase('pwsx3188:p3 r:HALF_EVEN (0 + decimal.pow(0.0104,0.5)) inexact rounded', 0.102, 0 + decimal.pow(0.0104,0.5));
						AddTestCase('pwsx3189:p3 r:HALF_EVEN (0 + decimal.pow(0.105,0.5)) inexact rounded', 0.324, 0 + decimal.pow(0.105,0.5));
						AddTestCase('pwsx3190:p3 r:HALF_EVEN (0 + decimal.pow(0.0105,0.5)) inexact rounded', 0.102, 0 + decimal.pow(0.0105,0.5));
						AddTestCase('pwsx3191:p3 r:HALF_EVEN (0 + decimal.pow(0.106,0.5)) inexact rounded', 0.326, 0 + decimal.pow(0.106,0.5));
						AddTestCase('pwsx3192:p3 r:HALF_EVEN (0 + decimal.pow(0.0106,0.5)) inexact rounded', 0.103, 0 + decimal.pow(0.0106,0.5));
						AddTestCase('pwsx3193:p3 r:HALF_EVEN (0 + decimal.pow(0.107,0.5)) inexact rounded', 0.327, 0 + decimal.pow(0.107,0.5));
						AddTestCase('pwsx3194:p3 r:HALF_EVEN (0 + decimal.pow(0.0107,0.5)) inexact rounded', 0.103, 0 + decimal.pow(0.0107,0.5));
						AddTestCase('pwsx3195:p3 r:HALF_EVEN (0 + decimal.pow(0.108,0.5)) inexact rounded', 0.329, 0 + decimal.pow(0.108,0.5));
						AddTestCase('pwsx3196:p3 r:HALF_EVEN (0 + decimal.pow(0.0108,0.5)) inexact rounded', 0.104, 0 + decimal.pow(0.0108,0.5));
						AddTestCase('pwsx3197:p3 r:HALF_EVEN (0 + decimal.pow(0.109,0.5)) inexact rounded', 0.330, 0 + decimal.pow(0.109,0.5));
						AddTestCase('pwsx3198:p3 r:HALF_EVEN (0 + decimal.pow(0.0109,0.5)) inexact rounded', 0.104, 0 + decimal.pow(0.0109,0.5));
						AddTestCase('pwsx3199:p3 r:HALF_EVEN (0 + decimal.pow(0.111,0.5)) inexact rounded', 0.333, 0 + decimal.pow(0.111,0.5));
						AddTestCase('pwsx3200:p3 r:HALF_EVEN (0 + decimal.pow(0.0111,0.5)) inexact rounded', 0.105, 0 + decimal.pow(0.0111,0.5));
						AddTestCase('pwsx3201:p3 r:HALF_EVEN (0 + decimal.pow(0.112,0.5)) inexact rounded', 0.335, 0 + decimal.pow(0.112,0.5));
						AddTestCase('pwsx3202:p3 r:HALF_EVEN (0 + decimal.pow(0.0112,0.5)) inexact rounded', 0.106, 0 + decimal.pow(0.0112,0.5));
						AddTestCase('pwsx3203:p3 r:HALF_EVEN (0 + decimal.pow(0.113,0.5)) inexact rounded', 0.336, 0 + decimal.pow(0.113,0.5));
						AddTestCase('pwsx3204:p3 r:HALF_EVEN (0 + decimal.pow(0.0113,0.5)) inexact rounded', 0.106, 0 + decimal.pow(0.0113,0.5));
						AddTestCase('pwsx3205:p3 r:HALF_EVEN (0 + decimal.pow(0.114,0.5)) inexact rounded', 0.338, 0 + decimal.pow(0.114,0.5));
						AddTestCase('pwsx3206:p3 r:HALF_EVEN (0 + decimal.pow(0.0114,0.5)) inexact rounded', 0.107, 0 + decimal.pow(0.0114,0.5));
						AddTestCase('pwsx3207:p3 r:HALF_EVEN (0 + decimal.pow(0.115,0.5)) inexact rounded', 0.339, 0 + decimal.pow(0.115,0.5));
						AddTestCase('pwsx3208:p3 r:HALF_EVEN (0 + decimal.pow(0.0115,0.5)) inexact rounded', 0.107, 0 + decimal.pow(0.0115,0.5));
						AddTestCase('pwsx3209:p3 r:HALF_EVEN (0 + decimal.pow(0.116,0.5)) inexact rounded', 0.341, 0 + decimal.pow(0.116,0.5));
						AddTestCase('pwsx3210:p3 r:HALF_EVEN (0 + decimal.pow(0.0116,0.5)) inexact rounded', 0.108, 0 + decimal.pow(0.0116,0.5));
						AddTestCase('pwsx3211:p3 r:HALF_EVEN (0 + decimal.pow(0.117,0.5)) inexact rounded', 0.342, 0 + decimal.pow(0.117,0.5));
						AddTestCase('pwsx3212:p3 r:HALF_EVEN (0 + decimal.pow(0.0117,0.5)) inexact rounded', 0.108, 0 + decimal.pow(0.0117,0.5));
						AddTestCase('pwsx3213:p3 r:HALF_EVEN (0 + decimal.pow(0.118,0.5)) inexact rounded', 0.344, 0 + decimal.pow(0.118,0.5));
						AddTestCase('pwsx3214:p3 r:HALF_EVEN (0 + decimal.pow(0.0118,0.5)) inexact rounded', 0.109, 0 + decimal.pow(0.0118,0.5));
						AddTestCase('pwsx3215:p3 r:HALF_EVEN (0 + decimal.pow(0.119,0.5)) inexact rounded', 0.345, 0 + decimal.pow(0.119,0.5));
						AddTestCase('pwsx3216:p3 r:HALF_EVEN (0 + decimal.pow(0.0119,0.5)) inexact rounded', 0.109, 0 + decimal.pow(0.0119,0.5));
						AddTestCase('pwsx3217:p3 r:HALF_EVEN (0 + decimal.pow(0.121,0.5)) inexact rounded', 0.348, 0 + decimal.pow(0.121,0.5));
						AddTestCase('pwsx3218:p3 r:HALF_EVEN (0 + decimal.pow(0.0121,0.5)) inexact rounded', 0.110, 0 + decimal.pow(0.0121,0.5));
						AddTestCase('pwsx3219:p3 r:HALF_EVEN (0 + decimal.pow(0.122,0.5)) inexact rounded', 0.349, 0 + decimal.pow(0.122,0.5));
						AddTestCase('pwsx3220:p3 r:HALF_EVEN (0 + decimal.pow(0.0122,0.5)) inexact rounded', 0.110, 0 + decimal.pow(0.0122,0.5));
						AddTestCase('pwsx3221:p3 r:HALF_EVEN (0 + decimal.pow(0.123,0.5)) inexact rounded', 0.351, 0 + decimal.pow(0.123,0.5));
						AddTestCase('pwsx3222:p3 r:HALF_EVEN (0 + decimal.pow(0.0123,0.5)) inexact rounded', 0.111, 0 + decimal.pow(0.0123,0.5));
						AddTestCase('pwsx3223:p3 r:HALF_EVEN (0 + decimal.pow(0.124,0.5)) inexact rounded', 0.352, 0 + decimal.pow(0.124,0.5));
						AddTestCase('pwsx3224:p3 r:HALF_EVEN (0 + decimal.pow(0.0124,0.5)) inexact rounded', 0.111, 0 + decimal.pow(0.0124,0.5));
						AddTestCase('pwsx3225:p3 r:HALF_EVEN (0 + decimal.pow(0.125,0.5)) inexact rounded', 0.354, 0 + decimal.pow(0.125,0.5));
						AddTestCase('pwsx3226:p3 r:HALF_EVEN (0 + decimal.pow(0.0125,0.5)) inexact rounded', 0.112, 0 + decimal.pow(0.0125,0.5));
						AddTestCase('pwsx3227:p3 r:HALF_EVEN (0 + decimal.pow(0.126,0.5)) inexact rounded', 0.355, 0 + decimal.pow(0.126,0.5));
						AddTestCase('pwsx3228:p3 r:HALF_EVEN (0 + decimal.pow(0.0126,0.5)) inexact rounded', 0.112, 0 + decimal.pow(0.0126,0.5));
						AddTestCase('pwsx3229:p3 r:HALF_EVEN (0 + decimal.pow(0.127,0.5)) inexact rounded', 0.356, 0 + decimal.pow(0.127,0.5));
						AddTestCase('pwsx3230:p3 r:HALF_EVEN (0 + decimal.pow(0.0127,0.5)) inexact rounded', 0.113, 0 + decimal.pow(0.0127,0.5));
						AddTestCase('pwsx3231:p3 r:HALF_EVEN (0 + decimal.pow(0.128,0.5)) inexact rounded', 0.358, 0 + decimal.pow(0.128,0.5));
						AddTestCase('pwsx3232:p3 r:HALF_EVEN (0 + decimal.pow(0.0128,0.5)) inexact rounded', 0.113, 0 + decimal.pow(0.0128,0.5));
						AddTestCase('pwsx3233:p3 r:HALF_EVEN (0 + decimal.pow(0.129,0.5)) inexact rounded', 0.359, 0 + decimal.pow(0.129,0.5));
						AddTestCase('pwsx3234:p3 r:HALF_EVEN (0 + decimal.pow(0.0129,0.5)) inexact rounded', 0.114, 0 + decimal.pow(0.0129,0.5));
						AddTestCase('pwsx3235:p3 r:HALF_EVEN (0 + decimal.pow(0.131,0.5)) inexact rounded', 0.362, 0 + decimal.pow(0.131,0.5));
						AddTestCase('pwsx3236:p3 r:HALF_EVEN (0 + decimal.pow(0.0131,0.5)) inexact rounded', 0.114, 0 + decimal.pow(0.0131,0.5));
						AddTestCase('pwsx3237:p3 r:HALF_EVEN (0 + decimal.pow(0.132,0.5)) inexact rounded', 0.363, 0 + decimal.pow(0.132,0.5));
						AddTestCase('pwsx3238:p3 r:HALF_EVEN (0 + decimal.pow(0.0132,0.5)) inexact rounded', 0.115, 0 + decimal.pow(0.0132,0.5));
						AddTestCase('pwsx3239:p3 r:HALF_EVEN (0 + decimal.pow(0.133,0.5)) inexact rounded', 0.365, 0 + decimal.pow(0.133,0.5));
						AddTestCase('pwsx3240:p3 r:HALF_EVEN (0 + decimal.pow(0.0133,0.5)) inexact rounded', 0.115, 0 + decimal.pow(0.0133,0.5));
						AddTestCase('pwsx3241:p3 r:HALF_EVEN (0 + decimal.pow(0.134,0.5)) inexact rounded', 0.366, 0 + decimal.pow(0.134,0.5));
						AddTestCase('pwsx3242:p3 r:HALF_EVEN (0 + decimal.pow(0.0134,0.5)) inexact rounded', 0.116, 0 + decimal.pow(0.0134,0.5));
						AddTestCase('pwsx3243:p3 r:HALF_EVEN (0 + decimal.pow(0.135,0.5)) inexact rounded', 0.367, 0 + decimal.pow(0.135,0.5));
						AddTestCase('pwsx3244:p3 r:HALF_EVEN (0 + decimal.pow(0.0135,0.5)) inexact rounded', 0.116, 0 + decimal.pow(0.0135,0.5));
						AddTestCase('pwsx3245:p3 r:HALF_EVEN (0 + decimal.pow(0.136,0.5)) inexact rounded', 0.369, 0 + decimal.pow(0.136,0.5));
						AddTestCase('pwsx3246:p3 r:HALF_EVEN (0 + decimal.pow(0.0136,0.5)) inexact rounded', 0.117, 0 + decimal.pow(0.0136,0.5));
						AddTestCase('pwsx3247:p3 r:HALF_EVEN (0 + decimal.pow(0.137,0.5)) inexact rounded', 0.370, 0 + decimal.pow(0.137,0.5));
						AddTestCase('pwsx3248:p3 r:HALF_EVEN (0 + decimal.pow(0.0137,0.5)) inexact rounded', 0.117, 0 + decimal.pow(0.0137,0.5));
						AddTestCase('pwsx3249:p3 r:HALF_EVEN (0 + decimal.pow(0.138,0.5)) inexact rounded', 0.371, 0 + decimal.pow(0.138,0.5));
						AddTestCase('pwsx3250:p3 r:HALF_EVEN (0 + decimal.pow(0.0138,0.5)) inexact rounded', 0.117, 0 + decimal.pow(0.0138,0.5));
						AddTestCase('pwsx3251:p3 r:HALF_EVEN (0 + decimal.pow(0.139,0.5)) inexact rounded', 0.373, 0 + decimal.pow(0.139,0.5));
						AddTestCase('pwsx3252:p3 r:HALF_EVEN (0 + decimal.pow(0.0139,0.5)) inexact rounded', 0.118, 0 + decimal.pow(0.0139,0.5));
						AddTestCase('pwsx3253:p3 r:HALF_EVEN (0 + decimal.pow(0.141,0.5)) inexact rounded', 0.375, 0 + decimal.pow(0.141,0.5));
						AddTestCase('pwsx3254:p3 r:HALF_EVEN (0 + decimal.pow(0.0141,0.5)) inexact rounded', 0.119, 0 + decimal.pow(0.0141,0.5));
						AddTestCase('pwsx3255:p3 r:HALF_EVEN (0 + decimal.pow(0.142,0.5)) inexact rounded', 0.377, 0 + decimal.pow(0.142,0.5));
						AddTestCase('pwsx3256:p3 r:HALF_EVEN (0 + decimal.pow(0.0142,0.5)) inexact rounded', 0.119, 0 + decimal.pow(0.0142,0.5));
						AddTestCase('pwsx3257:p3 r:HALF_EVEN (0 + decimal.pow(0.143,0.5)) inexact rounded', 0.378, 0 + decimal.pow(0.143,0.5));
						AddTestCase('pwsx3258:p3 r:HALF_EVEN (0 + decimal.pow(0.0143,0.5)) inexact rounded', 0.120, 0 + decimal.pow(0.0143,0.5));
						AddTestCase('pwsx3259:p3 r:HALF_EVEN (0 + decimal.pow(0.144,0.5)) inexact rounded', 0.379, 0 + decimal.pow(0.144,0.5));
						AddTestCase('pwsx3260:p3 r:HALF_EVEN (0 + decimal.pow(0.0144,0.5)) inexact rounded', 0.120, 0 + decimal.pow(0.0144,0.5));
						AddTestCase('pwsx3261:p3 r:HALF_EVEN (0 + decimal.pow(0.145,0.5)) inexact rounded', 0.381, 0 + decimal.pow(0.145,0.5));
						AddTestCase('pwsx3262:p3 r:HALF_EVEN (0 + decimal.pow(0.0145,0.5)) inexact rounded', 0.120, 0 + decimal.pow(0.0145,0.5));
						AddTestCase('pwsx3263:p3 r:HALF_EVEN (0 + decimal.pow(0.146,0.5)) inexact rounded', 0.382, 0 + decimal.pow(0.146,0.5));
						AddTestCase('pwsx3264:p3 r:HALF_EVEN (0 + decimal.pow(0.0146,0.5)) inexact rounded', 0.121, 0 + decimal.pow(0.0146,0.5));
						AddTestCase('pwsx3265:p3 r:HALF_EVEN (0 + decimal.pow(0.147,0.5)) inexact rounded', 0.383, 0 + decimal.pow(0.147,0.5));
						AddTestCase('pwsx3266:p3 r:HALF_EVEN (0 + decimal.pow(0.0147,0.5)) inexact rounded', 0.121, 0 + decimal.pow(0.0147,0.5));
						AddTestCase('pwsx3267:p3 r:HALF_EVEN (0 + decimal.pow(0.148,0.5)) inexact rounded', 0.385, 0 + decimal.pow(0.148,0.5));
						AddTestCase('pwsx3268:p3 r:HALF_EVEN (0 + decimal.pow(0.0148,0.5)) inexact rounded', 0.122, 0 + decimal.pow(0.0148,0.5));
						AddTestCase('pwsx3269:p3 r:HALF_EVEN (0 + decimal.pow(0.149,0.5)) inexact rounded', 0.386, 0 + decimal.pow(0.149,0.5));
						AddTestCase('pwsx3270:p3 r:HALF_EVEN (0 + decimal.pow(0.0149,0.5)) inexact rounded', 0.122, 0 + decimal.pow(0.0149,0.5));
						AddTestCase('pwsx3271:p3 r:HALF_EVEN (0 + decimal.pow(0.151,0.5)) inexact rounded', 0.389, 0 + decimal.pow(0.151,0.5));
						AddTestCase('pwsx3272:p3 r:HALF_EVEN (0 + decimal.pow(0.0151,0.5)) inexact rounded', 0.123, 0 + decimal.pow(0.0151,0.5));
						AddTestCase('pwsx3273:p3 r:HALF_EVEN (0 + decimal.pow(0.152,0.5)) inexact rounded', 0.390, 0 + decimal.pow(0.152,0.5));
						AddTestCase('pwsx3274:p3 r:HALF_EVEN (0 + decimal.pow(0.0152,0.5)) inexact rounded', 0.123, 0 + decimal.pow(0.0152,0.5));
						AddTestCase('pwsx3275:p3 r:HALF_EVEN (0 + decimal.pow(0.153,0.5)) inexact rounded', 0.391, 0 + decimal.pow(0.153,0.5));
						AddTestCase('pwsx3276:p3 r:HALF_EVEN (0 + decimal.pow(0.0153,0.5)) inexact rounded', 0.124, 0 + decimal.pow(0.0153,0.5));
						AddTestCase('pwsx3277:p3 r:HALF_EVEN (0 + decimal.pow(0.154,0.5)) inexact rounded', 0.392, 0 + decimal.pow(0.154,0.5));
						AddTestCase('pwsx3278:p3 r:HALF_EVEN (0 + decimal.pow(0.0154,0.5)) inexact rounded', 0.124, 0 + decimal.pow(0.0154,0.5));
						AddTestCase('pwsx3279:p3 r:HALF_EVEN (0 + decimal.pow(0.155,0.5)) inexact rounded', 0.394, 0 + decimal.pow(0.155,0.5));
						AddTestCase('pwsx3280:p3 r:HALF_EVEN (0 + decimal.pow(0.0155,0.5)) inexact rounded', 0.124, 0 + decimal.pow(0.0155,0.5));
						AddTestCase('pwsx3281:p3 r:HALF_EVEN (0 + decimal.pow(0.156,0.5)) inexact rounded', 0.395, 0 + decimal.pow(0.156,0.5));
						AddTestCase('pwsx3282:p3 r:HALF_EVEN (0 + decimal.pow(0.0156,0.5)) inexact rounded', 0.125, 0 + decimal.pow(0.0156,0.5));
						AddTestCase('pwsx3283:p3 r:HALF_EVEN (0 + decimal.pow(0.157,0.5)) inexact rounded', 0.396, 0 + decimal.pow(0.157,0.5));
						AddTestCase('pwsx3284:p3 r:HALF_EVEN (0 + decimal.pow(0.0157,0.5)) inexact rounded', 0.125, 0 + decimal.pow(0.0157,0.5));
						AddTestCase('pwsx3285:p3 r:HALF_EVEN (0 + decimal.pow(0.158,0.5)) inexact rounded', 0.397, 0 + decimal.pow(0.158,0.5));
						AddTestCase('pwsx3286:p3 r:HALF_EVEN (0 + decimal.pow(0.0158,0.5)) inexact rounded', 0.126, 0 + decimal.pow(0.0158,0.5));
						AddTestCase('pwsx3287:p3 r:HALF_EVEN (0 + decimal.pow(0.159,0.5)) inexact rounded', 0.399, 0 + decimal.pow(0.159,0.5));
						AddTestCase('pwsx3288:p3 r:HALF_EVEN (0 + decimal.pow(0.0159,0.5)) inexact rounded', 0.126, 0 + decimal.pow(0.0159,0.5));
						AddTestCase('pwsx3289:p3 r:HALF_EVEN (0 + decimal.pow(0.161,0.5)) inexact rounded', 0.401, 0 + decimal.pow(0.161,0.5));
						AddTestCase('pwsx3290:p3 r:HALF_EVEN (0 + decimal.pow(0.0161,0.5)) inexact rounded', 0.127, 0 + decimal.pow(0.0161,0.5));
						AddTestCase('pwsx3291:p3 r:HALF_EVEN (0 + decimal.pow(0.162,0.5)) inexact rounded', 0.402, 0 + decimal.pow(0.162,0.5));
						AddTestCase('pwsx3292:p3 r:HALF_EVEN (0 + decimal.pow(0.0162,0.5)) inexact rounded', 0.127, 0 + decimal.pow(0.0162,0.5));
						AddTestCase('pwsx3293:p3 r:HALF_EVEN (0 + decimal.pow(0.163,0.5)) inexact rounded', 0.404, 0 + decimal.pow(0.163,0.5));
						AddTestCase('pwsx3294:p3 r:HALF_EVEN (0 + decimal.pow(0.0163,0.5)) inexact rounded', 0.128, 0 + decimal.pow(0.0163,0.5));
						AddTestCase('pwsx3295:p3 r:HALF_EVEN (0 + decimal.pow(0.164,0.5)) inexact rounded', 0.405, 0 + decimal.pow(0.164,0.5));
						AddTestCase('pwsx3296:p3 r:HALF_EVEN (0 + decimal.pow(0.0164,0.5)) inexact rounded', 0.128, 0 + decimal.pow(0.0164,0.5));
						AddTestCase('pwsx3297:p3 r:HALF_EVEN (0 + decimal.pow(0.165,0.5)) inexact rounded', 0.406, 0 + decimal.pow(0.165,0.5));
						AddTestCase('pwsx3298:p3 r:HALF_EVEN (0 + decimal.pow(0.0165,0.5)) inexact rounded', 0.128, 0 + decimal.pow(0.0165,0.5));
						AddTestCase('pwsx3299:p3 r:HALF_EVEN (0 + decimal.pow(0.166,0.5)) inexact rounded', 0.407, 0 + decimal.pow(0.166,0.5));
						AddTestCase('pwsx3300:p3 r:HALF_EVEN (0 + decimal.pow(0.0166,0.5)) inexact rounded', 0.129, 0 + decimal.pow(0.0166,0.5));
						AddTestCase('pwsx3301:p3 r:HALF_EVEN (0 + decimal.pow(0.167,0.5)) inexact rounded', 0.409, 0 + decimal.pow(0.167,0.5));
						AddTestCase('pwsx3302:p3 r:HALF_EVEN (0 + decimal.pow(0.0167,0.5)) inexact rounded', 0.129, 0 + decimal.pow(0.0167,0.5));
						AddTestCase('pwsx3303:p3 r:HALF_EVEN (0 + decimal.pow(0.168,0.5)) inexact rounded', 0.410, 0 + decimal.pow(0.168,0.5));
						AddTestCase('pwsx3304:p3 r:HALF_EVEN (0 + decimal.pow(0.0168,0.5)) inexact rounded', 0.130, 0 + decimal.pow(0.0168,0.5));
						AddTestCase('pwsx3305:p3 r:HALF_EVEN (0 + decimal.pow(0.169,0.5)) inexact rounded', 0.411, 0 + decimal.pow(0.169,0.5));
						AddTestCase('pwsx3306:p3 r:HALF_EVEN (0 + decimal.pow(0.0169,0.5)) inexact rounded', 0.130, 0 + decimal.pow(0.0169,0.5));
						AddTestCase('pwsx3307:p3 r:HALF_EVEN (0 + decimal.pow(0.171,0.5)) inexact rounded', 0.414, 0 + decimal.pow(0.171,0.5));
						AddTestCase('pwsx3308:p3 r:HALF_EVEN (0 + decimal.pow(0.0171,0.5)) inexact rounded', 0.131, 0 + decimal.pow(0.0171,0.5));
						AddTestCase('pwsx3309:p3 r:HALF_EVEN (0 + decimal.pow(0.172,0.5)) inexact rounded', 0.415, 0 + decimal.pow(0.172,0.5));
						AddTestCase('pwsx3310:p3 r:HALF_EVEN (0 + decimal.pow(0.0172,0.5)) inexact rounded', 0.131, 0 + decimal.pow(0.0172,0.5));
						AddTestCase('pwsx3311:p3 r:HALF_EVEN (0 + decimal.pow(0.173,0.5)) inexact rounded', 0.416, 0 + decimal.pow(0.173,0.5));
						AddTestCase('pwsx3312:p3 r:HALF_EVEN (0 + decimal.pow(0.0173,0.5)) inexact rounded', 0.132, 0 + decimal.pow(0.0173,0.5));
						AddTestCase('pwsx3313:p3 r:HALF_EVEN (0 + decimal.pow(0.174,0.5)) inexact rounded', 0.417, 0 + decimal.pow(0.174,0.5));
						AddTestCase('pwsx3314:p3 r:HALF_EVEN (0 + decimal.pow(0.0174,0.5)) inexact rounded', 0.132, 0 + decimal.pow(0.0174,0.5));
						AddTestCase('pwsx3315:p3 r:HALF_EVEN (0 + decimal.pow(0.175,0.5)) inexact rounded', 0.418, 0 + decimal.pow(0.175,0.5));
						AddTestCase('pwsx3316:p3 r:HALF_EVEN (0 + decimal.pow(0.0175,0.5)) inexact rounded', 0.132, 0 + decimal.pow(0.0175,0.5));
						AddTestCase('pwsx3317:p3 r:HALF_EVEN (0 + decimal.pow(0.176,0.5)) inexact rounded', 0.420, 0 + decimal.pow(0.176,0.5));
						AddTestCase('pwsx3318:p3 r:HALF_EVEN (0 + decimal.pow(0.0176,0.5)) inexact rounded', 0.133, 0 + decimal.pow(0.0176,0.5));
						AddTestCase('pwsx3319:p3 r:HALF_EVEN (0 + decimal.pow(0.177,0.5)) inexact rounded', 0.421, 0 + decimal.pow(0.177,0.5));
						AddTestCase('pwsx3320:p3 r:HALF_EVEN (0 + decimal.pow(0.0177,0.5)) inexact rounded', 0.133, 0 + decimal.pow(0.0177,0.5));
						AddTestCase('pwsx3321:p3 r:HALF_EVEN (0 + decimal.pow(0.178,0.5)) inexact rounded', 0.422, 0 + decimal.pow(0.178,0.5));
						AddTestCase('pwsx3322:p3 r:HALF_EVEN (0 + decimal.pow(0.0178,0.5)) inexact rounded', 0.133, 0 + decimal.pow(0.0178,0.5));
						AddTestCase('pwsx3323:p3 r:HALF_EVEN (0 + decimal.pow(0.179,0.5)) inexact rounded', 0.423, 0 + decimal.pow(0.179,0.5));
						AddTestCase('pwsx3324:p3 r:HALF_EVEN (0 + decimal.pow(0.0179,0.5)) inexact rounded', 0.134, 0 + decimal.pow(0.0179,0.5));
						AddTestCase('pwsx3325:p3 r:HALF_EVEN (0 + decimal.pow(0.181,0.5)) inexact rounded', 0.425, 0 + decimal.pow(0.181,0.5));
						AddTestCase('pwsx3326:p3 r:HALF_EVEN (0 + decimal.pow(0.0181,0.5)) inexact rounded', 0.135, 0 + decimal.pow(0.0181,0.5));
						AddTestCase('pwsx3327:p3 r:HALF_EVEN (0 + decimal.pow(0.182,0.5)) inexact rounded', 0.427, 0 + decimal.pow(0.182,0.5));
						AddTestCase('pwsx3328:p3 r:HALF_EVEN (0 + decimal.pow(0.0182,0.5)) inexact rounded', 0.135, 0 + decimal.pow(0.0182,0.5));
						AddTestCase('pwsx3329:p3 r:HALF_EVEN (0 + decimal.pow(0.183,0.5)) inexact rounded', 0.428, 0 + decimal.pow(0.183,0.5));
						AddTestCase('pwsx3330:p3 r:HALF_EVEN (0 + decimal.pow(0.0183,0.5)) inexact rounded', 0.135, 0 + decimal.pow(0.0183,0.5));
						AddTestCase('pwsx3331:p3 r:HALF_EVEN (0 + decimal.pow(0.184,0.5)) inexact rounded', 0.429, 0 + decimal.pow(0.184,0.5));
						AddTestCase('pwsx3332:p3 r:HALF_EVEN (0 + decimal.pow(0.0184,0.5)) inexact rounded', 0.136, 0 + decimal.pow(0.0184,0.5));
						AddTestCase('pwsx3333:p3 r:HALF_EVEN (0 + decimal.pow(0.185,0.5)) inexact rounded', 0.430, 0 + decimal.pow(0.185,0.5));
						AddTestCase('pwsx3334:p3 r:HALF_EVEN (0 + decimal.pow(0.0185,0.5)) inexact rounded', 0.136, 0 + decimal.pow(0.0185,0.5));
						AddTestCase('pwsx3335:p3 r:HALF_EVEN (0 + decimal.pow(0.186,0.5)) inexact rounded', 0.431, 0 + decimal.pow(0.186,0.5));
						AddTestCase('pwsx3336:p3 r:HALF_EVEN (0 + decimal.pow(0.0186,0.5)) inexact rounded', 0.136, 0 + decimal.pow(0.0186,0.5));
						AddTestCase('pwsx3337:p3 r:HALF_EVEN (0 + decimal.pow(0.187,0.5)) inexact rounded', 0.432, 0 + decimal.pow(0.187,0.5));
						AddTestCase('pwsx3338:p3 r:HALF_EVEN (0 + decimal.pow(0.0187,0.5)) inexact rounded', 0.137, 0 + decimal.pow(0.0187,0.5));
						AddTestCase('pwsx3339:p3 r:HALF_EVEN (0 + decimal.pow(0.188,0.5)) inexact rounded', 0.434, 0 + decimal.pow(0.188,0.5));
						AddTestCase('pwsx3340:p3 r:HALF_EVEN (0 + decimal.pow(0.0188,0.5)) inexact rounded', 0.137, 0 + decimal.pow(0.0188,0.5));
						AddTestCase('pwsx3341:p3 r:HALF_EVEN (0 + decimal.pow(0.189,0.5)) inexact rounded', 0.435, 0 + decimal.pow(0.189,0.5));
						AddTestCase('pwsx3342:p3 r:HALF_EVEN (0 + decimal.pow(0.0189,0.5)) inexact rounded', 0.137, 0 + decimal.pow(0.0189,0.5));
						AddTestCase('pwsx3343:p3 r:HALF_EVEN (0 + decimal.pow(0.191,0.5)) inexact rounded', 0.437, 0 + decimal.pow(0.191,0.5));
						AddTestCase('pwsx3344:p3 r:HALF_EVEN (0 + decimal.pow(0.0191,0.5)) inexact rounded', 0.138, 0 + decimal.pow(0.0191,0.5));
						AddTestCase('pwsx3345:p3 r:HALF_EVEN (0 + decimal.pow(0.192,0.5)) inexact rounded', 0.438, 0 + decimal.pow(0.192,0.5));
						AddTestCase('pwsx3346:p3 r:HALF_EVEN (0 + decimal.pow(0.0192,0.5)) inexact rounded', 0.139, 0 + decimal.pow(0.0192,0.5));
						AddTestCase('pwsx3347:p3 r:HALF_EVEN (0 + decimal.pow(0.193,0.5)) inexact rounded', 0.439, 0 + decimal.pow(0.193,0.5));
						AddTestCase('pwsx3348:p3 r:HALF_EVEN (0 + decimal.pow(0.0193,0.5)) inexact rounded', 0.139, 0 + decimal.pow(0.0193,0.5));
						AddTestCase('pwsx3349:p3 r:HALF_EVEN (0 + decimal.pow(0.194,0.5)) inexact rounded', 0.440, 0 + decimal.pow(0.194,0.5));
						AddTestCase('pwsx3350:p3 r:HALF_EVEN (0 + decimal.pow(0.0194,0.5)) inexact rounded', 0.139, 0 + decimal.pow(0.0194,0.5));
						AddTestCase('pwsx3351:p3 r:HALF_EVEN (0 + decimal.pow(0.195,0.5)) inexact rounded', 0.442, 0 + decimal.pow(0.195,0.5));
						AddTestCase('pwsx3352:p3 r:HALF_EVEN (0 + decimal.pow(0.0195,0.5)) inexact rounded', 0.140, 0 + decimal.pow(0.0195,0.5));
						AddTestCase('pwsx3353:p3 r:HALF_EVEN (0 + decimal.pow(0.196,0.5)) inexact rounded', 0.443, 0 + decimal.pow(0.196,0.5));
						AddTestCase('pwsx3354:p3 r:HALF_EVEN (0 + decimal.pow(0.0196,0.5)) inexact rounded', 0.140, 0 + decimal.pow(0.0196,0.5));
						AddTestCase('pwsx3355:p3 r:HALF_EVEN (0 + decimal.pow(0.197,0.5)) inexact rounded', 0.444, 0 + decimal.pow(0.197,0.5));
						AddTestCase('pwsx3356:p3 r:HALF_EVEN (0 + decimal.pow(0.0197,0.5)) inexact rounded', 0.140, 0 + decimal.pow(0.0197,0.5));
						AddTestCase('pwsx3357:p3 r:HALF_EVEN (0 + decimal.pow(0.198,0.5)) inexact rounded', 0.445, 0 + decimal.pow(0.198,0.5));
						AddTestCase('pwsx3358:p3 r:HALF_EVEN (0 + decimal.pow(0.0198,0.5)) inexact rounded', 0.141, 0 + decimal.pow(0.0198,0.5));
						AddTestCase('pwsx3359:p3 r:HALF_EVEN (0 + decimal.pow(0.199,0.5)) inexact rounded', 0.446, 0 + decimal.pow(0.199,0.5));
						AddTestCase('pwsx3360:p3 r:HALF_EVEN (0 + decimal.pow(0.0199,0.5)) inexact rounded', 0.141, 0 + decimal.pow(0.0199,0.5));
						AddTestCase('pwsx3361:p3 r:HALF_EVEN (0 + decimal.pow(0.201,0.5)) inexact rounded', 0.448, 0 + decimal.pow(0.201,0.5));
						AddTestCase('pwsx3362:p3 r:HALF_EVEN (0 + decimal.pow(0.0201,0.5)) inexact rounded', 0.142, 0 + decimal.pow(0.0201,0.5));
						AddTestCase('pwsx3363:p3 r:HALF_EVEN (0 + decimal.pow(0.202,0.5)) inexact rounded', 0.449, 0 + decimal.pow(0.202,0.5));
						AddTestCase('pwsx3364:p3 r:HALF_EVEN (0 + decimal.pow(0.0202,0.5)) inexact rounded', 0.142, 0 + decimal.pow(0.0202,0.5));
						AddTestCase('pwsx3365:p3 r:HALF_EVEN (0 + decimal.pow(0.203,0.5)) inexact rounded', 0.451, 0 + decimal.pow(0.203,0.5));
						AddTestCase('pwsx3366:p3 r:HALF_EVEN (0 + decimal.pow(0.0203,0.5)) inexact rounded', 0.142, 0 + decimal.pow(0.0203,0.5));
						AddTestCase('pwsx3367:p3 r:HALF_EVEN (0 + decimal.pow(0.204,0.5)) inexact rounded', 0.452, 0 + decimal.pow(0.204,0.5));
						AddTestCase('pwsx3368:p3 r:HALF_EVEN (0 + decimal.pow(0.0204,0.5)) inexact rounded', 0.143, 0 + decimal.pow(0.0204,0.5));
						AddTestCase('pwsx3369:p3 r:HALF_EVEN (0 + decimal.pow(0.205,0.5)) inexact rounded', 0.453, 0 + decimal.pow(0.205,0.5));
						AddTestCase('pwsx3370:p3 r:HALF_EVEN (0 + decimal.pow(0.0205,0.5)) inexact rounded', 0.143, 0 + decimal.pow(0.0205,0.5));
						AddTestCase('pwsx3371:p3 r:HALF_EVEN (0 + decimal.pow(0.206,0.5)) inexact rounded', 0.454, 0 + decimal.pow(0.206,0.5));
						AddTestCase('pwsx3372:p3 r:HALF_EVEN (0 + decimal.pow(0.0206,0.5)) inexact rounded', 0.144, 0 + decimal.pow(0.0206,0.5));
						AddTestCase('pwsx3373:p3 r:HALF_EVEN (0 + decimal.pow(0.207,0.5)) inexact rounded', 0.455, 0 + decimal.pow(0.207,0.5));
						AddTestCase('pwsx3374:p3 r:HALF_EVEN (0 + decimal.pow(0.0207,0.5)) inexact rounded', 0.144, 0 + decimal.pow(0.0207,0.5));
						AddTestCase('pwsx3375:p3 r:HALF_EVEN (0 + decimal.pow(0.208,0.5)) inexact rounded', 0.456, 0 + decimal.pow(0.208,0.5));
						AddTestCase('pwsx3376:p3 r:HALF_EVEN (0 + decimal.pow(0.0208,0.5)) inexact rounded', 0.144, 0 + decimal.pow(0.0208,0.5));
						AddTestCase('pwsx3377:p3 r:HALF_EVEN (0 + decimal.pow(0.209,0.5)) inexact rounded', 0.457, 0 + decimal.pow(0.209,0.5));
						AddTestCase('pwsx3378:p3 r:HALF_EVEN (0 + decimal.pow(0.0209,0.5)) inexact rounded', 0.145, 0 + decimal.pow(0.0209,0.5));
						AddTestCase('pwsx3379:p3 r:HALF_EVEN (0 + decimal.pow(0.211,0.5)) inexact rounded', 0.459, 0 + decimal.pow(0.211,0.5));
						AddTestCase('pwsx3380:p3 r:HALF_EVEN (0 + decimal.pow(0.0211,0.5)) inexact rounded', 0.145, 0 + decimal.pow(0.0211,0.5));
						AddTestCase('pwsx3381:p3 r:HALF_EVEN (0 + decimal.pow(0.212,0.5)) inexact rounded', 0.460, 0 + decimal.pow(0.212,0.5));
						AddTestCase('pwsx3382:p3 r:HALF_EVEN (0 + decimal.pow(0.0212,0.5)) inexact rounded', 0.146, 0 + decimal.pow(0.0212,0.5));
						AddTestCase('pwsx3383:p3 r:HALF_EVEN (0 + decimal.pow(0.213,0.5)) inexact rounded', 0.462, 0 + decimal.pow(0.213,0.5));
						AddTestCase('pwsx3384:p3 r:HALF_EVEN (0 + decimal.pow(0.0213,0.5)) inexact rounded', 0.146, 0 + decimal.pow(0.0213,0.5));
						AddTestCase('pwsx3385:p3 r:HALF_EVEN (0 + decimal.pow(0.214,0.5)) inexact rounded', 0.463, 0 + decimal.pow(0.214,0.5));
						AddTestCase('pwsx3386:p3 r:HALF_EVEN (0 + decimal.pow(0.0214,0.5)) inexact rounded', 0.146, 0 + decimal.pow(0.0214,0.5));
						AddTestCase('pwsx3387:p3 r:HALF_EVEN (0 + decimal.pow(0.215,0.5)) inexact rounded', 0.464, 0 + decimal.pow(0.215,0.5));
						AddTestCase('pwsx3388:p3 r:HALF_EVEN (0 + decimal.pow(0.0215,0.5)) inexact rounded', 0.147, 0 + decimal.pow(0.0215,0.5));
						AddTestCase('pwsx3389:p3 r:HALF_EVEN (0 + decimal.pow(0.216,0.5)) inexact rounded', 0.465, 0 + decimal.pow(0.216,0.5));
						AddTestCase('pwsx3390:p3 r:HALF_EVEN (0 + decimal.pow(0.0216,0.5)) inexact rounded', 0.147, 0 + decimal.pow(0.0216,0.5));
						AddTestCase('pwsx3391:p3 r:HALF_EVEN (0 + decimal.pow(0.217,0.5)) inexact rounded', 0.466, 0 + decimal.pow(0.217,0.5));
						AddTestCase('pwsx3392:p3 r:HALF_EVEN (0 + decimal.pow(0.0217,0.5)) inexact rounded', 0.147, 0 + decimal.pow(0.0217,0.5));
						AddTestCase('pwsx3393:p3 r:HALF_EVEN (0 + decimal.pow(0.218,0.5)) inexact rounded', 0.467, 0 + decimal.pow(0.218,0.5));
						AddTestCase('pwsx3394:p3 r:HALF_EVEN (0 + decimal.pow(0.0218,0.5)) inexact rounded', 0.148, 0 + decimal.pow(0.0218,0.5));
						AddTestCase('pwsx3395:p3 r:HALF_EVEN (0 + decimal.pow(0.219,0.5)) inexact rounded', 0.468, 0 + decimal.pow(0.219,0.5));
						AddTestCase('pwsx3396:p3 r:HALF_EVEN (0 + decimal.pow(0.0219,0.5)) inexact rounded', 0.148, 0 + decimal.pow(0.0219,0.5));
						AddTestCase('pwsx3397:p3 r:HALF_EVEN (0 + decimal.pow(0.221,0.5)) inexact rounded', 0.470, 0 + decimal.pow(0.221,0.5));
						AddTestCase('pwsx3398:p3 r:HALF_EVEN (0 + decimal.pow(0.0221,0.5)) inexact rounded', 0.149, 0 + decimal.pow(0.0221,0.5));
						AddTestCase('pwsx3399:p3 r:HALF_EVEN (0 + decimal.pow(0.222,0.5)) inexact rounded', 0.471, 0 + decimal.pow(0.222,0.5));
						AddTestCase('pwsx3400:p3 r:HALF_EVEN (0 + decimal.pow(0.0222,0.5)) inexact rounded', 0.149, 0 + decimal.pow(0.0222,0.5));
						AddTestCase('pwsx3401:p3 r:HALF_EVEN (0 + decimal.pow(0.223,0.5)) inexact rounded', 0.472, 0 + decimal.pow(0.223,0.5));
						AddTestCase('pwsx3402:p3 r:HALF_EVEN (0 + decimal.pow(0.0223,0.5)) inexact rounded', 0.149, 0 + decimal.pow(0.0223,0.5));
						AddTestCase('pwsx3403:p3 r:HALF_EVEN (0 + decimal.pow(0.224,0.5)) inexact rounded', 0.473, 0 + decimal.pow(0.224,0.5));
						AddTestCase('pwsx3404:p3 r:HALF_EVEN (0 + decimal.pow(0.0224,0.5)) inexact rounded', 0.150, 0 + decimal.pow(0.0224,0.5));
						AddTestCase('pwsx3405:p3 r:HALF_EVEN (0 + decimal.pow(0.225,0.5)) inexact rounded', 0.474, 0 + decimal.pow(0.225,0.5));
						AddTestCase('pwsx3406:p3 r:HALF_EVEN (0 + decimal.pow(0.0225,0.5)) inexact rounded', 0.150, 0 + decimal.pow(0.0225,0.5));
						AddTestCase('pwsx3407:p3 r:HALF_EVEN (0 + decimal.pow(0.226,0.5)) inexact rounded', 0.475, 0 + decimal.pow(0.226,0.5));
						AddTestCase('pwsx3408:p3 r:HALF_EVEN (0 + decimal.pow(0.0226,0.5)) inexact rounded', 0.150, 0 + decimal.pow(0.0226,0.5));
						AddTestCase('pwsx3409:p3 r:HALF_EVEN (0 + decimal.pow(0.227,0.5)) inexact rounded', 0.476, 0 + decimal.pow(0.227,0.5));
						AddTestCase('pwsx3410:p3 r:HALF_EVEN (0 + decimal.pow(0.0227,0.5)) inexact rounded', 0.151, 0 + decimal.pow(0.0227,0.5));
						AddTestCase('pwsx3411:p3 r:HALF_EVEN (0 + decimal.pow(0.228,0.5)) inexact rounded', 0.477, 0 + decimal.pow(0.228,0.5));
						AddTestCase('pwsx3412:p3 r:HALF_EVEN (0 + decimal.pow(0.0228,0.5)) inexact rounded', 0.151, 0 + decimal.pow(0.0228,0.5));
						AddTestCase('pwsx3413:p3 r:HALF_EVEN (0 + decimal.pow(0.229,0.5)) inexact rounded', 0.479, 0 + decimal.pow(0.229,0.5));
						AddTestCase('pwsx3414:p3 r:HALF_EVEN (0 + decimal.pow(0.0229,0.5)) inexact rounded', 0.151, 0 + decimal.pow(0.0229,0.5));
						AddTestCase('pwsx3415:p3 r:HALF_EVEN (0 + decimal.pow(0.231,0.5)) inexact rounded', 0.481, 0 + decimal.pow(0.231,0.5));
						AddTestCase('pwsx3416:p3 r:HALF_EVEN (0 + decimal.pow(0.0231,0.5)) inexact rounded', 0.152, 0 + decimal.pow(0.0231,0.5));
						AddTestCase('pwsx3417:p3 r:HALF_EVEN (0 + decimal.pow(0.232,0.5)) inexact rounded', 0.482, 0 + decimal.pow(0.232,0.5));
						AddTestCase('pwsx3418:p3 r:HALF_EVEN (0 + decimal.pow(0.0232,0.5)) inexact rounded', 0.152, 0 + decimal.pow(0.0232,0.5));
						AddTestCase('pwsx3419:p3 r:HALF_EVEN (0 + decimal.pow(0.233,0.5)) inexact rounded', 0.483, 0 + decimal.pow(0.233,0.5));
						AddTestCase('pwsx3420:p3 r:HALF_EVEN (0 + decimal.pow(0.0233,0.5)) inexact rounded', 0.153, 0 + decimal.pow(0.0233,0.5));
						AddTestCase('pwsx3421:p3 r:HALF_EVEN (0 + decimal.pow(0.234,0.5)) inexact rounded', 0.484, 0 + decimal.pow(0.234,0.5));
						AddTestCase('pwsx3422:p3 r:HALF_EVEN (0 + decimal.pow(0.0234,0.5)) inexact rounded', 0.153, 0 + decimal.pow(0.0234,0.5));
						AddTestCase('pwsx3423:p3 r:HALF_EVEN (0 + decimal.pow(0.235,0.5)) inexact rounded', 0.485, 0 + decimal.pow(0.235,0.5));
						AddTestCase('pwsx3424:p3 r:HALF_EVEN (0 + decimal.pow(0.0235,0.5)) inexact rounded', 0.153, 0 + decimal.pow(0.0235,0.5));
						AddTestCase('pwsx3425:p3 r:HALF_EVEN (0 + decimal.pow(0.236,0.5)) inexact rounded', 0.486, 0 + decimal.pow(0.236,0.5));
						AddTestCase('pwsx3426:p3 r:HALF_EVEN (0 + decimal.pow(0.0236,0.5)) inexact rounded', 0.154, 0 + decimal.pow(0.0236,0.5));
						AddTestCase('pwsx3427:p3 r:HALF_EVEN (0 + decimal.pow(0.237,0.5)) inexact rounded', 0.487, 0 + decimal.pow(0.237,0.5));
						AddTestCase('pwsx3428:p3 r:HALF_EVEN (0 + decimal.pow(0.0237,0.5)) inexact rounded', 0.154, 0 + decimal.pow(0.0237,0.5));
						AddTestCase('pwsx3429:p3 r:HALF_EVEN (0 + decimal.pow(0.238,0.5)) inexact rounded', 0.488, 0 + decimal.pow(0.238,0.5));
						AddTestCase('pwsx3430:p3 r:HALF_EVEN (0 + decimal.pow(0.0238,0.5)) inexact rounded', 0.154, 0 + decimal.pow(0.0238,0.5));
						AddTestCase('pwsx3431:p3 r:HALF_EVEN (0 + decimal.pow(0.239,0.5)) inexact rounded', 0.489, 0 + decimal.pow(0.239,0.5));
						AddTestCase('pwsx3432:p3 r:HALF_EVEN (0 + decimal.pow(0.0239,0.5)) inexact rounded', 0.155, 0 + decimal.pow(0.0239,0.5));
						AddTestCase('pwsx3433:p3 r:HALF_EVEN (0 + decimal.pow(0.241,0.5)) inexact rounded', 0.491, 0 + decimal.pow(0.241,0.5));
						AddTestCase('pwsx3434:p3 r:HALF_EVEN (0 + decimal.pow(0.0241,0.5)) inexact rounded', 0.155, 0 + decimal.pow(0.0241,0.5));
						AddTestCase('pwsx3435:p3 r:HALF_EVEN (0 + decimal.pow(0.242,0.5)) inexact rounded', 0.492, 0 + decimal.pow(0.242,0.5));
						AddTestCase('pwsx3436:p3 r:HALF_EVEN (0 + decimal.pow(0.0242,0.5)) inexact rounded', 0.156, 0 + decimal.pow(0.0242,0.5));
						AddTestCase('pwsx3437:p3 r:HALF_EVEN (0 + decimal.pow(0.243,0.5)) inexact rounded', 0.493, 0 + decimal.pow(0.243,0.5));
						AddTestCase('pwsx3438:p3 r:HALF_EVEN (0 + decimal.pow(0.0243,0.5)) inexact rounded', 0.156, 0 + decimal.pow(0.0243,0.5));
						AddTestCase('pwsx3439:p3 r:HALF_EVEN (0 + decimal.pow(0.244,0.5)) inexact rounded', 0.494, 0 + decimal.pow(0.244,0.5));
						AddTestCase('pwsx3440:p3 r:HALF_EVEN (0 + decimal.pow(0.0244,0.5)) inexact rounded', 0.156, 0 + decimal.pow(0.0244,0.5));
						AddTestCase('pwsx3441:p3 r:HALF_EVEN (0 + decimal.pow(0.245,0.5)) inexact rounded', 0.495, 0 + decimal.pow(0.245,0.5));
						AddTestCase('pwsx3442:p3 r:HALF_EVEN (0 + decimal.pow(0.0245,0.5)) inexact rounded', 0.157, 0 + decimal.pow(0.0245,0.5));
						AddTestCase('pwsx3443:p3 r:HALF_EVEN (0 + decimal.pow(0.246,0.5)) inexact rounded', 0.496, 0 + decimal.pow(0.246,0.5));
						AddTestCase('pwsx3444:p3 r:HALF_EVEN (0 + decimal.pow(0.0246,0.5)) inexact rounded', 0.157, 0 + decimal.pow(0.0246,0.5));
						AddTestCase('pwsx3445:p3 r:HALF_EVEN (0 + decimal.pow(0.247,0.5)) inexact rounded', 0.497, 0 + decimal.pow(0.247,0.5));
						AddTestCase('pwsx3446:p3 r:HALF_EVEN (0 + decimal.pow(0.0247,0.5)) inexact rounded', 0.157, 0 + decimal.pow(0.0247,0.5));
						AddTestCase('pwsx3447:p3 r:HALF_EVEN (0 + decimal.pow(0.248,0.5)) inexact rounded', 0.498, 0 + decimal.pow(0.248,0.5));
						AddTestCase('pwsx3448:p3 r:HALF_EVEN (0 + decimal.pow(0.0248,0.5)) inexact rounded', 0.157, 0 + decimal.pow(0.0248,0.5));
						AddTestCase('pwsx3449:p3 r:HALF_EVEN (0 + decimal.pow(0.249,0.5)) inexact rounded', 0.499, 0 + decimal.pow(0.249,0.5));
						AddTestCase('pwsx3450:p3 r:HALF_EVEN (0 + decimal.pow(0.0249,0.5)) inexact rounded', 0.158, 0 + decimal.pow(0.0249,0.5));
						AddTestCase('pwsx3451:p3 r:HALF_EVEN (0 + decimal.pow(0.251,0.5)) inexact rounded', 0.501, 0 + decimal.pow(0.251,0.5));
						AddTestCase('pwsx3452:p3 r:HALF_EVEN (0 + decimal.pow(0.0251,0.5)) inexact rounded', 0.158, 0 + decimal.pow(0.0251,0.5));
						AddTestCase('pwsx3453:p3 r:HALF_EVEN (0 + decimal.pow(0.252,0.5)) inexact rounded', 0.502, 0 + decimal.pow(0.252,0.5));
						AddTestCase('pwsx3454:p3 r:HALF_EVEN (0 + decimal.pow(0.0252,0.5)) inexact rounded', 0.159, 0 + decimal.pow(0.0252,0.5));
						AddTestCase('pwsx3455:p3 r:HALF_EVEN (0 + decimal.pow(0.253,0.5)) inexact rounded', 0.503, 0 + decimal.pow(0.253,0.5));
						AddTestCase('pwsx3456:p3 r:HALF_EVEN (0 + decimal.pow(0.0253,0.5)) inexact rounded', 0.159, 0 + decimal.pow(0.0253,0.5));
						AddTestCase('pwsx3457:p3 r:HALF_EVEN (0 + decimal.pow(0.254,0.5)) inexact rounded', 0.504, 0 + decimal.pow(0.254,0.5));
						AddTestCase('pwsx3458:p3 r:HALF_EVEN (0 + decimal.pow(0.0254,0.5)) inexact rounded', 0.159, 0 + decimal.pow(0.0254,0.5));
						AddTestCase('pwsx3459:p3 r:HALF_EVEN (0 + decimal.pow(0.255,0.5)) inexact rounded', 0.505, 0 + decimal.pow(0.255,0.5));
						AddTestCase('pwsx3460:p3 r:HALF_EVEN (0 + decimal.pow(0.0255,0.5)) inexact rounded', 0.160, 0 + decimal.pow(0.0255,0.5));
						AddTestCase('pwsx3461:p3 r:HALF_EVEN (0 + decimal.pow(0.256,0.5)) inexact rounded', 0.506, 0 + decimal.pow(0.256,0.5));
						AddTestCase('pwsx3462:p3 r:HALF_EVEN (0 + decimal.pow(0.0256,0.5)) inexact rounded', 0.160, 0 + decimal.pow(0.0256,0.5));
						AddTestCase('pwsx3463:p3 r:HALF_EVEN (0 + decimal.pow(0.257,0.5)) inexact rounded', 0.507, 0 + decimal.pow(0.257,0.5));
						AddTestCase('pwsx3464:p3 r:HALF_EVEN (0 + decimal.pow(0.0257,0.5)) inexact rounded', 0.160, 0 + decimal.pow(0.0257,0.5));
						AddTestCase('pwsx3465:p3 r:HALF_EVEN (0 + decimal.pow(0.258,0.5)) inexact rounded', 0.508, 0 + decimal.pow(0.258,0.5));
						AddTestCase('pwsx3466:p3 r:HALF_EVEN (0 + decimal.pow(0.0258,0.5)) inexact rounded', 0.161, 0 + decimal.pow(0.0258,0.5));
						AddTestCase('pwsx3467:p3 r:HALF_EVEN (0 + decimal.pow(0.259,0.5)) inexact rounded', 0.509, 0 + decimal.pow(0.259,0.5));
						AddTestCase('pwsx3468:p3 r:HALF_EVEN (0 + decimal.pow(0.0259,0.5)) inexact rounded', 0.161, 0 + decimal.pow(0.0259,0.5));
						AddTestCase('pwsx3469:p3 r:HALF_EVEN (0 + decimal.pow(0.261,0.5)) inexact rounded', 0.511, 0 + decimal.pow(0.261,0.5));
						AddTestCase('pwsx3470:p3 r:HALF_EVEN (0 + decimal.pow(0.0261,0.5)) inexact rounded', 0.162, 0 + decimal.pow(0.0261,0.5));
						AddTestCase('pwsx3471:p3 r:HALF_EVEN (0 + decimal.pow(0.262,0.5)) inexact rounded', 0.512, 0 + decimal.pow(0.262,0.5));
						AddTestCase('pwsx3472:p3 r:HALF_EVEN (0 + decimal.pow(0.0262,0.5)) inexact rounded', 0.162, 0 + decimal.pow(0.0262,0.5));
						AddTestCase('pwsx3473:p3 r:HALF_EVEN (0 + decimal.pow(0.263,0.5)) inexact rounded', 0.513, 0 + decimal.pow(0.263,0.5));
						AddTestCase('pwsx3474:p3 r:HALF_EVEN (0 + decimal.pow(0.0263,0.5)) inexact rounded', 0.162, 0 + decimal.pow(0.0263,0.5));
						AddTestCase('pwsx3475:p3 r:HALF_EVEN (0 + decimal.pow(0.264,0.5)) inexact rounded', 0.514, 0 + decimal.pow(0.264,0.5));
						AddTestCase('pwsx3476:p3 r:HALF_EVEN (0 + decimal.pow(0.0264,0.5)) inexact rounded', 0.162, 0 + decimal.pow(0.0264,0.5));
						AddTestCase('pwsx3477:p3 r:HALF_EVEN (0 + decimal.pow(0.265,0.5)) inexact rounded', 0.515, 0 + decimal.pow(0.265,0.5));
						AddTestCase('pwsx3478:p3 r:HALF_EVEN (0 + decimal.pow(0.0265,0.5)) inexact rounded', 0.163, 0 + decimal.pow(0.0265,0.5));
						AddTestCase('pwsx3479:p3 r:HALF_EVEN (0 + decimal.pow(0.266,0.5)) inexact rounded', 0.516, 0 + decimal.pow(0.266,0.5));
						AddTestCase('pwsx3480:p3 r:HALF_EVEN (0 + decimal.pow(0.0266,0.5)) inexact rounded', 0.163, 0 + decimal.pow(0.0266,0.5));
						AddTestCase('pwsx3481:p3 r:HALF_EVEN (0 + decimal.pow(0.267,0.5)) inexact rounded', 0.517, 0 + decimal.pow(0.267,0.5));
						AddTestCase('pwsx3482:p3 r:HALF_EVEN (0 + decimal.pow(0.0267,0.5)) inexact rounded', 0.163, 0 + decimal.pow(0.0267,0.5));
						AddTestCase('pwsx3483:p3 r:HALF_EVEN (0 + decimal.pow(0.268,0.5)) inexact rounded', 0.518, 0 + decimal.pow(0.268,0.5));
						AddTestCase('pwsx3484:p3 r:HALF_EVEN (0 + decimal.pow(0.0268,0.5)) inexact rounded', 0.164, 0 + decimal.pow(0.0268,0.5));
						AddTestCase('pwsx3485:p3 r:HALF_EVEN (0 + decimal.pow(0.269,0.5)) inexact rounded', 0.519, 0 + decimal.pow(0.269,0.5));
						AddTestCase('pwsx3486:p3 r:HALF_EVEN (0 + decimal.pow(0.0269,0.5)) inexact rounded', 0.164, 0 + decimal.pow(0.0269,0.5));
						AddTestCase('pwsx3487:p3 r:HALF_EVEN (0 + decimal.pow(0.271,0.5)) inexact rounded', 0.521, 0 + decimal.pow(0.271,0.5));
						AddTestCase('pwsx3488:p3 r:HALF_EVEN (0 + decimal.pow(0.0271,0.5)) inexact rounded', 0.165, 0 + decimal.pow(0.0271,0.5));
						AddTestCase('pwsx3489:p3 r:HALF_EVEN (0 + decimal.pow(0.272,0.5)) inexact rounded', 0.522, 0 + decimal.pow(0.272,0.5));
						AddTestCase('pwsx3490:p3 r:HALF_EVEN (0 + decimal.pow(0.0272,0.5)) inexact rounded', 0.165, 0 + decimal.pow(0.0272,0.5));
						AddTestCase('pwsx3491:p3 r:HALF_EVEN (0 + decimal.pow(0.273,0.5)) inexact rounded', 0.522, 0 + decimal.pow(0.273,0.5));
						AddTestCase('pwsx3492:p3 r:HALF_EVEN (0 + decimal.pow(0.0273,0.5)) inexact rounded', 0.165, 0 + decimal.pow(0.0273,0.5));
						AddTestCase('pwsx3493:p3 r:HALF_EVEN (0 + decimal.pow(0.274,0.5)) inexact rounded', 0.523, 0 + decimal.pow(0.274,0.5));
						AddTestCase('pwsx3494:p3 r:HALF_EVEN (0 + decimal.pow(0.0274,0.5)) inexact rounded', 0.166, 0 + decimal.pow(0.0274,0.5));
						AddTestCase('pwsx3495:p3 r:HALF_EVEN (0 + decimal.pow(0.275,0.5)) inexact rounded', 0.524, 0 + decimal.pow(0.275,0.5));
						AddTestCase('pwsx3496:p3 r:HALF_EVEN (0 + decimal.pow(0.0275,0.5)) inexact rounded', 0.166, 0 + decimal.pow(0.0275,0.5));
						AddTestCase('pwsx3497:p3 r:HALF_EVEN (0 + decimal.pow(0.276,0.5)) inexact rounded', 0.525, 0 + decimal.pow(0.276,0.5));
						AddTestCase('pwsx3498:p3 r:HALF_EVEN (0 + decimal.pow(0.0276,0.5)) inexact rounded', 0.166, 0 + decimal.pow(0.0276,0.5));
						AddTestCase('pwsx3499:p3 r:HALF_EVEN (0 + decimal.pow(0.277,0.5)) inexact rounded', 0.526, 0 + decimal.pow(0.277,0.5));
						AddTestCase('pwsx3500:p3 r:HALF_EVEN (0 + decimal.pow(0.0277,0.5)) inexact rounded', 0.166, 0 + decimal.pow(0.0277,0.5));
						AddTestCase('pwsx3501:p3 r:HALF_EVEN (0 + decimal.pow(0.278,0.5)) inexact rounded', 0.527, 0 + decimal.pow(0.278,0.5));
						AddTestCase('pwsx3502:p3 r:HALF_EVEN (0 + decimal.pow(0.0278,0.5)) inexact rounded', 0.167, 0 + decimal.pow(0.0278,0.5));
						AddTestCase('pwsx3503:p3 r:HALF_EVEN (0 + decimal.pow(0.279,0.5)) inexact rounded', 0.528, 0 + decimal.pow(0.279,0.5));
						AddTestCase('pwsx3504:p3 r:HALF_EVEN (0 + decimal.pow(0.0279,0.5)) inexact rounded', 0.167, 0 + decimal.pow(0.0279,0.5));
						AddTestCase('pwsx3505:p3 r:HALF_EVEN (0 + decimal.pow(0.281,0.5)) inexact rounded', 0.530, 0 + decimal.pow(0.281,0.5));
						AddTestCase('pwsx3506:p3 r:HALF_EVEN (0 + decimal.pow(0.0281,0.5)) inexact rounded', 0.168, 0 + decimal.pow(0.0281,0.5));
						AddTestCase('pwsx3507:p3 r:HALF_EVEN (0 + decimal.pow(0.282,0.5)) inexact rounded', 0.531, 0 + decimal.pow(0.282,0.5));
						AddTestCase('pwsx3508:p3 r:HALF_EVEN (0 + decimal.pow(0.0282,0.5)) inexact rounded', 0.168, 0 + decimal.pow(0.0282,0.5));
						AddTestCase('pwsx3509:p3 r:HALF_EVEN (0 + decimal.pow(0.283,0.5)) inexact rounded', 0.532, 0 + decimal.pow(0.283,0.5));
						AddTestCase('pwsx3510:p3 r:HALF_EVEN (0 + decimal.pow(0.0283,0.5)) inexact rounded', 0.168, 0 + decimal.pow(0.0283,0.5));
						AddTestCase('pwsx3511:p3 r:HALF_EVEN (0 + decimal.pow(0.284,0.5)) inexact rounded', 0.533, 0 + decimal.pow(0.284,0.5));
						AddTestCase('pwsx3512:p3 r:HALF_EVEN (0 + decimal.pow(0.0284,0.5)) inexact rounded', 0.169, 0 + decimal.pow(0.0284,0.5));
						AddTestCase('pwsx3513:p3 r:HALF_EVEN (0 + decimal.pow(0.285,0.5)) inexact rounded', 0.534, 0 + decimal.pow(0.285,0.5));
						AddTestCase('pwsx3514:p3 r:HALF_EVEN (0 + decimal.pow(0.0285,0.5)) inexact rounded', 0.169, 0 + decimal.pow(0.0285,0.5));
						AddTestCase('pwsx3515:p3 r:HALF_EVEN (0 + decimal.pow(0.286,0.5)) inexact rounded', 0.535, 0 + decimal.pow(0.286,0.5));
						AddTestCase('pwsx3516:p3 r:HALF_EVEN (0 + decimal.pow(0.0286,0.5)) inexact rounded', 0.169, 0 + decimal.pow(0.0286,0.5));
						AddTestCase('pwsx3517:p3 r:HALF_EVEN (0 + decimal.pow(0.287,0.5)) inexact rounded', 0.536, 0 + decimal.pow(0.287,0.5));
						AddTestCase('pwsx3518:p3 r:HALF_EVEN (0 + decimal.pow(0.0287,0.5)) inexact rounded', 0.169, 0 + decimal.pow(0.0287,0.5));
						AddTestCase('pwsx3519:p3 r:HALF_EVEN (0 + decimal.pow(0.288,0.5)) inexact rounded', 0.537, 0 + decimal.pow(0.288,0.5));
						AddTestCase('pwsx3520:p3 r:HALF_EVEN (0 + decimal.pow(0.0288,0.5)) inexact rounded', 0.170, 0 + decimal.pow(0.0288,0.5));
						AddTestCase('pwsx3521:p3 r:HALF_EVEN (0 + decimal.pow(0.289,0.5)) inexact rounded', 0.538, 0 + decimal.pow(0.289,0.5));
						AddTestCase('pwsx3522:p3 r:HALF_EVEN (0 + decimal.pow(0.0289,0.5)) inexact rounded', 0.170, 0 + decimal.pow(0.0289,0.5));
						AddTestCase('pwsx3523:p3 r:HALF_EVEN (0 + decimal.pow(0.291,0.5)) inexact rounded', 0.539, 0 + decimal.pow(0.291,0.5));
						AddTestCase('pwsx3524:p3 r:HALF_EVEN (0 + decimal.pow(0.0291,0.5)) inexact rounded', 0.171, 0 + decimal.pow(0.0291,0.5));
						AddTestCase('pwsx3525:p3 r:HALF_EVEN (0 + decimal.pow(0.292,0.5)) inexact rounded', 0.540, 0 + decimal.pow(0.292,0.5));
						AddTestCase('pwsx3526:p3 r:HALF_EVEN (0 + decimal.pow(0.0292,0.5)) inexact rounded', 0.171, 0 + decimal.pow(0.0292,0.5));
						AddTestCase('pwsx3527:p3 r:HALF_EVEN (0 + decimal.pow(0.293,0.5)) inexact rounded', 0.541, 0 + decimal.pow(0.293,0.5));
						AddTestCase('pwsx3528:p3 r:HALF_EVEN (0 + decimal.pow(0.0293,0.5)) inexact rounded', 0.171, 0 + decimal.pow(0.0293,0.5));
						AddTestCase('pwsx3529:p3 r:HALF_EVEN (0 + decimal.pow(0.294,0.5)) inexact rounded', 0.542, 0 + decimal.pow(0.294,0.5));
						AddTestCase('pwsx3530:p3 r:HALF_EVEN (0 + decimal.pow(0.0294,0.5)) inexact rounded', 0.171, 0 + decimal.pow(0.0294,0.5));
						AddTestCase('pwsx3531:p3 r:HALF_EVEN (0 + decimal.pow(0.295,0.5)) inexact rounded', 0.543, 0 + decimal.pow(0.295,0.5));
						AddTestCase('pwsx3532:p3 r:HALF_EVEN (0 + decimal.pow(0.0295,0.5)) inexact rounded', 0.172, 0 + decimal.pow(0.0295,0.5));
						AddTestCase('pwsx3533:p3 r:HALF_EVEN (0 + decimal.pow(0.296,0.5)) inexact rounded', 0.544, 0 + decimal.pow(0.296,0.5));
						AddTestCase('pwsx3534:p3 r:HALF_EVEN (0 + decimal.pow(0.0296,0.5)) inexact rounded', 0.172, 0 + decimal.pow(0.0296,0.5));
						AddTestCase('pwsx3535:p3 r:HALF_EVEN (0 + decimal.pow(0.297,0.5)) inexact rounded', 0.545, 0 + decimal.pow(0.297,0.5));
						AddTestCase('pwsx3536:p3 r:HALF_EVEN (0 + decimal.pow(0.0297,0.5)) inexact rounded', 0.172, 0 + decimal.pow(0.0297,0.5));
						AddTestCase('pwsx3537:p3 r:HALF_EVEN (0 + decimal.pow(0.298,0.5)) inexact rounded', 0.546, 0 + decimal.pow(0.298,0.5));
						AddTestCase('pwsx3538:p3 r:HALF_EVEN (0 + decimal.pow(0.0298,0.5)) inexact rounded', 0.173, 0 + decimal.pow(0.0298,0.5));
						AddTestCase('pwsx3539:p3 r:HALF_EVEN (0 + decimal.pow(0.299,0.5)) inexact rounded', 0.547, 0 + decimal.pow(0.299,0.5));
						AddTestCase('pwsx3540:p3 r:HALF_EVEN (0 + decimal.pow(0.0299,0.5)) inexact rounded', 0.173, 0 + decimal.pow(0.0299,0.5));
						AddTestCase('pwsx3541:p3 r:HALF_EVEN (0 + decimal.pow(0.301,0.5)) inexact rounded', 0.549, 0 + decimal.pow(0.301,0.5));
						AddTestCase('pwsx3542:p3 r:HALF_EVEN (0 + decimal.pow(0.0301,0.5)) inexact rounded', 0.173, 0 + decimal.pow(0.0301,0.5));
						AddTestCase('pwsx3543:p3 r:HALF_EVEN (0 + decimal.pow(0.302,0.5)) inexact rounded', 0.550, 0 + decimal.pow(0.302,0.5));
						AddTestCase('pwsx3544:p3 r:HALF_EVEN (0 + decimal.pow(0.0302,0.5)) inexact rounded', 0.174, 0 + decimal.pow(0.0302,0.5));
						AddTestCase('pwsx3545:p3 r:HALF_EVEN (0 + decimal.pow(0.303,0.5)) inexact rounded', 0.550, 0 + decimal.pow(0.303,0.5));
						AddTestCase('pwsx3546:p3 r:HALF_EVEN (0 + decimal.pow(0.0303,0.5)) inexact rounded', 0.174, 0 + decimal.pow(0.0303,0.5));
						AddTestCase('pwsx3547:p3 r:HALF_EVEN (0 + decimal.pow(0.304,0.5)) inexact rounded', 0.551, 0 + decimal.pow(0.304,0.5));
						AddTestCase('pwsx3548:p3 r:HALF_EVEN (0 + decimal.pow(0.0304,0.5)) inexact rounded', 0.174, 0 + decimal.pow(0.0304,0.5));
						AddTestCase('pwsx3549:p3 r:HALF_EVEN (0 + decimal.pow(0.305,0.5)) inexact rounded', 0.552, 0 + decimal.pow(0.305,0.5));
						AddTestCase('pwsx3550:p3 r:HALF_EVEN (0 + decimal.pow(0.0305,0.5)) inexact rounded', 0.175, 0 + decimal.pow(0.0305,0.5));
						AddTestCase('pwsx3551:p3 r:HALF_EVEN (0 + decimal.pow(0.306,0.5)) inexact rounded', 0.553, 0 + decimal.pow(0.306,0.5));
						AddTestCase('pwsx3552:p3 r:HALF_EVEN (0 + decimal.pow(0.0306,0.5)) inexact rounded', 0.175, 0 + decimal.pow(0.0306,0.5));
						AddTestCase('pwsx3553:p3 r:HALF_EVEN (0 + decimal.pow(0.307,0.5)) inexact rounded', 0.554, 0 + decimal.pow(0.307,0.5));
						AddTestCase('pwsx3554:p3 r:HALF_EVEN (0 + decimal.pow(0.0307,0.5)) inexact rounded', 0.175, 0 + decimal.pow(0.0307,0.5));
						AddTestCase('pwsx3555:p3 r:HALF_EVEN (0 + decimal.pow(0.308,0.5)) inexact rounded', 0.555, 0 + decimal.pow(0.308,0.5));
						AddTestCase('pwsx3556:p3 r:HALF_EVEN (0 + decimal.pow(0.0308,0.5)) inexact rounded', 0.175, 0 + decimal.pow(0.0308,0.5));
						AddTestCase('pwsx3557:p3 r:HALF_EVEN (0 + decimal.pow(0.309,0.5)) inexact rounded', 0.556, 0 + decimal.pow(0.309,0.5));
						AddTestCase('pwsx3558:p3 r:HALF_EVEN (0 + decimal.pow(0.0309,0.5)) inexact rounded', 0.176, 0 + decimal.pow(0.0309,0.5));
						AddTestCase('pwsx3559:p3 r:HALF_EVEN (0 + decimal.pow(0.311,0.5)) inexact rounded', 0.558, 0 + decimal.pow(0.311,0.5));
						AddTestCase('pwsx3560:p3 r:HALF_EVEN (0 + decimal.pow(0.0311,0.5)) inexact rounded', 0.176, 0 + decimal.pow(0.0311,0.5));
						AddTestCase('pwsx3561:p3 r:HALF_EVEN (0 + decimal.pow(0.312,0.5)) inexact rounded', 0.559, 0 + decimal.pow(0.312,0.5));
						AddTestCase('pwsx3562:p3 r:HALF_EVEN (0 + decimal.pow(0.0312,0.5)) inexact rounded', 0.177, 0 + decimal.pow(0.0312,0.5));
						AddTestCase('pwsx3563:p3 r:HALF_EVEN (0 + decimal.pow(0.313,0.5)) inexact rounded', 0.559, 0 + decimal.pow(0.313,0.5));
						AddTestCase('pwsx3564:p3 r:HALF_EVEN (0 + decimal.pow(0.0313,0.5)) inexact rounded', 0.177, 0 + decimal.pow(0.0313,0.5));
						AddTestCase('pwsx3565:p3 r:HALF_EVEN (0 + decimal.pow(0.314,0.5)) inexact rounded', 0.560, 0 + decimal.pow(0.314,0.5));
						AddTestCase('pwsx3566:p3 r:HALF_EVEN (0 + decimal.pow(0.0314,0.5)) inexact rounded', 0.177, 0 + decimal.pow(0.0314,0.5));
						AddTestCase('pwsx3567:p3 r:HALF_EVEN (0 + decimal.pow(0.315,0.5)) inexact rounded', 0.561, 0 + decimal.pow(0.315,0.5));
						AddTestCase('pwsx3568:p3 r:HALF_EVEN (0 + decimal.pow(0.0315,0.5)) inexact rounded', 0.177, 0 + decimal.pow(0.0315,0.5));
						AddTestCase('pwsx3569:p3 r:HALF_EVEN (0 + decimal.pow(0.316,0.5)) inexact rounded', 0.562, 0 + decimal.pow(0.316,0.5));
						AddTestCase('pwsx3570:p3 r:HALF_EVEN (0 + decimal.pow(0.0316,0.5)) inexact rounded', 0.178, 0 + decimal.pow(0.0316,0.5));
						AddTestCase('pwsx3571:p3 r:HALF_EVEN (0 + decimal.pow(0.317,0.5)) inexact rounded', 0.563, 0 + decimal.pow(0.317,0.5));
						AddTestCase('pwsx3572:p3 r:HALF_EVEN (0 + decimal.pow(0.0317,0.5)) inexact rounded', 0.178, 0 + decimal.pow(0.0317,0.5));
						AddTestCase('pwsx3573:p3 r:HALF_EVEN (0 + decimal.pow(0.318,0.5)) inexact rounded', 0.564, 0 + decimal.pow(0.318,0.5));
						AddTestCase('pwsx3574:p3 r:HALF_EVEN (0 + decimal.pow(0.0318,0.5)) inexact rounded', 0.178, 0 + decimal.pow(0.0318,0.5));
						AddTestCase('pwsx3575:p3 r:HALF_EVEN (0 + decimal.pow(0.319,0.5)) inexact rounded', 0.565, 0 + decimal.pow(0.319,0.5));
						AddTestCase('pwsx3576:p3 r:HALF_EVEN (0 + decimal.pow(0.0319,0.5)) inexact rounded', 0.179, 0 + decimal.pow(0.0319,0.5));
						AddTestCase('pwsx3577:p3 r:HALF_EVEN (0 + decimal.pow(0.321,0.5)) inexact rounded', 0.567, 0 + decimal.pow(0.321,0.5));
						AddTestCase('pwsx3578:p3 r:HALF_EVEN (0 + decimal.pow(0.0321,0.5)) inexact rounded', 0.179, 0 + decimal.pow(0.0321,0.5));
						AddTestCase('pwsx3579:p3 r:HALF_EVEN (0 + decimal.pow(0.322,0.5)) inexact rounded', 0.567, 0 + decimal.pow(0.322,0.5));
						AddTestCase('pwsx3580:p3 r:HALF_EVEN (0 + decimal.pow(0.0322,0.5)) inexact rounded', 0.179, 0 + decimal.pow(0.0322,0.5));
						AddTestCase('pwsx3581:p3 r:HALF_EVEN (0 + decimal.pow(0.323,0.5)) inexact rounded', 0.568, 0 + decimal.pow(0.323,0.5));
						AddTestCase('pwsx3582:p3 r:HALF_EVEN (0 + decimal.pow(0.0323,0.5)) inexact rounded', 0.180, 0 + decimal.pow(0.0323,0.5));
						AddTestCase('pwsx3583:p3 r:HALF_EVEN (0 + decimal.pow(0.324,0.5)) inexact rounded', 0.569, 0 + decimal.pow(0.324,0.5));
						AddTestCase('pwsx3584:p3 r:HALF_EVEN (0 + decimal.pow(0.0324,0.5)) inexact rounded', 0.180, 0 + decimal.pow(0.0324,0.5));
						AddTestCase('pwsx3585:p3 r:HALF_EVEN (0 + decimal.pow(0.325,0.5)) inexact rounded', 0.570, 0 + decimal.pow(0.325,0.5));
						AddTestCase('pwsx3586:p3 r:HALF_EVEN (0 + decimal.pow(0.0325,0.5)) inexact rounded', 0.180, 0 + decimal.pow(0.0325,0.5));
						AddTestCase('pwsx3587:p3 r:HALF_EVEN (0 + decimal.pow(0.326,0.5)) inexact rounded', 0.571, 0 + decimal.pow(0.326,0.5));
						AddTestCase('pwsx3588:p3 r:HALF_EVEN (0 + decimal.pow(0.0326,0.5)) inexact rounded', 0.181, 0 + decimal.pow(0.0326,0.5));
						AddTestCase('pwsx3589:p3 r:HALF_EVEN (0 + decimal.pow(0.327,0.5)) inexact rounded', 0.572, 0 + decimal.pow(0.327,0.5));
						AddTestCase('pwsx3590:p3 r:HALF_EVEN (0 + decimal.pow(0.0327,0.5)) inexact rounded', 0.181, 0 + decimal.pow(0.0327,0.5));
						AddTestCase('pwsx3591:p3 r:HALF_EVEN (0 + decimal.pow(0.328,0.5)) inexact rounded', 0.573, 0 + decimal.pow(0.328,0.5));
						AddTestCase('pwsx3592:p3 r:HALF_EVEN (0 + decimal.pow(0.0328,0.5)) inexact rounded', 0.181, 0 + decimal.pow(0.0328,0.5));
						AddTestCase('pwsx3593:p3 r:HALF_EVEN (0 + decimal.pow(0.329,0.5)) inexact rounded', 0.574, 0 + decimal.pow(0.329,0.5));
						AddTestCase('pwsx3594:p3 r:HALF_EVEN (0 + decimal.pow(0.0329,0.5)) inexact rounded', 0.181, 0 + decimal.pow(0.0329,0.5));
						AddTestCase('pwsx3595:p3 r:HALF_EVEN (0 + decimal.pow(0.331,0.5)) inexact rounded', 0.575, 0 + decimal.pow(0.331,0.5));
						AddTestCase('pwsx3596:p3 r:HALF_EVEN (0 + decimal.pow(0.0331,0.5)) inexact rounded', 0.182, 0 + decimal.pow(0.0331,0.5));
						AddTestCase('pwsx3597:p3 r:HALF_EVEN (0 + decimal.pow(0.332,0.5)) inexact rounded', 0.576, 0 + decimal.pow(0.332,0.5));
						AddTestCase('pwsx3598:p3 r:HALF_EVEN (0 + decimal.pow(0.0332,0.5)) inexact rounded', 0.182, 0 + decimal.pow(0.0332,0.5));
						AddTestCase('pwsx3599:p3 r:HALF_EVEN (0 + decimal.pow(0.333,0.5)) inexact rounded', 0.577, 0 + decimal.pow(0.333,0.5));
						AddTestCase('pwsx3600:p3 r:HALF_EVEN (0 + decimal.pow(0.0333,0.5)) inexact rounded', 0.182, 0 + decimal.pow(0.0333,0.5));
						AddTestCase('pwsx3601:p3 r:HALF_EVEN (0 + decimal.pow(0.334,0.5)) inexact rounded', 0.578, 0 + decimal.pow(0.334,0.5));
						AddTestCase('pwsx3602:p3 r:HALF_EVEN (0 + decimal.pow(0.0334,0.5)) inexact rounded', 0.183, 0 + decimal.pow(0.0334,0.5));
						AddTestCase('pwsx3603:p3 r:HALF_EVEN (0 + decimal.pow(0.335,0.5)) inexact rounded', 0.579, 0 + decimal.pow(0.335,0.5));
						AddTestCase('pwsx3604:p3 r:HALF_EVEN (0 + decimal.pow(0.0335,0.5)) inexact rounded', 0.183, 0 + decimal.pow(0.0335,0.5));
						AddTestCase('pwsx3605:p3 r:HALF_EVEN (0 + decimal.pow(0.336,0.5)) inexact rounded', 0.580, 0 + decimal.pow(0.336,0.5));
						AddTestCase('pwsx3606:p3 r:HALF_EVEN (0 + decimal.pow(0.0336,0.5)) inexact rounded', 0.183, 0 + decimal.pow(0.0336,0.5));
						AddTestCase('pwsx3607:p3 r:HALF_EVEN (0 + decimal.pow(0.337,0.5)) inexact rounded', 0.581, 0 + decimal.pow(0.337,0.5));
						AddTestCase('pwsx3608:p3 r:HALF_EVEN (0 + decimal.pow(0.0337,0.5)) inexact rounded', 0.184, 0 + decimal.pow(0.0337,0.5));
						AddTestCase('pwsx3609:p3 r:HALF_EVEN (0 + decimal.pow(0.338,0.5)) inexact rounded', 0.581, 0 + decimal.pow(0.338,0.5));
						AddTestCase('pwsx3610:p3 r:HALF_EVEN (0 + decimal.pow(0.0338,0.5)) inexact rounded', 0.184, 0 + decimal.pow(0.0338,0.5));
						AddTestCase('pwsx3611:p3 r:HALF_EVEN (0 + decimal.pow(0.339,0.5)) inexact rounded', 0.582, 0 + decimal.pow(0.339,0.5));
						AddTestCase('pwsx3612:p3 r:HALF_EVEN (0 + decimal.pow(0.0339,0.5)) inexact rounded', 0.184, 0 + decimal.pow(0.0339,0.5));
						AddTestCase('pwsx3613:p3 r:HALF_EVEN (0 + decimal.pow(0.341,0.5)) inexact rounded', 0.584, 0 + decimal.pow(0.341,0.5));
						AddTestCase('pwsx3614:p3 r:HALF_EVEN (0 + decimal.pow(0.0341,0.5)) inexact rounded', 0.185, 0 + decimal.pow(0.0341,0.5));
						AddTestCase('pwsx3615:p3 r:HALF_EVEN (0 + decimal.pow(0.342,0.5)) inexact rounded', 0.585, 0 + decimal.pow(0.342,0.5));
						AddTestCase('pwsx3616:p3 r:HALF_EVEN (0 + decimal.pow(0.0342,0.5)) inexact rounded', 0.185, 0 + decimal.pow(0.0342,0.5));
						AddTestCase('pwsx3617:p3 r:HALF_EVEN (0 + decimal.pow(0.343,0.5)) inexact rounded', 0.586, 0 + decimal.pow(0.343,0.5));
						AddTestCase('pwsx3618:p3 r:HALF_EVEN (0 + decimal.pow(0.0343,0.5)) inexact rounded', 0.185, 0 + decimal.pow(0.0343,0.5));
						AddTestCase('pwsx3619:p3 r:HALF_EVEN (0 + decimal.pow(0.344,0.5)) inexact rounded', 0.587, 0 + decimal.pow(0.344,0.5));
						AddTestCase('pwsx3620:p3 r:HALF_EVEN (0 + decimal.pow(0.0344,0.5)) inexact rounded', 0.185, 0 + decimal.pow(0.0344,0.5));
						AddTestCase('pwsx3621:p3 r:HALF_EVEN (0 + decimal.pow(0.345,0.5)) inexact rounded', 0.587, 0 + decimal.pow(0.345,0.5));
						AddTestCase('pwsx3622:p3 r:HALF_EVEN (0 + decimal.pow(0.0345,0.5)) inexact rounded', 0.186, 0 + decimal.pow(0.0345,0.5));
						AddTestCase('pwsx3623:p3 r:HALF_EVEN (0 + decimal.pow(0.346,0.5)) inexact rounded', 0.588, 0 + decimal.pow(0.346,0.5));
						AddTestCase('pwsx3624:p3 r:HALF_EVEN (0 + decimal.pow(0.0346,0.5)) inexact rounded', 0.186, 0 + decimal.pow(0.0346,0.5));
						AddTestCase('pwsx3625:p3 r:HALF_EVEN (0 + decimal.pow(0.347,0.5)) inexact rounded', 0.589, 0 + decimal.pow(0.347,0.5));
						AddTestCase('pwsx3626:p3 r:HALF_EVEN (0 + decimal.pow(0.0347,0.5)) inexact rounded', 0.186, 0 + decimal.pow(0.0347,0.5));
						AddTestCase('pwsx3627:p3 r:HALF_EVEN (0 + decimal.pow(0.348,0.5)) inexact rounded', 0.590, 0 + decimal.pow(0.348,0.5));
						AddTestCase('pwsx3628:p3 r:HALF_EVEN (0 + decimal.pow(0.0348,0.5)) inexact rounded', 0.187, 0 + decimal.pow(0.0348,0.5));
						AddTestCase('pwsx3629:p3 r:HALF_EVEN (0 + decimal.pow(0.349,0.5)) inexact rounded', 0.591, 0 + decimal.pow(0.349,0.5));
						AddTestCase('pwsx3630:p3 r:HALF_EVEN (0 + decimal.pow(0.0349,0.5)) inexact rounded', 0.187, 0 + decimal.pow(0.0349,0.5));
						AddTestCase('pwsx3631:p3 r:HALF_EVEN (0 + decimal.pow(0.351,0.5)) inexact rounded', 0.592, 0 + decimal.pow(0.351,0.5));
						AddTestCase('pwsx3632:p3 r:HALF_EVEN (0 + decimal.pow(0.0351,0.5)) inexact rounded', 0.187, 0 + decimal.pow(0.0351,0.5));
						AddTestCase('pwsx3633:p3 r:HALF_EVEN (0 + decimal.pow(0.352,0.5)) inexact rounded', 0.593, 0 + decimal.pow(0.352,0.5));
						AddTestCase('pwsx3634:p3 r:HALF_EVEN (0 + decimal.pow(0.0352,0.5)) inexact rounded', 0.188, 0 + decimal.pow(0.0352,0.5));
						AddTestCase('pwsx3635:p3 r:HALF_EVEN (0 + decimal.pow(0.353,0.5)) inexact rounded', 0.594, 0 + decimal.pow(0.353,0.5));
						AddTestCase('pwsx3636:p3 r:HALF_EVEN (0 + decimal.pow(0.0353,0.5)) inexact rounded', 0.188, 0 + decimal.pow(0.0353,0.5));
						AddTestCase('pwsx3637:p3 r:HALF_EVEN (0 + decimal.pow(0.354,0.5)) inexact rounded', 0.595, 0 + decimal.pow(0.354,0.5));
						AddTestCase('pwsx3638:p3 r:HALF_EVEN (0 + decimal.pow(0.0354,0.5)) inexact rounded', 0.188, 0 + decimal.pow(0.0354,0.5));
						AddTestCase('pwsx3639:p3 r:HALF_EVEN (0 + decimal.pow(0.355,0.5)) inexact rounded', 0.596, 0 + decimal.pow(0.355,0.5));
						AddTestCase('pwsx3640:p3 r:HALF_EVEN (0 + decimal.pow(0.0355,0.5)) inexact rounded', 0.188, 0 + decimal.pow(0.0355,0.5));
						AddTestCase('pwsx3641:p3 r:HALF_EVEN (0 + decimal.pow(0.356,0.5)) inexact rounded', 0.597, 0 + decimal.pow(0.356,0.5));
						AddTestCase('pwsx3642:p3 r:HALF_EVEN (0 + decimal.pow(0.0356,0.5)) inexact rounded', 0.189, 0 + decimal.pow(0.0356,0.5));
						AddTestCase('pwsx3643:p3 r:HALF_EVEN (0 + decimal.pow(0.357,0.5)) inexact rounded', 0.597, 0 + decimal.pow(0.357,0.5));
						AddTestCase('pwsx3644:p3 r:HALF_EVEN (0 + decimal.pow(0.0357,0.5)) inexact rounded', 0.189, 0 + decimal.pow(0.0357,0.5));
						AddTestCase('pwsx3645:p3 r:HALF_EVEN (0 + decimal.pow(0.358,0.5)) inexact rounded', 0.598, 0 + decimal.pow(0.358,0.5));
						AddTestCase('pwsx3646:p3 r:HALF_EVEN (0 + decimal.pow(0.0358,0.5)) inexact rounded', 0.189, 0 + decimal.pow(0.0358,0.5));
						AddTestCase('pwsx3647:p3 r:HALF_EVEN (0 + decimal.pow(0.359,0.5)) inexact rounded', 0.599, 0 + decimal.pow(0.359,0.5));
						AddTestCase('pwsx3648:p3 r:HALF_EVEN (0 + decimal.pow(0.0359,0.5)) inexact rounded', 0.189, 0 + decimal.pow(0.0359,0.5));
						AddTestCase('pwsx3649:p3 r:HALF_EVEN (0 + decimal.pow(0.361,0.5)) inexact rounded', 0.601, 0 + decimal.pow(0.361,0.5));
						AddTestCase('pwsx3650:p3 r:HALF_EVEN (0 + decimal.pow(0.0361,0.5)) inexact rounded', 0.190, 0 + decimal.pow(0.0361,0.5));
						AddTestCase('pwsx3651:p3 r:HALF_EVEN (0 + decimal.pow(0.362,0.5)) inexact rounded', 0.602, 0 + decimal.pow(0.362,0.5));
						AddTestCase('pwsx3652:p3 r:HALF_EVEN (0 + decimal.pow(0.0362,0.5)) inexact rounded', 0.190, 0 + decimal.pow(0.0362,0.5));
						AddTestCase('pwsx3653:p3 r:HALF_EVEN (0 + decimal.pow(0.363,0.5)) inexact rounded', 0.602, 0 + decimal.pow(0.363,0.5));
						AddTestCase('pwsx3654:p3 r:HALF_EVEN (0 + decimal.pow(0.0363,0.5)) inexact rounded', 0.191, 0 + decimal.pow(0.0363,0.5));
						AddTestCase('pwsx3655:p3 r:HALF_EVEN (0 + decimal.pow(0.364,0.5)) inexact rounded', 0.603, 0 + decimal.pow(0.364,0.5));
						AddTestCase('pwsx3656:p3 r:HALF_EVEN (0 + decimal.pow(0.0364,0.5)) inexact rounded', 0.191, 0 + decimal.pow(0.0364,0.5));
						AddTestCase('pwsx3657:p3 r:HALF_EVEN (0 + decimal.pow(0.365,0.5)) inexact rounded', 0.604, 0 + decimal.pow(0.365,0.5));
						AddTestCase('pwsx3658:p3 r:HALF_EVEN (0 + decimal.pow(0.0365,0.5)) inexact rounded', 0.191, 0 + decimal.pow(0.0365,0.5));
						AddTestCase('pwsx3659:p3 r:HALF_EVEN (0 + decimal.pow(0.366,0.5)) inexact rounded', 0.605, 0 + decimal.pow(0.366,0.5));
						AddTestCase('pwsx3660:p3 r:HALF_EVEN (0 + decimal.pow(0.0366,0.5)) inexact rounded', 0.191, 0 + decimal.pow(0.0366,0.5));
						AddTestCase('pwsx3661:p3 r:HALF_EVEN (0 + decimal.pow(0.367,0.5)) inexact rounded', 0.606, 0 + decimal.pow(0.367,0.5));
						AddTestCase('pwsx3662:p3 r:HALF_EVEN (0 + decimal.pow(0.0367,0.5)) inexact rounded', 0.192, 0 + decimal.pow(0.0367,0.5));
						AddTestCase('pwsx3663:p3 r:HALF_EVEN (0 + decimal.pow(0.368,0.5)) inexact rounded', 0.607, 0 + decimal.pow(0.368,0.5));
						AddTestCase('pwsx3664:p3 r:HALF_EVEN (0 + decimal.pow(0.0368,0.5)) inexact rounded', 0.192, 0 + decimal.pow(0.0368,0.5));
						AddTestCase('pwsx3665:p3 r:HALF_EVEN (0 + decimal.pow(0.369,0.5)) inexact rounded', 0.607, 0 + decimal.pow(0.369,0.5));
						AddTestCase('pwsx3666:p3 r:HALF_EVEN (0 + decimal.pow(0.0369,0.5)) inexact rounded', 0.192, 0 + decimal.pow(0.0369,0.5));
						AddTestCase('pwsx3667:p3 r:HALF_EVEN (0 + decimal.pow(0.371,0.5)) inexact rounded', 0.609, 0 + decimal.pow(0.371,0.5));
						AddTestCase('pwsx3668:p3 r:HALF_EVEN (0 + decimal.pow(0.0371,0.5)) inexact rounded', 0.193, 0 + decimal.pow(0.0371,0.5));
						AddTestCase('pwsx3669:p3 r:HALF_EVEN (0 + decimal.pow(0.372,0.5)) inexact rounded', 0.610, 0 + decimal.pow(0.372,0.5));
						AddTestCase('pwsx3670:p3 r:HALF_EVEN (0 + decimal.pow(0.0372,0.5)) inexact rounded', 0.193, 0 + decimal.pow(0.0372,0.5));
						AddTestCase('pwsx3671:p3 r:HALF_EVEN (0 + decimal.pow(0.373,0.5)) inexact rounded', 0.611, 0 + decimal.pow(0.373,0.5));
						AddTestCase('pwsx3672:p3 r:HALF_EVEN (0 + decimal.pow(0.0373,0.5)) inexact rounded', 0.193, 0 + decimal.pow(0.0373,0.5));
						AddTestCase('pwsx3673:p3 r:HALF_EVEN (0 + decimal.pow(0.374,0.5)) inexact rounded', 0.612, 0 + decimal.pow(0.374,0.5));
						AddTestCase('pwsx3674:p3 r:HALF_EVEN (0 + decimal.pow(0.0374,0.5)) inexact rounded', 0.193, 0 + decimal.pow(0.0374,0.5));
						AddTestCase('pwsx3675:p3 r:HALF_EVEN (0 + decimal.pow(0.375,0.5)) inexact rounded', 0.612, 0 + decimal.pow(0.375,0.5));
						AddTestCase('pwsx3676:p3 r:HALF_EVEN (0 + decimal.pow(0.0375,0.5)) inexact rounded', 0.194, 0 + decimal.pow(0.0375,0.5));
						AddTestCase('pwsx3677:p3 r:HALF_EVEN (0 + decimal.pow(0.376,0.5)) inexact rounded', 0.613, 0 + decimal.pow(0.376,0.5));
						AddTestCase('pwsx3678:p3 r:HALF_EVEN (0 + decimal.pow(0.0376,0.5)) inexact rounded', 0.194, 0 + decimal.pow(0.0376,0.5));
						AddTestCase('pwsx3679:p3 r:HALF_EVEN (0 + decimal.pow(0.377,0.5)) inexact rounded', 0.614, 0 + decimal.pow(0.377,0.5));
						AddTestCase('pwsx3680:p3 r:HALF_EVEN (0 + decimal.pow(0.0377,0.5)) inexact rounded', 0.194, 0 + decimal.pow(0.0377,0.5));
						AddTestCase('pwsx3681:p3 r:HALF_EVEN (0 + decimal.pow(0.378,0.5)) inexact rounded', 0.615, 0 + decimal.pow(0.378,0.5));
						AddTestCase('pwsx3682:p3 r:HALF_EVEN (0 + decimal.pow(0.0378,0.5)) inexact rounded', 0.194, 0 + decimal.pow(0.0378,0.5));
						AddTestCase('pwsx3683:p3 r:HALF_EVEN (0 + decimal.pow(0.379,0.5)) inexact rounded', 0.616, 0 + decimal.pow(0.379,0.5));
						AddTestCase('pwsx3684:p3 r:HALF_EVEN (0 + decimal.pow(0.0379,0.5)) inexact rounded', 0.195, 0 + decimal.pow(0.0379,0.5));
						AddTestCase('pwsx3685:p3 r:HALF_EVEN (0 + decimal.pow(0.381,0.5)) inexact rounded', 0.617, 0 + decimal.pow(0.381,0.5));
						AddTestCase('pwsx3686:p3 r:HALF_EVEN (0 + decimal.pow(0.0381,0.5)) inexact rounded', 0.195, 0 + decimal.pow(0.0381,0.5));
						AddTestCase('pwsx3687:p3 r:HALF_EVEN (0 + decimal.pow(0.382,0.5)) inexact rounded', 0.618, 0 + decimal.pow(0.382,0.5));
						AddTestCase('pwsx3688:p3 r:HALF_EVEN (0 + decimal.pow(0.0382,0.5)) inexact rounded', 0.195, 0 + decimal.pow(0.0382,0.5));
						AddTestCase('pwsx3689:p3 r:HALF_EVEN (0 + decimal.pow(0.383,0.5)) inexact rounded', 0.619, 0 + decimal.pow(0.383,0.5));
						AddTestCase('pwsx3690:p3 r:HALF_EVEN (0 + decimal.pow(0.0383,0.5)) inexact rounded', 0.196, 0 + decimal.pow(0.0383,0.5));
						AddTestCase('pwsx3691:p3 r:HALF_EVEN (0 + decimal.pow(0.384,0.5)) inexact rounded', 0.620, 0 + decimal.pow(0.384,0.5));
						AddTestCase('pwsx3692:p3 r:HALF_EVEN (0 + decimal.pow(0.0384,0.5)) inexact rounded', 0.196, 0 + decimal.pow(0.0384,0.5));
						AddTestCase('pwsx3693:p3 r:HALF_EVEN (0 + decimal.pow(0.385,0.5)) inexact rounded', 0.620, 0 + decimal.pow(0.385,0.5));
						AddTestCase('pwsx3694:p3 r:HALF_EVEN (0 + decimal.pow(0.0385,0.5)) inexact rounded', 0.196, 0 + decimal.pow(0.0385,0.5));
						AddTestCase('pwsx3695:p3 r:HALF_EVEN (0 + decimal.pow(0.386,0.5)) inexact rounded', 0.621, 0 + decimal.pow(0.386,0.5));
						AddTestCase('pwsx3696:p3 r:HALF_EVEN (0 + decimal.pow(0.0386,0.5)) inexact rounded', 0.196, 0 + decimal.pow(0.0386,0.5));
						AddTestCase('pwsx3697:p3 r:HALF_EVEN (0 + decimal.pow(0.387,0.5)) inexact rounded', 0.622, 0 + decimal.pow(0.387,0.5));
						AddTestCase('pwsx3698:p3 r:HALF_EVEN (0 + decimal.pow(0.0387,0.5)) inexact rounded', 0.197, 0 + decimal.pow(0.0387,0.5));
						AddTestCase('pwsx3699:p3 r:HALF_EVEN (0 + decimal.pow(0.388,0.5)) inexact rounded', 0.623, 0 + decimal.pow(0.388,0.5));
						AddTestCase('pwsx3700:p3 r:HALF_EVEN (0 + decimal.pow(0.0388,0.5)) inexact rounded', 0.197, 0 + decimal.pow(0.0388,0.5));
						AddTestCase('pwsx3701:p3 r:HALF_EVEN (0 + decimal.pow(0.389,0.5)) inexact rounded', 0.624, 0 + decimal.pow(0.389,0.5));
						AddTestCase('pwsx3702:p3 r:HALF_EVEN (0 + decimal.pow(0.0389,0.5)) inexact rounded', 0.197, 0 + decimal.pow(0.0389,0.5));
						AddTestCase('pwsx3703:p3 r:HALF_EVEN (0 + decimal.pow(0.391,0.5)) inexact rounded', 0.625, 0 + decimal.pow(0.391,0.5));
						AddTestCase('pwsx3704:p3 r:HALF_EVEN (0 + decimal.pow(0.0391,0.5)) inexact rounded', 0.198, 0 + decimal.pow(0.0391,0.5));
						AddTestCase('pwsx3705:p3 r:HALF_EVEN (0 + decimal.pow(0.392,0.5)) inexact rounded', 0.626, 0 + decimal.pow(0.392,0.5));
						AddTestCase('pwsx3706:p3 r:HALF_EVEN (0 + decimal.pow(0.0392,0.5)) inexact rounded', 0.198, 0 + decimal.pow(0.0392,0.5));
						AddTestCase('pwsx3707:p3 r:HALF_EVEN (0 + decimal.pow(0.393,0.5)) inexact rounded', 0.627, 0 + decimal.pow(0.393,0.5));
						AddTestCase('pwsx3708:p3 r:HALF_EVEN (0 + decimal.pow(0.0393,0.5)) inexact rounded', 0.198, 0 + decimal.pow(0.0393,0.5));
						AddTestCase('pwsx3709:p3 r:HALF_EVEN (0 + decimal.pow(0.394,0.5)) inexact rounded', 0.628, 0 + decimal.pow(0.394,0.5));
						AddTestCase('pwsx3710:p3 r:HALF_EVEN (0 + decimal.pow(0.0394,0.5)) inexact rounded', 0.198, 0 + decimal.pow(0.0394,0.5));
						AddTestCase('pwsx3711:p3 r:HALF_EVEN (0 + decimal.pow(0.395,0.5)) inexact rounded', 0.628, 0 + decimal.pow(0.395,0.5));
						AddTestCase('pwsx3712:p3 r:HALF_EVEN (0 + decimal.pow(0.0395,0.5)) inexact rounded', 0.199, 0 + decimal.pow(0.0395,0.5));
						AddTestCase('pwsx3713:p3 r:HALF_EVEN (0 + decimal.pow(0.396,0.5)) inexact rounded', 0.629, 0 + decimal.pow(0.396,0.5));
						AddTestCase('pwsx3714:p3 r:HALF_EVEN (0 + decimal.pow(0.0396,0.5)) inexact rounded', 0.199, 0 + decimal.pow(0.0396,0.5));
						AddTestCase('pwsx3715:p3 r:HALF_EVEN (0 + decimal.pow(0.397,0.5)) inexact rounded', 0.630, 0 + decimal.pow(0.397,0.5));
						AddTestCase('pwsx3716:p3 r:HALF_EVEN (0 + decimal.pow(0.0397,0.5)) inexact rounded', 0.199, 0 + decimal.pow(0.0397,0.5));
						AddTestCase('pwsx3717:p3 r:HALF_EVEN (0 + decimal.pow(0.398,0.5)) inexact rounded', 0.631, 0 + decimal.pow(0.398,0.5));
						AddTestCase('pwsx3718:p3 r:HALF_EVEN (0 + decimal.pow(0.0398,0.5)) inexact rounded', 0.199, 0 + decimal.pow(0.0398,0.5));
						AddTestCase('pwsx3719:p3 r:HALF_EVEN (0 + decimal.pow(0.399,0.5)) inexact rounded', 0.632, 0 + decimal.pow(0.399,0.5));
						AddTestCase('pwsx3720:p3 r:HALF_EVEN (0 + decimal.pow(0.0399,0.5)) inexact rounded', 0.200, 0 + decimal.pow(0.0399,0.5));
						AddTestCase('pwsx3721:p3 r:HALF_EVEN (0 + decimal.pow(0.401,0.5)) inexact rounded', 0.633, 0 + decimal.pow(0.401,0.5));
						AddTestCase('pwsx3722:p3 r:HALF_EVEN (0 + decimal.pow(0.0401,0.5)) inexact rounded', 0.200, 0 + decimal.pow(0.0401,0.5));
						AddTestCase('pwsx3723:p3 r:HALF_EVEN (0 + decimal.pow(0.402,0.5)) inexact rounded', 0.634, 0 + decimal.pow(0.402,0.5));
						AddTestCase('pwsx3724:p3 r:HALF_EVEN (0 + decimal.pow(0.0402,0.5)) inexact rounded', 0.200, 0 + decimal.pow(0.0402,0.5));
						AddTestCase('pwsx3725:p3 r:HALF_EVEN (0 + decimal.pow(0.403,0.5)) inexact rounded', 0.635, 0 + decimal.pow(0.403,0.5));
						AddTestCase('pwsx3726:p3 r:HALF_EVEN (0 + decimal.pow(0.0403,0.5)) inexact rounded', 0.201, 0 + decimal.pow(0.0403,0.5));
						AddTestCase('pwsx3727:p3 r:HALF_EVEN (0 + decimal.pow(0.404,0.5)) inexact rounded', 0.636, 0 + decimal.pow(0.404,0.5));
						AddTestCase('pwsx3728:p3 r:HALF_EVEN (0 + decimal.pow(0.0404,0.5)) inexact rounded', 0.201, 0 + decimal.pow(0.0404,0.5));
						AddTestCase('pwsx3729:p3 r:HALF_EVEN (0 + decimal.pow(0.405,0.5)) inexact rounded', 0.636, 0 + decimal.pow(0.405,0.5));
						AddTestCase('pwsx3730:p3 r:HALF_EVEN (0 + decimal.pow(0.0405,0.5)) inexact rounded', 0.201, 0 + decimal.pow(0.0405,0.5));
						AddTestCase('pwsx3731:p3 r:HALF_EVEN (0 + decimal.pow(0.406,0.5)) inexact rounded', 0.637, 0 + decimal.pow(0.406,0.5));
						AddTestCase('pwsx3732:p3 r:HALF_EVEN (0 + decimal.pow(0.0406,0.5)) inexact rounded', 0.201, 0 + decimal.pow(0.0406,0.5));
						AddTestCase('pwsx3733:p3 r:HALF_EVEN (0 + decimal.pow(0.407,0.5)) inexact rounded', 0.638, 0 + decimal.pow(0.407,0.5));
						AddTestCase('pwsx3734:p3 r:HALF_EVEN (0 + decimal.pow(0.0407,0.5)) inexact rounded', 0.202, 0 + decimal.pow(0.0407,0.5));
						AddTestCase('pwsx3735:p3 r:HALF_EVEN (0 + decimal.pow(0.408,0.5)) inexact rounded', 0.639, 0 + decimal.pow(0.408,0.5));
						AddTestCase('pwsx3736:p3 r:HALF_EVEN (0 + decimal.pow(0.0408,0.5)) inexact rounded', 0.202, 0 + decimal.pow(0.0408,0.5));
						AddTestCase('pwsx3737:p3 r:HALF_EVEN (0 + decimal.pow(0.409,0.5)) inexact rounded', 0.640, 0 + decimal.pow(0.409,0.5));
						AddTestCase('pwsx3738:p3 r:HALF_EVEN (0 + decimal.pow(0.0409,0.5)) inexact rounded', 0.202, 0 + decimal.pow(0.0409,0.5));
						AddTestCase('pwsx3739:p3 r:HALF_EVEN (0 + decimal.pow(0.411,0.5)) inexact rounded', 0.641, 0 + decimal.pow(0.411,0.5));
						AddTestCase('pwsx3740:p3 r:HALF_EVEN (0 + decimal.pow(0.0411,0.5)) inexact rounded', 0.203, 0 + decimal.pow(0.0411,0.5));
						AddTestCase('pwsx3741:p3 r:HALF_EVEN (0 + decimal.pow(0.412,0.5)) inexact rounded', 0.642, 0 + decimal.pow(0.412,0.5));
						AddTestCase('pwsx3742:p3 r:HALF_EVEN (0 + decimal.pow(0.0412,0.5)) inexact rounded', 0.203, 0 + decimal.pow(0.0412,0.5));
						AddTestCase('pwsx3743:p3 r:HALF_EVEN (0 + decimal.pow(0.413,0.5)) inexact rounded', 0.643, 0 + decimal.pow(0.413,0.5));
						AddTestCase('pwsx3744:p3 r:HALF_EVEN (0 + decimal.pow(0.0413,0.5)) inexact rounded', 0.203, 0 + decimal.pow(0.0413,0.5));
						AddTestCase('pwsx3745:p3 r:HALF_EVEN (0 + decimal.pow(0.414,0.5)) inexact rounded', 0.643, 0 + decimal.pow(0.414,0.5));
						AddTestCase('pwsx3746:p3 r:HALF_EVEN (0 + decimal.pow(0.0414,0.5)) inexact rounded', 0.203, 0 + decimal.pow(0.0414,0.5));
						AddTestCase('pwsx3747:p3 r:HALF_EVEN (0 + decimal.pow(0.415,0.5)) inexact rounded', 0.644, 0 + decimal.pow(0.415,0.5));
						AddTestCase('pwsx3748:p3 r:HALF_EVEN (0 + decimal.pow(0.0415,0.5)) inexact rounded', 0.204, 0 + decimal.pow(0.0415,0.5));
						AddTestCase('pwsx3749:p3 r:HALF_EVEN (0 + decimal.pow(0.416,0.5)) inexact rounded', 0.645, 0 + decimal.pow(0.416,0.5));
						AddTestCase('pwsx3750:p3 r:HALF_EVEN (0 + decimal.pow(0.0416,0.5)) inexact rounded', 0.204, 0 + decimal.pow(0.0416,0.5));
						AddTestCase('pwsx3751:p3 r:HALF_EVEN (0 + decimal.pow(0.417,0.5)) inexact rounded', 0.646, 0 + decimal.pow(0.417,0.5));
						AddTestCase('pwsx3752:p3 r:HALF_EVEN (0 + decimal.pow(0.0417,0.5)) inexact rounded', 0.204, 0 + decimal.pow(0.0417,0.5));
						AddTestCase('pwsx3753:p3 r:HALF_EVEN (0 + decimal.pow(0.418,0.5)) inexact rounded', 0.647, 0 + decimal.pow(0.418,0.5));
						AddTestCase('pwsx3754:p3 r:HALF_EVEN (0 + decimal.pow(0.0418,0.5)) inexact rounded', 0.204, 0 + decimal.pow(0.0418,0.5));
						AddTestCase('pwsx3755:p3 r:HALF_EVEN (0 + decimal.pow(0.419,0.5)) inexact rounded', 0.647, 0 + decimal.pow(0.419,0.5));
						AddTestCase('pwsx3756:p3 r:HALF_EVEN (0 + decimal.pow(0.0419,0.5)) inexact rounded', 0.205, 0 + decimal.pow(0.0419,0.5));
						AddTestCase('pwsx3757:p3 r:HALF_EVEN (0 + decimal.pow(0.421,0.5)) inexact rounded', 0.649, 0 + decimal.pow(0.421,0.5));
						AddTestCase('pwsx3758:p3 r:HALF_EVEN (0 + decimal.pow(0.0421,0.5)) inexact rounded', 0.205, 0 + decimal.pow(0.0421,0.5));
						AddTestCase('pwsx3759:p3 r:HALF_EVEN (0 + decimal.pow(0.422,0.5)) inexact rounded', 0.650, 0 + decimal.pow(0.422,0.5));
						AddTestCase('pwsx3760:p3 r:HALF_EVEN (0 + decimal.pow(0.0422,0.5)) inexact rounded', 0.205, 0 + decimal.pow(0.0422,0.5));
						AddTestCase('pwsx3761:p3 r:HALF_EVEN (0 + decimal.pow(0.423,0.5)) inexact rounded', 0.650, 0 + decimal.pow(0.423,0.5));
						AddTestCase('pwsx3762:p3 r:HALF_EVEN (0 + decimal.pow(0.0423,0.5)) inexact rounded', 0.206, 0 + decimal.pow(0.0423,0.5));
						AddTestCase('pwsx3763:p3 r:HALF_EVEN (0 + decimal.pow(0.424,0.5)) inexact rounded', 0.651, 0 + decimal.pow(0.424,0.5));
						AddTestCase('pwsx3764:p3 r:HALF_EVEN (0 + decimal.pow(0.0424,0.5)) inexact rounded', 0.206, 0 + decimal.pow(0.0424,0.5));
						AddTestCase('pwsx3765:p3 r:HALF_EVEN (0 + decimal.pow(0.425,0.5)) inexact rounded', 0.652, 0 + decimal.pow(0.425,0.5));
						AddTestCase('pwsx3766:p3 r:HALF_EVEN (0 + decimal.pow(0.0425,0.5)) inexact rounded', 0.206, 0 + decimal.pow(0.0425,0.5));
						AddTestCase('pwsx3767:p3 r:HALF_EVEN (0 + decimal.pow(0.426,0.5)) inexact rounded', 0.653, 0 + decimal.pow(0.426,0.5));
						AddTestCase('pwsx3768:p3 r:HALF_EVEN (0 + decimal.pow(0.0426,0.5)) inexact rounded', 0.206, 0 + decimal.pow(0.0426,0.5));
						AddTestCase('pwsx3769:p3 r:HALF_EVEN (0 + decimal.pow(0.427,0.5)) inexact rounded', 0.653, 0 + decimal.pow(0.427,0.5));
						AddTestCase('pwsx3770:p3 r:HALF_EVEN (0 + decimal.pow(0.0427,0.5)) inexact rounded', 0.207, 0 + decimal.pow(0.0427,0.5));
						AddTestCase('pwsx3771:p3 r:HALF_EVEN (0 + decimal.pow(0.428,0.5)) inexact rounded', 0.654, 0 + decimal.pow(0.428,0.5));
						AddTestCase('pwsx3772:p3 r:HALF_EVEN (0 + decimal.pow(0.0428,0.5)) inexact rounded', 0.207, 0 + decimal.pow(0.0428,0.5));
						AddTestCase('pwsx3773:p3 r:HALF_EVEN (0 + decimal.pow(0.429,0.5)) inexact rounded', 0.655, 0 + decimal.pow(0.429,0.5));
						AddTestCase('pwsx3774:p3 r:HALF_EVEN (0 + decimal.pow(0.0429,0.5)) inexact rounded', 0.207, 0 + decimal.pow(0.0429,0.5));
						AddTestCase('pwsx3775:p3 r:HALF_EVEN (0 + decimal.pow(0.431,0.5)) inexact rounded', 0.657, 0 + decimal.pow(0.431,0.5));
						AddTestCase('pwsx3776:p3 r:HALF_EVEN (0 + decimal.pow(0.0431,0.5)) inexact rounded', 0.208, 0 + decimal.pow(0.0431,0.5));
						AddTestCase('pwsx3777:p3 r:HALF_EVEN (0 + decimal.pow(0.432,0.5)) inexact rounded', 0.657, 0 + decimal.pow(0.432,0.5));
						AddTestCase('pwsx3778:p3 r:HALF_EVEN (0 + decimal.pow(0.0432,0.5)) inexact rounded', 0.208, 0 + decimal.pow(0.0432,0.5));
						AddTestCase('pwsx3779:p3 r:HALF_EVEN (0 + decimal.pow(0.433,0.5)) inexact rounded', 0.658, 0 + decimal.pow(0.433,0.5));
						AddTestCase('pwsx3780:p3 r:HALF_EVEN (0 + decimal.pow(0.0433,0.5)) inexact rounded', 0.208, 0 + decimal.pow(0.0433,0.5));
						AddTestCase('pwsx3781:p3 r:HALF_EVEN (0 + decimal.pow(0.434,0.5)) inexact rounded', 0.659, 0 + decimal.pow(0.434,0.5));
						AddTestCase('pwsx3782:p3 r:HALF_EVEN (0 + decimal.pow(0.0434,0.5)) inexact rounded', 0.208, 0 + decimal.pow(0.0434,0.5));
						AddTestCase('pwsx3783:p3 r:HALF_EVEN (0 + decimal.pow(0.435,0.5)) inexact rounded', 0.660, 0 + decimal.pow(0.435,0.5));
						AddTestCase('pwsx3784:p3 r:HALF_EVEN (0 + decimal.pow(0.0435,0.5)) inexact rounded', 0.209, 0 + decimal.pow(0.0435,0.5));
						AddTestCase('pwsx3785:p3 r:HALF_EVEN (0 + decimal.pow(0.436,0.5)) inexact rounded', 0.660, 0 + decimal.pow(0.436,0.5));
						AddTestCase('pwsx3786:p3 r:HALF_EVEN (0 + decimal.pow(0.0436,0.5)) inexact rounded', 0.209, 0 + decimal.pow(0.0436,0.5));
						AddTestCase('pwsx3787:p3 r:HALF_EVEN (0 + decimal.pow(0.437,0.5)) inexact rounded', 0.661, 0 + decimal.pow(0.437,0.5));
						AddTestCase('pwsx3788:p3 r:HALF_EVEN (0 + decimal.pow(0.0437,0.5)) inexact rounded', 0.209, 0 + decimal.pow(0.0437,0.5));
						AddTestCase('pwsx3789:p3 r:HALF_EVEN (0 + decimal.pow(0.438,0.5)) inexact rounded', 0.662, 0 + decimal.pow(0.438,0.5));
						AddTestCase('pwsx3790:p3 r:HALF_EVEN (0 + decimal.pow(0.0438,0.5)) inexact rounded', 0.209, 0 + decimal.pow(0.0438,0.5));
						AddTestCase('pwsx3791:p3 r:HALF_EVEN (0 + decimal.pow(0.439,0.5)) inexact rounded', 0.663, 0 + decimal.pow(0.439,0.5));
						AddTestCase('pwsx3792:p3 r:HALF_EVEN (0 + decimal.pow(0.0439,0.5)) inexact rounded', 0.210, 0 + decimal.pow(0.0439,0.5));
						AddTestCase('pwsx3793:p3 r:HALF_EVEN (0 + decimal.pow(0.441,0.5)) inexact rounded', 0.664, 0 + decimal.pow(0.441,0.5));
						AddTestCase('pwsx3794:p3 r:HALF_EVEN (0 + decimal.pow(0.0441,0.5)) inexact rounded', 0.210, 0 + decimal.pow(0.0441,0.5));
						AddTestCase('pwsx3795:p3 r:HALF_EVEN (0 + decimal.pow(0.442,0.5)) inexact rounded', 0.665, 0 + decimal.pow(0.442,0.5));
						AddTestCase('pwsx3796:p3 r:HALF_EVEN (0 + decimal.pow(0.0442,0.5)) inexact rounded', 0.210, 0 + decimal.pow(0.0442,0.5));
						AddTestCase('pwsx3797:p3 r:HALF_EVEN (0 + decimal.pow(0.443,0.5)) inexact rounded', 0.666, 0 + decimal.pow(0.443,0.5));
						AddTestCase('pwsx3798:p3 r:HALF_EVEN (0 + decimal.pow(0.0443,0.5)) inexact rounded', 0.210, 0 + decimal.pow(0.0443,0.5));
						AddTestCase('pwsx3799:p3 r:HALF_EVEN (0 + decimal.pow(0.444,0.5)) inexact rounded', 0.666, 0 + decimal.pow(0.444,0.5));
						AddTestCase('pwsx3800:p3 r:HALF_EVEN (0 + decimal.pow(0.0444,0.5)) inexact rounded', 0.211, 0 + decimal.pow(0.0444,0.5));
						AddTestCase('pwsx3801:p3 r:HALF_EVEN (0 + decimal.pow(0.445,0.5)) inexact rounded', 0.667, 0 + decimal.pow(0.445,0.5));
						AddTestCase('pwsx3802:p3 r:HALF_EVEN (0 + decimal.pow(0.0445,0.5)) inexact rounded', 0.211, 0 + decimal.pow(0.0445,0.5));
						AddTestCase('pwsx3803:p3 r:HALF_EVEN (0 + decimal.pow(0.446,0.5)) inexact rounded', 0.668, 0 + decimal.pow(0.446,0.5));
						AddTestCase('pwsx3804:p3 r:HALF_EVEN (0 + decimal.pow(0.0446,0.5)) inexact rounded', 0.211, 0 + decimal.pow(0.0446,0.5));
						AddTestCase('pwsx3805:p3 r:HALF_EVEN (0 + decimal.pow(0.447,0.5)) inexact rounded', 0.669, 0 + decimal.pow(0.447,0.5));
						AddTestCase('pwsx3806:p3 r:HALF_EVEN (0 + decimal.pow(0.0447,0.5)) inexact rounded', 0.211, 0 + decimal.pow(0.0447,0.5));
						AddTestCase('pwsx3807:p3 r:HALF_EVEN (0 + decimal.pow(0.448,0.5)) inexact rounded', 0.669, 0 + decimal.pow(0.448,0.5));
						AddTestCase('pwsx3808:p3 r:HALF_EVEN (0 + decimal.pow(0.0448,0.5)) inexact rounded', 0.212, 0 + decimal.pow(0.0448,0.5));
						AddTestCase('pwsx3809:p3 r:HALF_EVEN (0 + decimal.pow(0.449,0.5)) inexact rounded', 0.670, 0 + decimal.pow(0.449,0.5));
						AddTestCase('pwsx3810:p3 r:HALF_EVEN (0 + decimal.pow(0.0449,0.5)) inexact rounded', 0.212, 0 + decimal.pow(0.0449,0.5));
						AddTestCase('pwsx3811:p3 r:HALF_EVEN (0 + decimal.pow(0.451,0.5)) inexact rounded', 0.672, 0 + decimal.pow(0.451,0.5));
						AddTestCase('pwsx3812:p3 r:HALF_EVEN (0 + decimal.pow(0.0451,0.5)) inexact rounded', 0.212, 0 + decimal.pow(0.0451,0.5));
						AddTestCase('pwsx3813:p3 r:HALF_EVEN (0 + decimal.pow(0.452,0.5)) inexact rounded', 0.672, 0 + decimal.pow(0.452,0.5));
						AddTestCase('pwsx3814:p3 r:HALF_EVEN (0 + decimal.pow(0.0452,0.5)) inexact rounded', 0.213, 0 + decimal.pow(0.0452,0.5));
						AddTestCase('pwsx3815:p3 r:HALF_EVEN (0 + decimal.pow(0.453,0.5)) inexact rounded', 0.673, 0 + decimal.pow(0.453,0.5));
						AddTestCase('pwsx3816:p3 r:HALF_EVEN (0 + decimal.pow(0.0453,0.5)) inexact rounded', 0.213, 0 + decimal.pow(0.0453,0.5));
						AddTestCase('pwsx3817:p3 r:HALF_EVEN (0 + decimal.pow(0.454,0.5)) inexact rounded', 0.674, 0 + decimal.pow(0.454,0.5));
						AddTestCase('pwsx3818:p3 r:HALF_EVEN (0 + decimal.pow(0.0454,0.5)) inexact rounded', 0.213, 0 + decimal.pow(0.0454,0.5));
						AddTestCase('pwsx3819:p3 r:HALF_EVEN (0 + decimal.pow(0.455,0.5)) inexact rounded', 0.675, 0 + decimal.pow(0.455,0.5));
						AddTestCase('pwsx3820:p3 r:HALF_EVEN (0 + decimal.pow(0.0455,0.5)) inexact rounded', 0.213, 0 + decimal.pow(0.0455,0.5));
						AddTestCase('pwsx3821:p3 r:HALF_EVEN (0 + decimal.pow(0.456,0.5)) inexact rounded', 0.675, 0 + decimal.pow(0.456,0.5));
						AddTestCase('pwsx3822:p3 r:HALF_EVEN (0 + decimal.pow(0.0456,0.5)) inexact rounded', 0.214, 0 + decimal.pow(0.0456,0.5));
						AddTestCase('pwsx3823:p3 r:HALF_EVEN (0 + decimal.pow(0.457,0.5)) inexact rounded', 0.676, 0 + decimal.pow(0.457,0.5));
						AddTestCase('pwsx3824:p3 r:HALF_EVEN (0 + decimal.pow(0.0457,0.5)) inexact rounded', 0.214, 0 + decimal.pow(0.0457,0.5));
						AddTestCase('pwsx3825:p3 r:HALF_EVEN (0 + decimal.pow(0.458,0.5)) inexact rounded', 0.677, 0 + decimal.pow(0.458,0.5));
						AddTestCase('pwsx3826:p3 r:HALF_EVEN (0 + decimal.pow(0.0458,0.5)) inexact rounded', 0.214, 0 + decimal.pow(0.0458,0.5));
						AddTestCase('pwsx3827:p3 r:HALF_EVEN (0 + decimal.pow(0.459,0.5)) inexact rounded', 0.677, 0 + decimal.pow(0.459,0.5));
						AddTestCase('pwsx3828:p3 r:HALF_EVEN (0 + decimal.pow(0.0459,0.5)) inexact rounded', 0.214, 0 + decimal.pow(0.0459,0.5));
						AddTestCase('pwsx3829:p3 r:HALF_EVEN (0 + decimal.pow(0.461,0.5)) inexact rounded', 0.679, 0 + decimal.pow(0.461,0.5));
						AddTestCase('pwsx3830:p3 r:HALF_EVEN (0 + decimal.pow(0.0461,0.5)) inexact rounded', 0.215, 0 + decimal.pow(0.0461,0.5));
						AddTestCase('pwsx3831:p3 r:HALF_EVEN (0 + decimal.pow(0.462,0.5)) inexact rounded', 0.680, 0 + decimal.pow(0.462,0.5));
						AddTestCase('pwsx3832:p3 r:HALF_EVEN (0 + decimal.pow(0.0462,0.5)) inexact rounded', 0.215, 0 + decimal.pow(0.0462,0.5));
						AddTestCase('pwsx3833:p3 r:HALF_EVEN (0 + decimal.pow(0.463,0.5)) inexact rounded', 0.680, 0 + decimal.pow(0.463,0.5));
						AddTestCase('pwsx3834:p3 r:HALF_EVEN (0 + decimal.pow(0.0463,0.5)) inexact rounded', 0.215, 0 + decimal.pow(0.0463,0.5));
						AddTestCase('pwsx3835:p3 r:HALF_EVEN (0 + decimal.pow(0.464,0.5)) inexact rounded', 0.681, 0 + decimal.pow(0.464,0.5));
						AddTestCase('pwsx3836:p3 r:HALF_EVEN (0 + decimal.pow(0.0464,0.5)) inexact rounded', 0.215, 0 + decimal.pow(0.0464,0.5));
						AddTestCase('pwsx3837:p3 r:HALF_EVEN (0 + decimal.pow(0.465,0.5)) inexact rounded', 0.682, 0 + decimal.pow(0.465,0.5));
						AddTestCase('pwsx3838:p3 r:HALF_EVEN (0 + decimal.pow(0.0465,0.5)) inexact rounded', 0.216, 0 + decimal.pow(0.0465,0.5));
						AddTestCase('pwsx3839:p3 r:HALF_EVEN (0 + decimal.pow(0.466,0.5)) inexact rounded', 0.683, 0 + decimal.pow(0.466,0.5));
						AddTestCase('pwsx3840:p3 r:HALF_EVEN (0 + decimal.pow(0.0466,0.5)) inexact rounded', 0.216, 0 + decimal.pow(0.0466,0.5));
						AddTestCase('pwsx3841:p3 r:HALF_EVEN (0 + decimal.pow(0.467,0.5)) inexact rounded', 0.683, 0 + decimal.pow(0.467,0.5));
						AddTestCase('pwsx3842:p3 r:HALF_EVEN (0 + decimal.pow(0.0467,0.5)) inexact rounded', 0.216, 0 + decimal.pow(0.0467,0.5));
						AddTestCase('pwsx3843:p3 r:HALF_EVEN (0 + decimal.pow(0.468,0.5)) inexact rounded', 0.684, 0 + decimal.pow(0.468,0.5));
						AddTestCase('pwsx3844:p3 r:HALF_EVEN (0 + decimal.pow(0.0468,0.5)) inexact rounded', 0.216, 0 + decimal.pow(0.0468,0.5));
						AddTestCase('pwsx3845:p3 r:HALF_EVEN (0 + decimal.pow(0.469,0.5)) inexact rounded', 0.685, 0 + decimal.pow(0.469,0.5));
						AddTestCase('pwsx3846:p3 r:HALF_EVEN (0 + decimal.pow(0.0469,0.5)) inexact rounded', 0.217, 0 + decimal.pow(0.0469,0.5));
						AddTestCase('pwsx3847:p3 r:HALF_EVEN (0 + decimal.pow(0.471,0.5)) inexact rounded', 0.686, 0 + decimal.pow(0.471,0.5));
						AddTestCase('pwsx3848:p3 r:HALF_EVEN (0 + decimal.pow(0.0471,0.5)) inexact rounded', 0.217, 0 + decimal.pow(0.0471,0.5));
						AddTestCase('pwsx3849:p3 r:HALF_EVEN (0 + decimal.pow(0.472,0.5)) inexact rounded', 0.687, 0 + decimal.pow(0.472,0.5));
						AddTestCase('pwsx3850:p3 r:HALF_EVEN (0 + decimal.pow(0.0472,0.5)) inexact rounded', 0.217, 0 + decimal.pow(0.0472,0.5));
						AddTestCase('pwsx3851:p3 r:HALF_EVEN (0 + decimal.pow(0.473,0.5)) inexact rounded', 0.688, 0 + decimal.pow(0.473,0.5));
						AddTestCase('pwsx3852:p3 r:HALF_EVEN (0 + decimal.pow(0.0473,0.5)) inexact rounded', 0.217, 0 + decimal.pow(0.0473,0.5));
						AddTestCase('pwsx3853:p3 r:HALF_EVEN (0 + decimal.pow(0.474,0.5)) inexact rounded', 0.688, 0 + decimal.pow(0.474,0.5));
						AddTestCase('pwsx3854:p3 r:HALF_EVEN (0 + decimal.pow(0.0474,0.5)) inexact rounded', 0.218, 0 + decimal.pow(0.0474,0.5));
						AddTestCase('pwsx3855:p3 r:HALF_EVEN (0 + decimal.pow(0.475,0.5)) inexact rounded', 0.689, 0 + decimal.pow(0.475,0.5));
						AddTestCase('pwsx3856:p3 r:HALF_EVEN (0 + decimal.pow(0.0475,0.5)) inexact rounded', 0.218, 0 + decimal.pow(0.0475,0.5));
						AddTestCase('pwsx3857:p3 r:HALF_EVEN (0 + decimal.pow(0.476,0.5)) inexact rounded', 0.690, 0 + decimal.pow(0.476,0.5));
						AddTestCase('pwsx3858:p3 r:HALF_EVEN (0 + decimal.pow(0.0476,0.5)) inexact rounded', 0.218, 0 + decimal.pow(0.0476,0.5));
						AddTestCase('pwsx3859:p3 r:HALF_EVEN (0 + decimal.pow(0.477,0.5)) inexact rounded', 0.691, 0 + decimal.pow(0.477,0.5));
						AddTestCase('pwsx3860:p3 r:HALF_EVEN (0 + decimal.pow(0.0477,0.5)) inexact rounded', 0.218, 0 + decimal.pow(0.0477,0.5));
						AddTestCase('pwsx3861:p3 r:HALF_EVEN (0 + decimal.pow(0.478,0.5)) inexact rounded', 0.691, 0 + decimal.pow(0.478,0.5));
						AddTestCase('pwsx3862:p3 r:HALF_EVEN (0 + decimal.pow(0.0478,0.5)) inexact rounded', 0.219, 0 + decimal.pow(0.0478,0.5));
						AddTestCase('pwsx3863:p3 r:HALF_EVEN (0 + decimal.pow(0.479,0.5)) inexact rounded', 0.692, 0 + decimal.pow(0.479,0.5));
						AddTestCase('pwsx3864:p3 r:HALF_EVEN (0 + decimal.pow(0.0479,0.5)) inexact rounded', 0.219, 0 + decimal.pow(0.0479,0.5));
						AddTestCase('pwsx3865:p3 r:HALF_EVEN (0 + decimal.pow(0.481,0.5)) inexact rounded', 0.694, 0 + decimal.pow(0.481,0.5));
						AddTestCase('pwsx3866:p3 r:HALF_EVEN (0 + decimal.pow(0.0481,0.5)) inexact rounded', 0.219, 0 + decimal.pow(0.0481,0.5));
						AddTestCase('pwsx3867:p3 r:HALF_EVEN (0 + decimal.pow(0.482,0.5)) inexact rounded', 0.694, 0 + decimal.pow(0.482,0.5));
						AddTestCase('pwsx3868:p3 r:HALF_EVEN (0 + decimal.pow(0.0482,0.5)) inexact rounded', 0.220, 0 + decimal.pow(0.0482,0.5));
						AddTestCase('pwsx3869:p3 r:HALF_EVEN (0 + decimal.pow(0.483,0.5)) inexact rounded', 0.695, 0 + decimal.pow(0.483,0.5));
						AddTestCase('pwsx3870:p3 r:HALF_EVEN (0 + decimal.pow(0.0483,0.5)) inexact rounded', 0.220, 0 + decimal.pow(0.0483,0.5));
						AddTestCase('pwsx3871:p3 r:HALF_EVEN (0 + decimal.pow(0.484,0.5)) inexact rounded', 0.696, 0 + decimal.pow(0.484,0.5));
						AddTestCase('pwsx3872:p3 r:HALF_EVEN (0 + decimal.pow(0.0484,0.5)) inexact rounded', 0.220, 0 + decimal.pow(0.0484,0.5));
						AddTestCase('pwsx3873:p3 r:HALF_EVEN (0 + decimal.pow(0.485,0.5)) inexact rounded', 0.696, 0 + decimal.pow(0.485,0.5));
						AddTestCase('pwsx3874:p3 r:HALF_EVEN (0 + decimal.pow(0.0485,0.5)) inexact rounded', 0.220, 0 + decimal.pow(0.0485,0.5));
						AddTestCase('pwsx3875:p3 r:HALF_EVEN (0 + decimal.pow(0.486,0.5)) inexact rounded', 0.697, 0 + decimal.pow(0.486,0.5));
						AddTestCase('pwsx3876:p3 r:HALF_EVEN (0 + decimal.pow(0.0486,0.5)) inexact rounded', 0.220, 0 + decimal.pow(0.0486,0.5));
						AddTestCase('pwsx3877:p3 r:HALF_EVEN (0 + decimal.pow(0.487,0.5)) inexact rounded', 0.698, 0 + decimal.pow(0.487,0.5));
						AddTestCase('pwsx3878:p3 r:HALF_EVEN (0 + decimal.pow(0.0487,0.5)) inexact rounded', 0.221, 0 + decimal.pow(0.0487,0.5));
						AddTestCase('pwsx3879:p3 r:HALF_EVEN (0 + decimal.pow(0.488,0.5)) inexact rounded', 0.699, 0 + decimal.pow(0.488,0.5));
						AddTestCase('pwsx3880:p3 r:HALF_EVEN (0 + decimal.pow(0.0488,0.5)) inexact rounded', 0.221, 0 + decimal.pow(0.0488,0.5));
						AddTestCase('pwsx3881:p3 r:HALF_EVEN (0 + decimal.pow(0.489,0.5)) inexact rounded', 0.699, 0 + decimal.pow(0.489,0.5));
						AddTestCase('pwsx3882:p3 r:HALF_EVEN (0 + decimal.pow(0.0489,0.5)) inexact rounded', 0.221, 0 + decimal.pow(0.0489,0.5));
						AddTestCase('pwsx3883:p3 r:HALF_EVEN (0 + decimal.pow(0.491,0.5)) inexact rounded', 0.701, 0 + decimal.pow(0.491,0.5));
						AddTestCase('pwsx3884:p3 r:HALF_EVEN (0 + decimal.pow(0.0491,0.5)) inexact rounded', 0.222, 0 + decimal.pow(0.0491,0.5));
						AddTestCase('pwsx3885:p3 r:HALF_EVEN (0 + decimal.pow(0.492,0.5)) inexact rounded', 0.701, 0 + decimal.pow(0.492,0.5));
						AddTestCase('pwsx3886:p3 r:HALF_EVEN (0 + decimal.pow(0.0492,0.5)) inexact rounded', 0.222, 0 + decimal.pow(0.0492,0.5));
						AddTestCase('pwsx3887:p3 r:HALF_EVEN (0 + decimal.pow(0.493,0.5)) inexact rounded', 0.702, 0 + decimal.pow(0.493,0.5));
						AddTestCase('pwsx3888:p3 r:HALF_EVEN (0 + decimal.pow(0.0493,0.5)) inexact rounded', 0.222, 0 + decimal.pow(0.0493,0.5));
						AddTestCase('pwsx3889:p3 r:HALF_EVEN (0 + decimal.pow(0.494,0.5)) inexact rounded', 0.703, 0 + decimal.pow(0.494,0.5));
						AddTestCase('pwsx3890:p3 r:HALF_EVEN (0 + decimal.pow(0.0494,0.5)) inexact rounded', 0.222, 0 + decimal.pow(0.0494,0.5));
						AddTestCase('pwsx3891:p3 r:HALF_EVEN (0 + decimal.pow(0.495,0.5)) inexact rounded', 0.704, 0 + decimal.pow(0.495,0.5));
						AddTestCase('pwsx3892:p3 r:HALF_EVEN (0 + decimal.pow(0.0495,0.5)) inexact rounded', 0.222, 0 + decimal.pow(0.0495,0.5));
						AddTestCase('pwsx3893:p3 r:HALF_EVEN (0 + decimal.pow(0.496,0.5)) inexact rounded', 0.704, 0 + decimal.pow(0.496,0.5));
						AddTestCase('pwsx3894:p3 r:HALF_EVEN (0 + decimal.pow(0.0496,0.5)) inexact rounded', 0.223, 0 + decimal.pow(0.0496,0.5));
						AddTestCase('pwsx3895:p3 r:HALF_EVEN (0 + decimal.pow(0.497,0.5)) inexact rounded', 0.705, 0 + decimal.pow(0.497,0.5));
						AddTestCase('pwsx3896:p3 r:HALF_EVEN (0 + decimal.pow(0.0497,0.5)) inexact rounded', 0.223, 0 + decimal.pow(0.0497,0.5));
						AddTestCase('pwsx3897:p3 r:HALF_EVEN (0 + decimal.pow(0.498,0.5)) inexact rounded', 0.706, 0 + decimal.pow(0.498,0.5));
						AddTestCase('pwsx3898:p3 r:HALF_EVEN (0 + decimal.pow(0.0498,0.5)) inexact rounded', 0.223, 0 + decimal.pow(0.0498,0.5));
						AddTestCase('pwsx3899:p3 r:HALF_EVEN (0 + decimal.pow(0.499,0.5)) inexact rounded', 0.706, 0 + decimal.pow(0.499,0.5));
						AddTestCase('pwsx3900:p3 r:HALF_EVEN (0 + decimal.pow(0.0499,0.5)) inexact rounded', 0.223, 0 + decimal.pow(0.0499,0.5));
						AddTestCase('pwsx3901:p3 r:HALF_EVEN (0 + decimal.pow(0.501,0.5)) inexact rounded', 0.708, 0 + decimal.pow(0.501,0.5));
						AddTestCase('pwsx3902:p3 r:HALF_EVEN (0 + decimal.pow(0.0501,0.5)) inexact rounded', 0.224, 0 + decimal.pow(0.0501,0.5));
						AddTestCase('pwsx3903:p3 r:HALF_EVEN (0 + decimal.pow(0.502,0.5)) inexact rounded', 0.709, 0 + decimal.pow(0.502,0.5));
						AddTestCase('pwsx3904:p3 r:HALF_EVEN (0 + decimal.pow(0.0502,0.5)) inexact rounded', 0.224, 0 + decimal.pow(0.0502,0.5));
						AddTestCase('pwsx3905:p3 r:HALF_EVEN (0 + decimal.pow(0.503,0.5)) inexact rounded', 0.709, 0 + decimal.pow(0.503,0.5));
						AddTestCase('pwsx3906:p3 r:HALF_EVEN (0 + decimal.pow(0.0503,0.5)) inexact rounded', 0.224, 0 + decimal.pow(0.0503,0.5));
						AddTestCase('pwsx3907:p3 r:HALF_EVEN (0 + decimal.pow(0.504,0.5)) inexact rounded', 0.710, 0 + decimal.pow(0.504,0.5));
						AddTestCase('pwsx3908:p3 r:HALF_EVEN (0 + decimal.pow(0.0504,0.5)) inexact rounded', 0.224, 0 + decimal.pow(0.0504,0.5));
						AddTestCase('pwsx3909:p3 r:HALF_EVEN (0 + decimal.pow(0.505,0.5)) inexact rounded', 0.711, 0 + decimal.pow(0.505,0.5));
						AddTestCase('pwsx3910:p3 r:HALF_EVEN (0 + decimal.pow(0.0505,0.5)) inexact rounded', 0.225, 0 + decimal.pow(0.0505,0.5));
						AddTestCase('pwsx3911:p3 r:HALF_EVEN (0 + decimal.pow(0.506,0.5)) inexact rounded', 0.711, 0 + decimal.pow(0.506,0.5));
						AddTestCase('pwsx3912:p3 r:HALF_EVEN (0 + decimal.pow(0.0506,0.5)) inexact rounded', 0.225, 0 + decimal.pow(0.0506,0.5));
						AddTestCase('pwsx3913:p3 r:HALF_EVEN (0 + decimal.pow(0.507,0.5)) inexact rounded', 0.712, 0 + decimal.pow(0.507,0.5));
						AddTestCase('pwsx3914:p3 r:HALF_EVEN (0 + decimal.pow(0.0507,0.5)) inexact rounded', 0.225, 0 + decimal.pow(0.0507,0.5));
						AddTestCase('pwsx3915:p3 r:HALF_EVEN (0 + decimal.pow(0.508,0.5)) inexact rounded', 0.713, 0 + decimal.pow(0.508,0.5));
						AddTestCase('pwsx3916:p3 r:HALF_EVEN (0 + decimal.pow(0.0508,0.5)) inexact rounded', 0.225, 0 + decimal.pow(0.0508,0.5));
						AddTestCase('pwsx3917:p3 r:HALF_EVEN (0 + decimal.pow(0.509,0.5)) inexact rounded', 0.713, 0 + decimal.pow(0.509,0.5));
						AddTestCase('pwsx3918:p3 r:HALF_EVEN (0 + decimal.pow(0.0509,0.5)) inexact rounded', 0.226, 0 + decimal.pow(0.0509,0.5));
						AddTestCase('pwsx3919:p3 r:HALF_EVEN (0 + decimal.pow(0.511,0.5)) inexact rounded', 0.715, 0 + decimal.pow(0.511,0.5));
						AddTestCase('pwsx3920:p3 r:HALF_EVEN (0 + decimal.pow(0.0511,0.5)) inexact rounded', 0.226, 0 + decimal.pow(0.0511,0.5));
						AddTestCase('pwsx3921:p3 r:HALF_EVEN (0 + decimal.pow(0.512,0.5)) inexact rounded', 0.716, 0 + decimal.pow(0.512,0.5));
						AddTestCase('pwsx3922:p3 r:HALF_EVEN (0 + decimal.pow(0.0512,0.5)) inexact rounded', 0.226, 0 + decimal.pow(0.0512,0.5));
						AddTestCase('pwsx3923:p3 r:HALF_EVEN (0 + decimal.pow(0.513,0.5)) inexact rounded', 0.716, 0 + decimal.pow(0.513,0.5));
						AddTestCase('pwsx3924:p3 r:HALF_EVEN (0 + decimal.pow(0.0513,0.5)) inexact rounded', 0.226, 0 + decimal.pow(0.0513,0.5));
						AddTestCase('pwsx3925:p3 r:HALF_EVEN (0 + decimal.pow(0.514,0.5)) inexact rounded', 0.717, 0 + decimal.pow(0.514,0.5));
						AddTestCase('pwsx3926:p3 r:HALF_EVEN (0 + decimal.pow(0.0514,0.5)) inexact rounded', 0.227, 0 + decimal.pow(0.0514,0.5));
						AddTestCase('pwsx3927:p3 r:HALF_EVEN (0 + decimal.pow(0.515,0.5)) inexact rounded', 0.718, 0 + decimal.pow(0.515,0.5));
						AddTestCase('pwsx3928:p3 r:HALF_EVEN (0 + decimal.pow(0.0515,0.5)) inexact rounded', 0.227, 0 + decimal.pow(0.0515,0.5));
						AddTestCase('pwsx3929:p3 r:HALF_EVEN (0 + decimal.pow(0.516,0.5)) inexact rounded', 0.718, 0 + decimal.pow(0.516,0.5));
						AddTestCase('pwsx3930:p3 r:HALF_EVEN (0 + decimal.pow(0.0516,0.5)) inexact rounded', 0.227, 0 + decimal.pow(0.0516,0.5));
						AddTestCase('pwsx3931:p3 r:HALF_EVEN (0 + decimal.pow(0.517,0.5)) inexact rounded', 0.719, 0 + decimal.pow(0.517,0.5));
						AddTestCase('pwsx3932:p3 r:HALF_EVEN (0 + decimal.pow(0.0517,0.5)) inexact rounded', 0.227, 0 + decimal.pow(0.0517,0.5));
						AddTestCase('pwsx3933:p3 r:HALF_EVEN (0 + decimal.pow(0.518,0.5)) inexact rounded', 0.720, 0 + decimal.pow(0.518,0.5));
						AddTestCase('pwsx3934:p3 r:HALF_EVEN (0 + decimal.pow(0.0518,0.5)) inexact rounded', 0.228, 0 + decimal.pow(0.0518,0.5));
						AddTestCase('pwsx3935:p3 r:HALF_EVEN (0 + decimal.pow(0.519,0.5)) inexact rounded', 0.720, 0 + decimal.pow(0.519,0.5));
						AddTestCase('pwsx3936:p3 r:HALF_EVEN (0 + decimal.pow(0.0519,0.5)) inexact rounded', 0.228, 0 + decimal.pow(0.0519,0.5));
						AddTestCase('pwsx3937:p3 r:HALF_EVEN (0 + decimal.pow(0.521,0.5)) inexact rounded', 0.722, 0 + decimal.pow(0.521,0.5));
						AddTestCase('pwsx3938:p3 r:HALF_EVEN (0 + decimal.pow(0.0521,0.5)) inexact rounded', 0.228, 0 + decimal.pow(0.0521,0.5));
						AddTestCase('pwsx3939:p3 r:HALF_EVEN (0 + decimal.pow(0.522,0.5)) inexact rounded', 0.722, 0 + decimal.pow(0.522,0.5));
						AddTestCase('pwsx3940:p3 r:HALF_EVEN (0 + decimal.pow(0.0522,0.5)) inexact rounded', 0.228, 0 + decimal.pow(0.0522,0.5));
						AddTestCase('pwsx3941:p3 r:HALF_EVEN (0 + decimal.pow(0.523,0.5)) inexact rounded', 0.723, 0 + decimal.pow(0.523,0.5));
						AddTestCase('pwsx3942:p3 r:HALF_EVEN (0 + decimal.pow(0.0523,0.5)) inexact rounded', 0.229, 0 + decimal.pow(0.0523,0.5));
						AddTestCase('pwsx3943:p3 r:HALF_EVEN (0 + decimal.pow(0.524,0.5)) inexact rounded', 0.724, 0 + decimal.pow(0.524,0.5));
						AddTestCase('pwsx3944:p3 r:HALF_EVEN (0 + decimal.pow(0.0524,0.5)) inexact rounded', 0.229, 0 + decimal.pow(0.0524,0.5));
						AddTestCase('pwsx3945:p3 r:HALF_EVEN (0 + decimal.pow(0.525,0.5)) inexact rounded', 0.725, 0 + decimal.pow(0.525,0.5));
						AddTestCase('pwsx3946:p3 r:HALF_EVEN (0 + decimal.pow(0.0525,0.5)) inexact rounded', 0.229, 0 + decimal.pow(0.0525,0.5));
						AddTestCase('pwsx3947:p3 r:HALF_EVEN (0 + decimal.pow(0.526,0.5)) inexact rounded', 0.725, 0 + decimal.pow(0.526,0.5));
						AddTestCase('pwsx3948:p3 r:HALF_EVEN (0 + decimal.pow(0.0526,0.5)) inexact rounded', 0.229, 0 + decimal.pow(0.0526,0.5));
						AddTestCase('pwsx3949:p3 r:HALF_EVEN (0 + decimal.pow(0.527,0.5)) inexact rounded', 0.726, 0 + decimal.pow(0.527,0.5));
						AddTestCase('pwsx3950:p3 r:HALF_EVEN (0 + decimal.pow(0.0527,0.5)) inexact rounded', 0.230, 0 + decimal.pow(0.0527,0.5));
						AddTestCase('pwsx3951:p3 r:HALF_EVEN (0 + decimal.pow(0.528,0.5)) inexact rounded', 0.727, 0 + decimal.pow(0.528,0.5));
						AddTestCase('pwsx3952:p3 r:HALF_EVEN (0 + decimal.pow(0.0528,0.5)) inexact rounded', 0.230, 0 + decimal.pow(0.0528,0.5));
						AddTestCase('pwsx3953:p3 r:HALF_EVEN (0 + decimal.pow(0.529,0.5)) inexact rounded', 0.727, 0 + decimal.pow(0.529,0.5));
						AddTestCase('pwsx3954:p3 r:HALF_EVEN (0 + decimal.pow(0.0529,0.5)) inexact rounded', 0.230, 0 + decimal.pow(0.0529,0.5));
						AddTestCase('pwsx3955:p3 r:HALF_EVEN (0 + decimal.pow(0.531,0.5)) inexact rounded', 0.729, 0 + decimal.pow(0.531,0.5));
						AddTestCase('pwsx3956:p3 r:HALF_EVEN (0 + decimal.pow(0.0531,0.5)) inexact rounded', 0.230, 0 + decimal.pow(0.0531,0.5));
						AddTestCase('pwsx3957:p3 r:HALF_EVEN (0 + decimal.pow(0.532,0.5)) inexact rounded', 0.729, 0 + decimal.pow(0.532,0.5));
						AddTestCase('pwsx3958:p3 r:HALF_EVEN (0 + decimal.pow(0.0532,0.5)) inexact rounded', 0.231, 0 + decimal.pow(0.0532,0.5));
						AddTestCase('pwsx3959:p3 r:HALF_EVEN (0 + decimal.pow(0.533,0.5)) inexact rounded', 0.730, 0 + decimal.pow(0.533,0.5));
						AddTestCase('pwsx3960:p3 r:HALF_EVEN (0 + decimal.pow(0.0533,0.5)) inexact rounded', 0.231, 0 + decimal.pow(0.0533,0.5));
						AddTestCase('pwsx3961:p3 r:HALF_EVEN (0 + decimal.pow(0.534,0.5)) inexact rounded', 0.731, 0 + decimal.pow(0.534,0.5));
						AddTestCase('pwsx3962:p3 r:HALF_EVEN (0 + decimal.pow(0.0534,0.5)) inexact rounded', 0.231, 0 + decimal.pow(0.0534,0.5));
						AddTestCase('pwsx3963:p3 r:HALF_EVEN (0 + decimal.pow(0.535,0.5)) inexact rounded', 0.731, 0 + decimal.pow(0.535,0.5));
						AddTestCase('pwsx3964:p3 r:HALF_EVEN (0 + decimal.pow(0.0535,0.5)) inexact rounded', 0.231, 0 + decimal.pow(0.0535,0.5));
						AddTestCase('pwsx3965:p3 r:HALF_EVEN (0 + decimal.pow(0.536,0.5)) inexact rounded', 0.732, 0 + decimal.pow(0.536,0.5));
						AddTestCase('pwsx3966:p3 r:HALF_EVEN (0 + decimal.pow(0.0536,0.5)) inexact rounded', 0.232, 0 + decimal.pow(0.0536,0.5));
						AddTestCase('pwsx3967:p3 r:HALF_EVEN (0 + decimal.pow(0.537,0.5)) inexact rounded', 0.733, 0 + decimal.pow(0.537,0.5));
						AddTestCase('pwsx3968:p3 r:HALF_EVEN (0 + decimal.pow(0.0537,0.5)) inexact rounded', 0.232, 0 + decimal.pow(0.0537,0.5));
						AddTestCase('pwsx3969:p3 r:HALF_EVEN (0 + decimal.pow(0.538,0.5)) inexact rounded', 0.733, 0 + decimal.pow(0.538,0.5));
						AddTestCase('pwsx3970:p3 r:HALF_EVEN (0 + decimal.pow(0.0538,0.5)) inexact rounded', 0.232, 0 + decimal.pow(0.0538,0.5));
						AddTestCase('pwsx3971:p3 r:HALF_EVEN (0 + decimal.pow(0.539,0.5)) inexact rounded', 0.734, 0 + decimal.pow(0.539,0.5));
						AddTestCase('pwsx3972:p3 r:HALF_EVEN (0 + decimal.pow(0.0539,0.5)) inexact rounded', 0.232, 0 + decimal.pow(0.0539,0.5));
						AddTestCase('pwsx3973:p3 r:HALF_EVEN (0 + decimal.pow(0.541,0.5)) inexact rounded', 0.736, 0 + decimal.pow(0.541,0.5));
						AddTestCase('pwsx3974:p3 r:HALF_EVEN (0 + decimal.pow(0.0541,0.5)) inexact rounded', 0.233, 0 + decimal.pow(0.0541,0.5));
						AddTestCase('pwsx3975:p3 r:HALF_EVEN (0 + decimal.pow(0.542,0.5)) inexact rounded', 0.736, 0 + decimal.pow(0.542,0.5));
						AddTestCase('pwsx3976:p3 r:HALF_EVEN (0 + decimal.pow(0.0542,0.5)) inexact rounded', 0.233, 0 + decimal.pow(0.0542,0.5));
						AddTestCase('pwsx3977:p3 r:HALF_EVEN (0 + decimal.pow(0.543,0.5)) inexact rounded', 0.737, 0 + decimal.pow(0.543,0.5));
						AddTestCase('pwsx3978:p3 r:HALF_EVEN (0 + decimal.pow(0.0543,0.5)) inexact rounded', 0.233, 0 + decimal.pow(0.0543,0.5));
						AddTestCase('pwsx3979:p3 r:HALF_EVEN (0 + decimal.pow(0.544,0.5)) inexact rounded', 0.738, 0 + decimal.pow(0.544,0.5));
						AddTestCase('pwsx3980:p3 r:HALF_EVEN (0 + decimal.pow(0.0544,0.5)) inexact rounded', 0.233, 0 + decimal.pow(0.0544,0.5));
						AddTestCase('pwsx3981:p3 r:HALF_EVEN (0 + decimal.pow(0.545,0.5)) inexact rounded', 0.738, 0 + decimal.pow(0.545,0.5));
						AddTestCase('pwsx3982:p3 r:HALF_EVEN (0 + decimal.pow(0.0545,0.5)) inexact rounded', 0.233, 0 + decimal.pow(0.0545,0.5));
						AddTestCase('pwsx3983:p3 r:HALF_EVEN (0 + decimal.pow(0.546,0.5)) inexact rounded', 0.739, 0 + decimal.pow(0.546,0.5));
						AddTestCase('pwsx3984:p3 r:HALF_EVEN (0 + decimal.pow(0.0546,0.5)) inexact rounded', 0.234, 0 + decimal.pow(0.0546,0.5));
						AddTestCase('pwsx3985:p3 r:HALF_EVEN (0 + decimal.pow(0.547,0.5)) inexact rounded', 0.740, 0 + decimal.pow(0.547,0.5));
						AddTestCase('pwsx3986:p3 r:HALF_EVEN (0 + decimal.pow(0.0547,0.5)) inexact rounded', 0.234, 0 + decimal.pow(0.0547,0.5));
						AddTestCase('pwsx3987:p3 r:HALF_EVEN (0 + decimal.pow(0.548,0.5)) inexact rounded', 0.740, 0 + decimal.pow(0.548,0.5));
						AddTestCase('pwsx3988:p3 r:HALF_EVEN (0 + decimal.pow(0.0548,0.5)) inexact rounded', 0.234, 0 + decimal.pow(0.0548,0.5));
						AddTestCase('pwsx3989:p3 r:HALF_EVEN (0 + decimal.pow(0.549,0.5)) inexact rounded', 0.741, 0 + decimal.pow(0.549,0.5));
						AddTestCase('pwsx3990:p3 r:HALF_EVEN (0 + decimal.pow(0.0549,0.5)) inexact rounded', 0.234, 0 + decimal.pow(0.0549,0.5));
						AddTestCase('pwsx3991:p3 r:HALF_EVEN (0 + decimal.pow(0.551,0.5)) inexact rounded', 0.742, 0 + decimal.pow(0.551,0.5));
						AddTestCase('pwsx3992:p3 r:HALF_EVEN (0 + decimal.pow(0.0551,0.5)) inexact rounded', 0.235, 0 + decimal.pow(0.0551,0.5));
						AddTestCase('pwsx3993:p3 r:HALF_EVEN (0 + decimal.pow(0.552,0.5)) inexact rounded', 0.743, 0 + decimal.pow(0.552,0.5));
						AddTestCase('pwsx3994:p3 r:HALF_EVEN (0 + decimal.pow(0.0552,0.5)) inexact rounded', 0.235, 0 + decimal.pow(0.0552,0.5));
						AddTestCase('pwsx3995:p3 r:HALF_EVEN (0 + decimal.pow(0.553,0.5)) inexact rounded', 0.744, 0 + decimal.pow(0.553,0.5));
						AddTestCase('pwsx3996:p3 r:HALF_EVEN (0 + decimal.pow(0.0553,0.5)) inexact rounded', 0.235, 0 + decimal.pow(0.0553,0.5));
						AddTestCase('pwsx3997:p3 r:HALF_EVEN (0 + decimal.pow(0.554,0.5)) inexact rounded', 0.744, 0 + decimal.pow(0.554,0.5));
						AddTestCase('pwsx3998:p3 r:HALF_EVEN (0 + decimal.pow(0.0554,0.5)) inexact rounded', 0.235, 0 + decimal.pow(0.0554,0.5));
						AddTestCase('pwsx3999:p3 r:HALF_EVEN (0 + decimal.pow(0.555,0.5)) inexact rounded', 0.745, 0 + decimal.pow(0.555,0.5));
						AddTestCase('pwsx4000:p3 r:HALF_EVEN (0 + decimal.pow(0.0555,0.5)) inexact rounded', 0.236, 0 + decimal.pow(0.0555,0.5));
						AddTestCase('pwsx4001:p3 r:HALF_EVEN (0 + decimal.pow(0.556,0.5)) inexact rounded', 0.746, 0 + decimal.pow(0.556,0.5));
						AddTestCase('pwsx4002:p3 r:HALF_EVEN (0 + decimal.pow(0.0556,0.5)) inexact rounded', 0.236, 0 + decimal.pow(0.0556,0.5));
						AddTestCase('pwsx4003:p3 r:HALF_EVEN (0 + decimal.pow(0.557,0.5)) inexact rounded', 0.746, 0 + decimal.pow(0.557,0.5));
						AddTestCase('pwsx4004:p3 r:HALF_EVEN (0 + decimal.pow(0.0557,0.5)) inexact rounded', 0.236, 0 + decimal.pow(0.0557,0.5));
						AddTestCase('pwsx4005:p3 r:HALF_EVEN (0 + decimal.pow(0.558,0.5)) inexact rounded', 0.747, 0 + decimal.pow(0.558,0.5));
						AddTestCase('pwsx4006:p3 r:HALF_EVEN (0 + decimal.pow(0.0558,0.5)) inexact rounded', 0.236, 0 + decimal.pow(0.0558,0.5));
						AddTestCase('pwsx4007:p3 r:HALF_EVEN (0 + decimal.pow(0.559,0.5)) inexact rounded', 0.748, 0 + decimal.pow(0.559,0.5));
						AddTestCase('pwsx4008:p3 r:HALF_EVEN (0 + decimal.pow(0.0559,0.5)) inexact rounded', 0.236, 0 + decimal.pow(0.0559,0.5));
						AddTestCase('pwsx4009:p3 r:HALF_EVEN (0 + decimal.pow(0.561,0.5)) inexact rounded', 0.749, 0 + decimal.pow(0.561,0.5));
						AddTestCase('pwsx4010:p3 r:HALF_EVEN (0 + decimal.pow(0.0561,0.5)) inexact rounded', 0.237, 0 + decimal.pow(0.0561,0.5));
						AddTestCase('pwsx4011:p3 r:HALF_EVEN (0 + decimal.pow(0.562,0.5)) inexact rounded', 0.750, 0 + decimal.pow(0.562,0.5));
						AddTestCase('pwsx4012:p3 r:HALF_EVEN (0 + decimal.pow(0.0562,0.5)) inexact rounded', 0.237, 0 + decimal.pow(0.0562,0.5));
						AddTestCase('pwsx4013:p3 r:HALF_EVEN (0 + decimal.pow(0.563,0.5)) inexact rounded', 0.750, 0 + decimal.pow(0.563,0.5));
						AddTestCase('pwsx4014:p3 r:HALF_EVEN (0 + decimal.pow(0.0563,0.5)) inexact rounded', 0.237, 0 + decimal.pow(0.0563,0.5));
						AddTestCase('pwsx4015:p3 r:HALF_EVEN (0 + decimal.pow(0.564,0.5)) inexact rounded', 0.751, 0 + decimal.pow(0.564,0.5));
						AddTestCase('pwsx4016:p3 r:HALF_EVEN (0 + decimal.pow(0.0564,0.5)) inexact rounded', 0.237, 0 + decimal.pow(0.0564,0.5));
						AddTestCase('pwsx4017:p3 r:HALF_EVEN (0 + decimal.pow(0.565,0.5)) inexact rounded', 0.752, 0 + decimal.pow(0.565,0.5));
						AddTestCase('pwsx4018:p3 r:HALF_EVEN (0 + decimal.pow(0.0565,0.5)) inexact rounded', 0.238, 0 + decimal.pow(0.0565,0.5));
						AddTestCase('pwsx4019:p3 r:HALF_EVEN (0 + decimal.pow(0.566,0.5)) inexact rounded', 0.752, 0 + decimal.pow(0.566,0.5));
						AddTestCase('pwsx4020:p3 r:HALF_EVEN (0 + decimal.pow(0.0566,0.5)) inexact rounded', 0.238, 0 + decimal.pow(0.0566,0.5));
						AddTestCase('pwsx4021:p3 r:HALF_EVEN (0 + decimal.pow(0.567,0.5)) inexact rounded', 0.753, 0 + decimal.pow(0.567,0.5));
						AddTestCase('pwsx4022:p3 r:HALF_EVEN (0 + decimal.pow(0.0567,0.5)) inexact rounded', 0.238, 0 + decimal.pow(0.0567,0.5));
						AddTestCase('pwsx4023:p3 r:HALF_EVEN (0 + decimal.pow(0.568,0.5)) inexact rounded', 0.754, 0 + decimal.pow(0.568,0.5));
						AddTestCase('pwsx4024:p3 r:HALF_EVEN (0 + decimal.pow(0.0568,0.5)) inexact rounded', 0.238, 0 + decimal.pow(0.0568,0.5));
						AddTestCase('pwsx4025:p3 r:HALF_EVEN (0 + decimal.pow(0.569,0.5)) inexact rounded', 0.754, 0 + decimal.pow(0.569,0.5));
						AddTestCase('pwsx4026:p3 r:HALF_EVEN (0 + decimal.pow(0.0569,0.5)) inexact rounded', 0.239, 0 + decimal.pow(0.0569,0.5));
						AddTestCase('pwsx4027:p3 r:HALF_EVEN (0 + decimal.pow(0.571,0.5)) inexact rounded', 0.756, 0 + decimal.pow(0.571,0.5));
						AddTestCase('pwsx4028:p3 r:HALF_EVEN (0 + decimal.pow(0.0571,0.5)) inexact rounded', 0.239, 0 + decimal.pow(0.0571,0.5));
						AddTestCase('pwsx4029:p3 r:HALF_EVEN (0 + decimal.pow(0.572,0.5)) inexact rounded', 0.756, 0 + decimal.pow(0.572,0.5));
						AddTestCase('pwsx4030:p3 r:HALF_EVEN (0 + decimal.pow(0.0572,0.5)) inexact rounded', 0.239, 0 + decimal.pow(0.0572,0.5));
						AddTestCase('pwsx4031:p3 r:HALF_EVEN (0 + decimal.pow(0.573,0.5)) inexact rounded', 0.757, 0 + decimal.pow(0.573,0.5));
						AddTestCase('pwsx4032:p3 r:HALF_EVEN (0 + decimal.pow(0.0573,0.5)) inexact rounded', 0.239, 0 + decimal.pow(0.0573,0.5));
						AddTestCase('pwsx4033:p3 r:HALF_EVEN (0 + decimal.pow(0.574,0.5)) inexact rounded', 0.758, 0 + decimal.pow(0.574,0.5));
						AddTestCase('pwsx4034:p3 r:HALF_EVEN (0 + decimal.pow(0.0574,0.5)) inexact rounded', 0.240, 0 + decimal.pow(0.0574,0.5));
						AddTestCase('pwsx4035:p3 r:HALF_EVEN (0 + decimal.pow(0.575,0.5)) inexact rounded', 0.758, 0 + decimal.pow(0.575,0.5));
						AddTestCase('pwsx4036:p3 r:HALF_EVEN (0 + decimal.pow(0.0575,0.5)) inexact rounded', 0.240, 0 + decimal.pow(0.0575,0.5));
						AddTestCase('pwsx4037:p3 r:HALF_EVEN (0 + decimal.pow(0.576,0.5)) inexact rounded', 0.759, 0 + decimal.pow(0.576,0.5));
						AddTestCase('pwsx4038:p3 r:HALF_EVEN (0 + decimal.pow(0.0576,0.5)) inexact rounded', 0.240, 0 + decimal.pow(0.0576,0.5));
						AddTestCase('pwsx4039:p3 r:HALF_EVEN (0 + decimal.pow(0.577,0.5)) inexact rounded', 0.760, 0 + decimal.pow(0.577,0.5));
						AddTestCase('pwsx4040:p3 r:HALF_EVEN (0 + decimal.pow(0.0577,0.5)) inexact rounded', 0.240, 0 + decimal.pow(0.0577,0.5));
						AddTestCase('pwsx4041:p3 r:HALF_EVEN (0 + decimal.pow(0.578,0.5)) inexact rounded', 0.760, 0 + decimal.pow(0.578,0.5));
						AddTestCase('pwsx4042:p3 r:HALF_EVEN (0 + decimal.pow(0.0578,0.5)) inexact rounded', 0.240, 0 + decimal.pow(0.0578,0.5));
						AddTestCase('pwsx4043:p3 r:HALF_EVEN (0 + decimal.pow(0.579,0.5)) inexact rounded', 0.761, 0 + decimal.pow(0.579,0.5));
						AddTestCase('pwsx4044:p3 r:HALF_EVEN (0 + decimal.pow(0.0579,0.5)) inexact rounded', 0.241, 0 + decimal.pow(0.0579,0.5));
						AddTestCase('pwsx4045:p3 r:HALF_EVEN (0 + decimal.pow(0.581,0.5)) inexact rounded', 0.762, 0 + decimal.pow(0.581,0.5));
						AddTestCase('pwsx4046:p3 r:HALF_EVEN (0 + decimal.pow(0.0581,0.5)) inexact rounded', 0.241, 0 + decimal.pow(0.0581,0.5));
						AddTestCase('pwsx4047:p3 r:HALF_EVEN (0 + decimal.pow(0.582,0.5)) inexact rounded', 0.763, 0 + decimal.pow(0.582,0.5));
						AddTestCase('pwsx4048:p3 r:HALF_EVEN (0 + decimal.pow(0.0582,0.5)) inexact rounded', 0.241, 0 + decimal.pow(0.0582,0.5));
						AddTestCase('pwsx4049:p3 r:HALF_EVEN (0 + decimal.pow(0.583,0.5)) inexact rounded', 0.764, 0 + decimal.pow(0.583,0.5));
						AddTestCase('pwsx4050:p3 r:HALF_EVEN (0 + decimal.pow(0.0583,0.5)) inexact rounded', 0.241, 0 + decimal.pow(0.0583,0.5));
						AddTestCase('pwsx4051:p3 r:HALF_EVEN (0 + decimal.pow(0.584,0.5)) inexact rounded', 0.764, 0 + decimal.pow(0.584,0.5));
						AddTestCase('pwsx4052:p3 r:HALF_EVEN (0 + decimal.pow(0.0584,0.5)) inexact rounded', 0.242, 0 + decimal.pow(0.0584,0.5));
						AddTestCase('pwsx4053:p3 r:HALF_EVEN (0 + decimal.pow(0.585,0.5)) inexact rounded', 0.765, 0 + decimal.pow(0.585,0.5));
						AddTestCase('pwsx4054:p3 r:HALF_EVEN (0 + decimal.pow(0.0585,0.5)) inexact rounded', 0.242, 0 + decimal.pow(0.0585,0.5));
						AddTestCase('pwsx4055:p3 r:HALF_EVEN (0 + decimal.pow(0.586,0.5)) inexact rounded', 0.766, 0 + decimal.pow(0.586,0.5));
						AddTestCase('pwsx4056:p3 r:HALF_EVEN (0 + decimal.pow(0.0586,0.5)) inexact rounded', 0.242, 0 + decimal.pow(0.0586,0.5));
						AddTestCase('pwsx4057:p3 r:HALF_EVEN (0 + decimal.pow(0.587,0.5)) inexact rounded', 0.766, 0 + decimal.pow(0.587,0.5));
						AddTestCase('pwsx4058:p3 r:HALF_EVEN (0 + decimal.pow(0.0587,0.5)) inexact rounded', 0.242, 0 + decimal.pow(0.0587,0.5));
						AddTestCase('pwsx4059:p3 r:HALF_EVEN (0 + decimal.pow(0.588,0.5)) inexact rounded', 0.767, 0 + decimal.pow(0.588,0.5));
						AddTestCase('pwsx4060:p3 r:HALF_EVEN (0 + decimal.pow(0.0588,0.5)) inexact rounded', 0.242, 0 + decimal.pow(0.0588,0.5));
						AddTestCase('pwsx4061:p3 r:HALF_EVEN (0 + decimal.pow(0.589,0.5)) inexact rounded', 0.767, 0 + decimal.pow(0.589,0.5));
						AddTestCase('pwsx4062:p3 r:HALF_EVEN (0 + decimal.pow(0.0589,0.5)) inexact rounded', 0.243, 0 + decimal.pow(0.0589,0.5));
						AddTestCase('pwsx4063:p3 r:HALF_EVEN (0 + decimal.pow(0.591,0.5)) inexact rounded', 0.769, 0 + decimal.pow(0.591,0.5));
						AddTestCase('pwsx4064:p3 r:HALF_EVEN (0 + decimal.pow(0.0591,0.5)) inexact rounded', 0.243, 0 + decimal.pow(0.0591,0.5));
						AddTestCase('pwsx4065:p3 r:HALF_EVEN (0 + decimal.pow(0.592,0.5)) inexact rounded', 0.769, 0 + decimal.pow(0.592,0.5));
						AddTestCase('pwsx4066:p3 r:HALF_EVEN (0 + decimal.pow(0.0592,0.5)) inexact rounded', 0.243, 0 + decimal.pow(0.0592,0.5));
						AddTestCase('pwsx4067:p3 r:HALF_EVEN (0 + decimal.pow(0.593,0.5)) inexact rounded', 0.770, 0 + decimal.pow(0.593,0.5));
						AddTestCase('pwsx4068:p3 r:HALF_EVEN (0 + decimal.pow(0.0593,0.5)) inexact rounded', 0.244, 0 + decimal.pow(0.0593,0.5));
						AddTestCase('pwsx4069:p3 r:HALF_EVEN (0 + decimal.pow(0.594,0.5)) inexact rounded', 0.771, 0 + decimal.pow(0.594,0.5));
						AddTestCase('pwsx4070:p3 r:HALF_EVEN (0 + decimal.pow(0.0594,0.5)) inexact rounded', 0.244, 0 + decimal.pow(0.0594,0.5));
						AddTestCase('pwsx4071:p3 r:HALF_EVEN (0 + decimal.pow(0.595,0.5)) inexact rounded', 0.771, 0 + decimal.pow(0.595,0.5));
						AddTestCase('pwsx4072:p3 r:HALF_EVEN (0 + decimal.pow(0.0595,0.5)) inexact rounded', 0.244, 0 + decimal.pow(0.0595,0.5));
						AddTestCase('pwsx4073:p3 r:HALF_EVEN (0 + decimal.pow(0.596,0.5)) inexact rounded', 0.772, 0 + decimal.pow(0.596,0.5));
						AddTestCase('pwsx4074:p3 r:HALF_EVEN (0 + decimal.pow(0.0596,0.5)) inexact rounded', 0.244, 0 + decimal.pow(0.0596,0.5));
						AddTestCase('pwsx4075:p3 r:HALF_EVEN (0 + decimal.pow(0.597,0.5)) inexact rounded', 0.773, 0 + decimal.pow(0.597,0.5));
						AddTestCase('pwsx4076:p3 r:HALF_EVEN (0 + decimal.pow(0.0597,0.5)) inexact rounded', 0.244, 0 + decimal.pow(0.0597,0.5));
						AddTestCase('pwsx4077:p3 r:HALF_EVEN (0 + decimal.pow(0.598,0.5)) inexact rounded', 0.773, 0 + decimal.pow(0.598,0.5));
						AddTestCase('pwsx4078:p3 r:HALF_EVEN (0 + decimal.pow(0.0598,0.5)) inexact rounded', 0.245, 0 + decimal.pow(0.0598,0.5));
						AddTestCase('pwsx4079:p3 r:HALF_EVEN (0 + decimal.pow(0.599,0.5)) inexact rounded', 0.774, 0 + decimal.pow(0.599,0.5));
						AddTestCase('pwsx4080:p3 r:HALF_EVEN (0 + decimal.pow(0.0599,0.5)) inexact rounded', 0.245, 0 + decimal.pow(0.0599,0.5));
						AddTestCase('pwsx4081:p3 r:HALF_EVEN (0 + decimal.pow(0.601,0.5)) inexact rounded', 0.775, 0 + decimal.pow(0.601,0.5));
						AddTestCase('pwsx4082:p3 r:HALF_EVEN (0 + decimal.pow(0.0601,0.5)) inexact rounded', 0.245, 0 + decimal.pow(0.0601,0.5));
						AddTestCase('pwsx4083:p3 r:HALF_EVEN (0 + decimal.pow(0.602,0.5)) inexact rounded', 0.776, 0 + decimal.pow(0.602,0.5));
						AddTestCase('pwsx4084:p3 r:HALF_EVEN (0 + decimal.pow(0.0602,0.5)) inexact rounded', 0.245, 0 + decimal.pow(0.0602,0.5));
						AddTestCase('pwsx4085:p3 r:HALF_EVEN (0 + decimal.pow(0.603,0.5)) inexact rounded', 0.777, 0 + decimal.pow(0.603,0.5));
						AddTestCase('pwsx4086:p3 r:HALF_EVEN (0 + decimal.pow(0.0603,0.5)) inexact rounded', 0.246, 0 + decimal.pow(0.0603,0.5));
						AddTestCase('pwsx4087:p3 r:HALF_EVEN (0 + decimal.pow(0.604,0.5)) inexact rounded', 0.777, 0 + decimal.pow(0.604,0.5));
						AddTestCase('pwsx4088:p3 r:HALF_EVEN (0 + decimal.pow(0.0604,0.5)) inexact rounded', 0.246, 0 + decimal.pow(0.0604,0.5));
						AddTestCase('pwsx4089:p3 r:HALF_EVEN (0 + decimal.pow(0.605,0.5)) inexact rounded', 0.778, 0 + decimal.pow(0.605,0.5));
						AddTestCase('pwsx4090:p3 r:HALF_EVEN (0 + decimal.pow(0.0605,0.5)) inexact rounded', 0.246, 0 + decimal.pow(0.0605,0.5));
						AddTestCase('pwsx4091:p3 r:HALF_EVEN (0 + decimal.pow(0.606,0.5)) inexact rounded', 0.778, 0 + decimal.pow(0.606,0.5));
						AddTestCase('pwsx4092:p3 r:HALF_EVEN (0 + decimal.pow(0.0606,0.5)) inexact rounded', 0.246, 0 + decimal.pow(0.0606,0.5));
						AddTestCase('pwsx4093:p3 r:HALF_EVEN (0 + decimal.pow(0.607,0.5)) inexact rounded', 0.779, 0 + decimal.pow(0.607,0.5));
						AddTestCase('pwsx4094:p3 r:HALF_EVEN (0 + decimal.pow(0.0607,0.5)) inexact rounded', 0.246, 0 + decimal.pow(0.0607,0.5));
						AddTestCase('pwsx4095:p3 r:HALF_EVEN (0 + decimal.pow(0.608,0.5)) inexact rounded', 0.780, 0 + decimal.pow(0.608,0.5));
						AddTestCase('pwsx4096:p3 r:HALF_EVEN (0 + decimal.pow(0.0608,0.5)) inexact rounded', 0.247, 0 + decimal.pow(0.0608,0.5));
						AddTestCase('pwsx4097:p3 r:HALF_EVEN (0 + decimal.pow(0.609,0.5)) inexact rounded', 0.780, 0 + decimal.pow(0.609,0.5));
						AddTestCase('pwsx4098:p3 r:HALF_EVEN (0 + decimal.pow(0.0609,0.5)) inexact rounded', 0.247, 0 + decimal.pow(0.0609,0.5));
						AddTestCase('pwsx4099:p3 r:HALF_EVEN (0 + decimal.pow(0.611,0.5)) inexact rounded', 0.782, 0 + decimal.pow(0.611,0.5));
						AddTestCase('pwsx4100:p3 r:HALF_EVEN (0 + decimal.pow(0.0611,0.5)) inexact rounded', 0.247, 0 + decimal.pow(0.0611,0.5));
						AddTestCase('pwsx4101:p3 r:HALF_EVEN (0 + decimal.pow(0.612,0.5)) inexact rounded', 0.782, 0 + decimal.pow(0.612,0.5));
						AddTestCase('pwsx4102:p3 r:HALF_EVEN (0 + decimal.pow(0.0612,0.5)) inexact rounded', 0.247, 0 + decimal.pow(0.0612,0.5));
						AddTestCase('pwsx4103:p3 r:HALF_EVEN (0 + decimal.pow(0.613,0.5)) inexact rounded', 0.783, 0 + decimal.pow(0.613,0.5));
						AddTestCase('pwsx4104:p3 r:HALF_EVEN (0 + decimal.pow(0.0613,0.5)) inexact rounded', 0.248, 0 + decimal.pow(0.0613,0.5));
						AddTestCase('pwsx4105:p3 r:HALF_EVEN (0 + decimal.pow(0.614,0.5)) inexact rounded', 0.784, 0 + decimal.pow(0.614,0.5));
						AddTestCase('pwsx4106:p3 r:HALF_EVEN (0 + decimal.pow(0.0614,0.5)) inexact rounded', 0.248, 0 + decimal.pow(0.0614,0.5));
						AddTestCase('pwsx4107:p3 r:HALF_EVEN (0 + decimal.pow(0.615,0.5)) inexact rounded', 0.784, 0 + decimal.pow(0.615,0.5));
						AddTestCase('pwsx4108:p3 r:HALF_EVEN (0 + decimal.pow(0.0615,0.5)) inexact rounded', 0.248, 0 + decimal.pow(0.0615,0.5));
						AddTestCase('pwsx4109:p3 r:HALF_EVEN (0 + decimal.pow(0.616,0.5)) inexact rounded', 0.785, 0 + decimal.pow(0.616,0.5));
						AddTestCase('pwsx4110:p3 r:HALF_EVEN (0 + decimal.pow(0.0616,0.5)) inexact rounded', 0.248, 0 + decimal.pow(0.0616,0.5));
						AddTestCase('pwsx4111:p3 r:HALF_EVEN (0 + decimal.pow(0.617,0.5)) inexact rounded', 0.785, 0 + decimal.pow(0.617,0.5));
						AddTestCase('pwsx4112:p3 r:HALF_EVEN (0 + decimal.pow(0.0617,0.5)) inexact rounded', 0.248, 0 + decimal.pow(0.0617,0.5));
						AddTestCase('pwsx4113:p3 r:HALF_EVEN (0 + decimal.pow(0.618,0.5)) inexact rounded', 0.786, 0 + decimal.pow(0.618,0.5));
						AddTestCase('pwsx4114:p3 r:HALF_EVEN (0 + decimal.pow(0.0618,0.5)) inexact rounded', 0.249, 0 + decimal.pow(0.0618,0.5));
						AddTestCase('pwsx4115:p3 r:HALF_EVEN (0 + decimal.pow(0.619,0.5)) inexact rounded', 0.787, 0 + decimal.pow(0.619,0.5));
						AddTestCase('pwsx4116:p3 r:HALF_EVEN (0 + decimal.pow(0.0619,0.5)) inexact rounded', 0.249, 0 + decimal.pow(0.0619,0.5));
						AddTestCase('pwsx4117:p3 r:HALF_EVEN (0 + decimal.pow(0.621,0.5)) inexact rounded', 0.788, 0 + decimal.pow(0.621,0.5));
						AddTestCase('pwsx4118:p3 r:HALF_EVEN (0 + decimal.pow(0.0621,0.5)) inexact rounded', 0.249, 0 + decimal.pow(0.0621,0.5));
						AddTestCase('pwsx4119:p3 r:HALF_EVEN (0 + decimal.pow(0.622,0.5)) inexact rounded', 0.789, 0 + decimal.pow(0.622,0.5));
						AddTestCase('pwsx4120:p3 r:HALF_EVEN (0 + decimal.pow(0.0622,0.5)) inexact rounded', 0.249, 0 + decimal.pow(0.0622,0.5));
						AddTestCase('pwsx4121:p3 r:HALF_EVEN (0 + decimal.pow(0.623,0.5)) inexact rounded', 0.789, 0 + decimal.pow(0.623,0.5));
						AddTestCase('pwsx4122:p3 r:HALF_EVEN (0 + decimal.pow(0.0623,0.5)) inexact rounded', 0.250, 0 + decimal.pow(0.0623,0.5));
						AddTestCase('pwsx4123:p3 r:HALF_EVEN (0 + decimal.pow(0.624,0.5)) inexact rounded', 0.790, 0 + decimal.pow(0.624,0.5));
						AddTestCase('pwsx4124:p3 r:HALF_EVEN (0 + decimal.pow(0.0624,0.5)) inexact rounded', 0.250, 0 + decimal.pow(0.0624,0.5));
						AddTestCase('pwsx4125:p3 r:HALF_EVEN (0 + decimal.pow(0.625,0.5)) inexact rounded', 0.791, 0 + decimal.pow(0.625,0.5));
						AddTestCase('pwsx4126:p3 r:HALF_EVEN (0 + decimal.pow(0.0625,0.5)) inexact rounded', 0.250, 0 + decimal.pow(0.0625,0.5));
						AddTestCase('pwsx4127:p3 r:HALF_EVEN (0 + decimal.pow(0.626,0.5)) inexact rounded', 0.791, 0 + decimal.pow(0.626,0.5));
						AddTestCase('pwsx4128:p3 r:HALF_EVEN (0 + decimal.pow(0.0626,0.5)) inexact rounded', 0.250, 0 + decimal.pow(0.0626,0.5));
						AddTestCase('pwsx4129:p3 r:HALF_EVEN (0 + decimal.pow(0.627,0.5)) inexact rounded', 0.792, 0 + decimal.pow(0.627,0.5));
						AddTestCase('pwsx4130:p3 r:HALF_EVEN (0 + decimal.pow(0.0627,0.5)) inexact rounded', 0.250, 0 + decimal.pow(0.0627,0.5));
						AddTestCase('pwsx4131:p3 r:HALF_EVEN (0 + decimal.pow(0.628,0.5)) inexact rounded', 0.792, 0 + decimal.pow(0.628,0.5));
						AddTestCase('pwsx4132:p3 r:HALF_EVEN (0 + decimal.pow(0.0628,0.5)) inexact rounded', 0.251, 0 + decimal.pow(0.0628,0.5));
						AddTestCase('pwsx4133:p3 r:HALF_EVEN (0 + decimal.pow(0.629,0.5)) inexact rounded', 0.793, 0 + decimal.pow(0.629,0.5));
						AddTestCase('pwsx4134:p3 r:HALF_EVEN (0 + decimal.pow(0.0629,0.5)) inexact rounded', 0.251, 0 + decimal.pow(0.0629,0.5));
						AddTestCase('pwsx4135:p3 r:HALF_EVEN (0 + decimal.pow(0.631,0.5)) inexact rounded', 0.794, 0 + decimal.pow(0.631,0.5));
						AddTestCase('pwsx4136:p3 r:HALF_EVEN (0 + decimal.pow(0.0631,0.5)) inexact rounded', 0.251, 0 + decimal.pow(0.0631,0.5));
						AddTestCase('pwsx4137:p3 r:HALF_EVEN (0 + decimal.pow(0.632,0.5)) inexact rounded', 0.795, 0 + decimal.pow(0.632,0.5));
						AddTestCase('pwsx4138:p3 r:HALF_EVEN (0 + decimal.pow(0.0632,0.5)) inexact rounded', 0.251, 0 + decimal.pow(0.0632,0.5));
						AddTestCase('pwsx4139:p3 r:HALF_EVEN (0 + decimal.pow(0.633,0.5)) inexact rounded', 0.796, 0 + decimal.pow(0.633,0.5));
						AddTestCase('pwsx4140:p3 r:HALF_EVEN (0 + decimal.pow(0.0633,0.5)) inexact rounded', 0.252, 0 + decimal.pow(0.0633,0.5));
						AddTestCase('pwsx4141:p3 r:HALF_EVEN (0 + decimal.pow(0.634,0.5)) inexact rounded', 0.796, 0 + decimal.pow(0.634,0.5));
						AddTestCase('pwsx4142:p3 r:HALF_EVEN (0 + decimal.pow(0.0634,0.5)) inexact rounded', 0.252, 0 + decimal.pow(0.0634,0.5));
						AddTestCase('pwsx4143:p3 r:HALF_EVEN (0 + decimal.pow(0.635,0.5)) inexact rounded', 0.797, 0 + decimal.pow(0.635,0.5));
						AddTestCase('pwsx4144:p3 r:HALF_EVEN (0 + decimal.pow(0.0635,0.5)) inexact rounded', 0.252, 0 + decimal.pow(0.0635,0.5));
						AddTestCase('pwsx4145:p3 r:HALF_EVEN (0 + decimal.pow(0.636,0.5)) inexact rounded', 0.797, 0 + decimal.pow(0.636,0.5));
						AddTestCase('pwsx4146:p3 r:HALF_EVEN (0 + decimal.pow(0.0636,0.5)) inexact rounded', 0.252, 0 + decimal.pow(0.0636,0.5));
						AddTestCase('pwsx4147:p3 r:HALF_EVEN (0 + decimal.pow(0.637,0.5)) inexact rounded', 0.798, 0 + decimal.pow(0.637,0.5));
						AddTestCase('pwsx4148:p3 r:HALF_EVEN (0 + decimal.pow(0.0637,0.5)) inexact rounded', 0.252, 0 + decimal.pow(0.0637,0.5));
						AddTestCase('pwsx4149:p3 r:HALF_EVEN (0 + decimal.pow(0.638,0.5)) inexact rounded', 0.799, 0 + decimal.pow(0.638,0.5));
						AddTestCase('pwsx4150:p3 r:HALF_EVEN (0 + decimal.pow(0.0638,0.5)) inexact rounded', 0.253, 0 + decimal.pow(0.0638,0.5));
						AddTestCase('pwsx4151:p3 r:HALF_EVEN (0 + decimal.pow(0.639,0.5)) inexact rounded', 0.799, 0 + decimal.pow(0.639,0.5));
						AddTestCase('pwsx4152:p3 r:HALF_EVEN (0 + decimal.pow(0.0639,0.5)) inexact rounded', 0.253, 0 + decimal.pow(0.0639,0.5));
						AddTestCase('pwsx4153:p3 r:HALF_EVEN (0 + decimal.pow(0.641,0.5)) inexact rounded', 0.801, 0 + decimal.pow(0.641,0.5));
						AddTestCase('pwsx4154:p3 r:HALF_EVEN (0 + decimal.pow(0.0641,0.5)) inexact rounded', 0.253, 0 + decimal.pow(0.0641,0.5));
						AddTestCase('pwsx4155:p3 r:HALF_EVEN (0 + decimal.pow(0.642,0.5)) inexact rounded', 0.801, 0 + decimal.pow(0.642,0.5));
						AddTestCase('pwsx4156:p3 r:HALF_EVEN (0 + decimal.pow(0.0642,0.5)) inexact rounded', 0.253, 0 + decimal.pow(0.0642,0.5));
						AddTestCase('pwsx4157:p3 r:HALF_EVEN (0 + decimal.pow(0.643,0.5)) inexact rounded', 0.802, 0 + decimal.pow(0.643,0.5));
						AddTestCase('pwsx4158:p3 r:HALF_EVEN (0 + decimal.pow(0.0643,0.5)) inexact rounded', 0.254, 0 + decimal.pow(0.0643,0.5));
						AddTestCase('pwsx4159:p3 r:HALF_EVEN (0 + decimal.pow(0.644,0.5)) inexact rounded', 0.802, 0 + decimal.pow(0.644,0.5));
						AddTestCase('pwsx4160:p3 r:HALF_EVEN (0 + decimal.pow(0.0644,0.5)) inexact rounded', 0.254, 0 + decimal.pow(0.0644,0.5));
						AddTestCase('pwsx4161:p3 r:HALF_EVEN (0 + decimal.pow(0.645,0.5)) inexact rounded', 0.803, 0 + decimal.pow(0.645,0.5));
						AddTestCase('pwsx4162:p3 r:HALF_EVEN (0 + decimal.pow(0.0645,0.5)) inexact rounded', 0.254, 0 + decimal.pow(0.0645,0.5));
						AddTestCase('pwsx4163:p3 r:HALF_EVEN (0 + decimal.pow(0.646,0.5)) inexact rounded', 0.804, 0 + decimal.pow(0.646,0.5));
						AddTestCase('pwsx4164:p3 r:HALF_EVEN (0 + decimal.pow(0.0646,0.5)) inexact rounded', 0.254, 0 + decimal.pow(0.0646,0.5));
						AddTestCase('pwsx4165:p3 r:HALF_EVEN (0 + decimal.pow(0.647,0.5)) inexact rounded', 0.804, 0 + decimal.pow(0.647,0.5));
						AddTestCase('pwsx4166:p3 r:HALF_EVEN (0 + decimal.pow(0.0647,0.5)) inexact rounded', 0.254, 0 + decimal.pow(0.0647,0.5));
						AddTestCase('pwsx4167:p3 r:HALF_EVEN (0 + decimal.pow(0.648,0.5)) inexact rounded', 0.805, 0 + decimal.pow(0.648,0.5));
						AddTestCase('pwsx4168:p3 r:HALF_EVEN (0 + decimal.pow(0.0648,0.5)) inexact rounded', 0.255, 0 + decimal.pow(0.0648,0.5));
						AddTestCase('pwsx4169:p3 r:HALF_EVEN (0 + decimal.pow(0.649,0.5)) inexact rounded', 0.806, 0 + decimal.pow(0.649,0.5));
						AddTestCase('pwsx4170:p3 r:HALF_EVEN (0 + decimal.pow(0.0649,0.5)) inexact rounded', 0.255, 0 + decimal.pow(0.0649,0.5));
						AddTestCase('pwsx4171:p3 r:HALF_EVEN (0 + decimal.pow(0.651,0.5)) inexact rounded', 0.807, 0 + decimal.pow(0.651,0.5));
						AddTestCase('pwsx4172:p3 r:HALF_EVEN (0 + decimal.pow(0.0651,0.5)) inexact rounded', 0.255, 0 + decimal.pow(0.0651,0.5));
						AddTestCase('pwsx4173:p3 r:HALF_EVEN (0 + decimal.pow(0.652,0.5)) inexact rounded', 0.807, 0 + decimal.pow(0.652,0.5));
						AddTestCase('pwsx4174:p3 r:HALF_EVEN (0 + decimal.pow(0.0652,0.5)) inexact rounded', 0.255, 0 + decimal.pow(0.0652,0.5));
						AddTestCase('pwsx4175:p3 r:HALF_EVEN (0 + decimal.pow(0.653,0.5)) inexact rounded', 0.808, 0 + decimal.pow(0.653,0.5));
						AddTestCase('pwsx4176:p3 r:HALF_EVEN (0 + decimal.pow(0.0653,0.5)) inexact rounded', 0.256, 0 + decimal.pow(0.0653,0.5));
						AddTestCase('pwsx4177:p3 r:HALF_EVEN (0 + decimal.pow(0.654,0.5)) inexact rounded', 0.809, 0 + decimal.pow(0.654,0.5));
						AddTestCase('pwsx4178:p3 r:HALF_EVEN (0 + decimal.pow(0.0654,0.5)) inexact rounded', 0.256, 0 + decimal.pow(0.0654,0.5));
						AddTestCase('pwsx4179:p3 r:HALF_EVEN (0 + decimal.pow(0.655,0.5)) inexact rounded', 0.809, 0 + decimal.pow(0.655,0.5));
						AddTestCase('pwsx4180:p3 r:HALF_EVEN (0 + decimal.pow(0.0655,0.5)) inexact rounded', 0.256, 0 + decimal.pow(0.0655,0.5));
						AddTestCase('pwsx4181:p3 r:HALF_EVEN (0 + decimal.pow(0.656,0.5)) inexact rounded', 0.810, 0 + decimal.pow(0.656,0.5));
						AddTestCase('pwsx4182:p3 r:HALF_EVEN (0 + decimal.pow(0.0656,0.5)) inexact rounded', 0.256, 0 + decimal.pow(0.0656,0.5));
						AddTestCase('pwsx4183:p3 r:HALF_EVEN (0 + decimal.pow(0.657,0.5)) inexact rounded', 0.811, 0 + decimal.pow(0.657,0.5));
						AddTestCase('pwsx4184:p3 r:HALF_EVEN (0 + decimal.pow(0.0657,0.5)) inexact rounded', 0.256, 0 + decimal.pow(0.0657,0.5));
						AddTestCase('pwsx4185:p3 r:HALF_EVEN (0 + decimal.pow(0.658,0.5)) inexact rounded', 0.811, 0 + decimal.pow(0.658,0.5));
						AddTestCase('pwsx4186:p3 r:HALF_EVEN (0 + decimal.pow(0.0658,0.5)) inexact rounded', 0.257, 0 + decimal.pow(0.0658,0.5));
						AddTestCase('pwsx4187:p3 r:HALF_EVEN (0 + decimal.pow(0.659,0.5)) inexact rounded', 0.812, 0 + decimal.pow(0.659,0.5));
						AddTestCase('pwsx4188:p3 r:HALF_EVEN (0 + decimal.pow(0.0659,0.5)) inexact rounded', 0.257, 0 + decimal.pow(0.0659,0.5));
						AddTestCase('pwsx4189:p3 r:HALF_EVEN (0 + decimal.pow(0.661,0.5)) inexact rounded', 0.813, 0 + decimal.pow(0.661,0.5));
						AddTestCase('pwsx4190:p3 r:HALF_EVEN (0 + decimal.pow(0.0661,0.5)) inexact rounded', 0.257, 0 + decimal.pow(0.0661,0.5));
						AddTestCase('pwsx4191:p3 r:HALF_EVEN (0 + decimal.pow(0.662,0.5)) inexact rounded', 0.814, 0 + decimal.pow(0.662,0.5));
						AddTestCase('pwsx4192:p3 r:HALF_EVEN (0 + decimal.pow(0.0662,0.5)) inexact rounded', 0.257, 0 + decimal.pow(0.0662,0.5));
						AddTestCase('pwsx4193:p3 r:HALF_EVEN (0 + decimal.pow(0.663,0.5)) inexact rounded', 0.814, 0 + decimal.pow(0.663,0.5));
						AddTestCase('pwsx4194:p3 r:HALF_EVEN (0 + decimal.pow(0.0663,0.5)) inexact rounded', 0.257, 0 + decimal.pow(0.0663,0.5));
						AddTestCase('pwsx4195:p3 r:HALF_EVEN (0 + decimal.pow(0.664,0.5)) inexact rounded', 0.815, 0 + decimal.pow(0.664,0.5));
						AddTestCase('pwsx4196:p3 r:HALF_EVEN (0 + decimal.pow(0.0664,0.5)) inexact rounded', 0.258, 0 + decimal.pow(0.0664,0.5));
						AddTestCase('pwsx4197:p3 r:HALF_EVEN (0 + decimal.pow(0.665,0.5)) inexact rounded', 0.815, 0 + decimal.pow(0.665,0.5));
						AddTestCase('pwsx4198:p3 r:HALF_EVEN (0 + decimal.pow(0.0665,0.5)) inexact rounded', 0.258, 0 + decimal.pow(0.0665,0.5));
						AddTestCase('pwsx4199:p3 r:HALF_EVEN (0 + decimal.pow(0.666,0.5)) inexact rounded', 0.816, 0 + decimal.pow(0.666,0.5));
						AddTestCase('pwsx4200:p3 r:HALF_EVEN (0 + decimal.pow(0.0666,0.5)) inexact rounded', 0.258, 0 + decimal.pow(0.0666,0.5));
						AddTestCase('pwsx4201:p3 r:HALF_EVEN (0 + decimal.pow(0.667,0.5)) inexact rounded', 0.817, 0 + decimal.pow(0.667,0.5));
						AddTestCase('pwsx4202:p3 r:HALF_EVEN (0 + decimal.pow(0.0667,0.5)) inexact rounded', 0.258, 0 + decimal.pow(0.0667,0.5));
						AddTestCase('pwsx4203:p3 r:HALF_EVEN (0 + decimal.pow(0.668,0.5)) inexact rounded', 0.817, 0 + decimal.pow(0.668,0.5));
						AddTestCase('pwsx4204:p3 r:HALF_EVEN (0 + decimal.pow(0.0668,0.5)) inexact rounded', 0.258, 0 + decimal.pow(0.0668,0.5));
						AddTestCase('pwsx4205:p3 r:HALF_EVEN (0 + decimal.pow(0.669,0.5)) inexact rounded', 0.818, 0 + decimal.pow(0.669,0.5));
						AddTestCase('pwsx4206:p3 r:HALF_EVEN (0 + decimal.pow(0.0669,0.5)) inexact rounded', 0.259, 0 + decimal.pow(0.0669,0.5));
						AddTestCase('pwsx4207:p3 r:HALF_EVEN (0 + decimal.pow(0.671,0.5)) inexact rounded', 0.819, 0 + decimal.pow(0.671,0.5));
						AddTestCase('pwsx4208:p3 r:HALF_EVEN (0 + decimal.pow(0.0671,0.5)) inexact rounded', 0.259, 0 + decimal.pow(0.0671,0.5));
						AddTestCase('pwsx4209:p3 r:HALF_EVEN (0 + decimal.pow(0.672,0.5)) inexact rounded', 0.820, 0 + decimal.pow(0.672,0.5));
						AddTestCase('pwsx4210:p3 r:HALF_EVEN (0 + decimal.pow(0.0672,0.5)) inexact rounded', 0.259, 0 + decimal.pow(0.0672,0.5));
						AddTestCase('pwsx4211:p3 r:HALF_EVEN (0 + decimal.pow(0.673,0.5)) inexact rounded', 0.820, 0 + decimal.pow(0.673,0.5));
						AddTestCase('pwsx4212:p3 r:HALF_EVEN (0 + decimal.pow(0.0673,0.5)) inexact rounded', 0.259, 0 + decimal.pow(0.0673,0.5));
						AddTestCase('pwsx4213:p3 r:HALF_EVEN (0 + decimal.pow(0.674,0.5)) inexact rounded', 0.821, 0 + decimal.pow(0.674,0.5));
						AddTestCase('pwsx4214:p3 r:HALF_EVEN (0 + decimal.pow(0.0674,0.5)) inexact rounded', 0.260, 0 + decimal.pow(0.0674,0.5));
						AddTestCase('pwsx4215:p3 r:HALF_EVEN (0 + decimal.pow(0.675,0.5)) inexact rounded', 0.822, 0 + decimal.pow(0.675,0.5));
						AddTestCase('pwsx4216:p3 r:HALF_EVEN (0 + decimal.pow(0.0675,0.5)) inexact rounded', 0.260, 0 + decimal.pow(0.0675,0.5));
						AddTestCase('pwsx4217:p3 r:HALF_EVEN (0 + decimal.pow(0.676,0.5)) inexact rounded', 0.822, 0 + decimal.pow(0.676,0.5));
						AddTestCase('pwsx4218:p3 r:HALF_EVEN (0 + decimal.pow(0.0676,0.5)) inexact rounded', 0.260, 0 + decimal.pow(0.0676,0.5));
						AddTestCase('pwsx4219:p3 r:HALF_EVEN (0 + decimal.pow(0.677,0.5)) inexact rounded', 0.823, 0 + decimal.pow(0.677,0.5));
						AddTestCase('pwsx4220:p3 r:HALF_EVEN (0 + decimal.pow(0.0677,0.5)) inexact rounded', 0.260, 0 + decimal.pow(0.0677,0.5));
						AddTestCase('pwsx4221:p3 r:HALF_EVEN (0 + decimal.pow(0.678,0.5)) inexact rounded', 0.823, 0 + decimal.pow(0.678,0.5));
						AddTestCase('pwsx4222:p3 r:HALF_EVEN (0 + decimal.pow(0.0678,0.5)) inexact rounded', 0.260, 0 + decimal.pow(0.0678,0.5));
						AddTestCase('pwsx4223:p3 r:HALF_EVEN (0 + decimal.pow(0.679,0.5)) inexact rounded', 0.824, 0 + decimal.pow(0.679,0.5));
						AddTestCase('pwsx4224:p3 r:HALF_EVEN (0 + decimal.pow(0.0679,0.5)) inexact rounded', 0.261, 0 + decimal.pow(0.0679,0.5));
						AddTestCase('pwsx4225:p3 r:HALF_EVEN (0 + decimal.pow(0.681,0.5)) inexact rounded', 0.825, 0 + decimal.pow(0.681,0.5));
						AddTestCase('pwsx4226:p3 r:HALF_EVEN (0 + decimal.pow(0.0681,0.5)) inexact rounded', 0.261, 0 + decimal.pow(0.0681,0.5));
						AddTestCase('pwsx4227:p3 r:HALF_EVEN (0 + decimal.pow(0.682,0.5)) inexact rounded', 0.826, 0 + decimal.pow(0.682,0.5));
						AddTestCase('pwsx4228:p3 r:HALF_EVEN (0 + decimal.pow(0.0682,0.5)) inexact rounded', 0.261, 0 + decimal.pow(0.0682,0.5));
						AddTestCase('pwsx4229:p3 r:HALF_EVEN (0 + decimal.pow(0.683,0.5)) inexact rounded', 0.826, 0 + decimal.pow(0.683,0.5));
						AddTestCase('pwsx4230:p3 r:HALF_EVEN (0 + decimal.pow(0.0683,0.5)) inexact rounded', 0.261, 0 + decimal.pow(0.0683,0.5));
						AddTestCase('pwsx4231:p3 r:HALF_EVEN (0 + decimal.pow(0.684,0.5)) inexact rounded', 0.827, 0 + decimal.pow(0.684,0.5));
						AddTestCase('pwsx4232:p3 r:HALF_EVEN (0 + decimal.pow(0.0684,0.5)) inexact rounded', 0.262, 0 + decimal.pow(0.0684,0.5));
						AddTestCase('pwsx4233:p3 r:HALF_EVEN (0 + decimal.pow(0.685,0.5)) inexact rounded', 0.828, 0 + decimal.pow(0.685,0.5));
						AddTestCase('pwsx4234:p3 r:HALF_EVEN (0 + decimal.pow(0.0685,0.5)) inexact rounded', 0.262, 0 + decimal.pow(0.0685,0.5));
						AddTestCase('pwsx4235:p3 r:HALF_EVEN (0 + decimal.pow(0.686,0.5)) inexact rounded', 0.828, 0 + decimal.pow(0.686,0.5));
						AddTestCase('pwsx4236:p3 r:HALF_EVEN (0 + decimal.pow(0.0686,0.5)) inexact rounded', 0.262, 0 + decimal.pow(0.0686,0.5));
						AddTestCase('pwsx4237:p3 r:HALF_EVEN (0 + decimal.pow(0.687,0.5)) inexact rounded', 0.829, 0 + decimal.pow(0.687,0.5));
						AddTestCase('pwsx4238:p3 r:HALF_EVEN (0 + decimal.pow(0.0687,0.5)) inexact rounded', 0.262, 0 + decimal.pow(0.0687,0.5));
						AddTestCase('pwsx4239:p3 r:HALF_EVEN (0 + decimal.pow(0.688,0.5)) inexact rounded', 0.829, 0 + decimal.pow(0.688,0.5));
						AddTestCase('pwsx4240:p3 r:HALF_EVEN (0 + decimal.pow(0.0688,0.5)) inexact rounded', 0.262, 0 + decimal.pow(0.0688,0.5));
						AddTestCase('pwsx4241:p3 r:HALF_EVEN (0 + decimal.pow(0.689,0.5)) inexact rounded', 0.830, 0 + decimal.pow(0.689,0.5));
						AddTestCase('pwsx4242:p3 r:HALF_EVEN (0 + decimal.pow(0.0689,0.5)) inexact rounded', 0.262, 0 + decimal.pow(0.0689,0.5));
						AddTestCase('pwsx4243:p3 r:HALF_EVEN (0 + decimal.pow(0.691,0.5)) inexact rounded', 0.831, 0 + decimal.pow(0.691,0.5));
						AddTestCase('pwsx4244:p3 r:HALF_EVEN (0 + decimal.pow(0.0691,0.5)) inexact rounded', 0.263, 0 + decimal.pow(0.0691,0.5));
						AddTestCase('pwsx4245:p3 r:HALF_EVEN (0 + decimal.pow(0.692,0.5)) inexact rounded', 0.832, 0 + decimal.pow(0.692,0.5));
						AddTestCase('pwsx4246:p3 r:HALF_EVEN (0 + decimal.pow(0.0692,0.5)) inexact rounded', 0.263, 0 + decimal.pow(0.0692,0.5));
						AddTestCase('pwsx4247:p3 r:HALF_EVEN (0 + decimal.pow(0.693,0.5)) inexact rounded', 0.832, 0 + decimal.pow(0.693,0.5));
						AddTestCase('pwsx4248:p3 r:HALF_EVEN (0 + decimal.pow(0.0693,0.5)) inexact rounded', 0.263, 0 + decimal.pow(0.0693,0.5));
						AddTestCase('pwsx4249:p3 r:HALF_EVEN (0 + decimal.pow(0.694,0.5)) inexact rounded', 0.833, 0 + decimal.pow(0.694,0.5));
						AddTestCase('pwsx4250:p3 r:HALF_EVEN (0 + decimal.pow(0.0694,0.5)) inexact rounded', 0.263, 0 + decimal.pow(0.0694,0.5));
						AddTestCase('pwsx4251:p3 r:HALF_EVEN (0 + decimal.pow(0.695,0.5)) inexact rounded', 0.834, 0 + decimal.pow(0.695,0.5));
						AddTestCase('pwsx4252:p3 r:HALF_EVEN (0 + decimal.pow(0.0695,0.5)) inexact rounded', 0.264, 0 + decimal.pow(0.0695,0.5));
						AddTestCase('pwsx4253:p3 r:HALF_EVEN (0 + decimal.pow(0.696,0.5)) inexact rounded', 0.834, 0 + decimal.pow(0.696,0.5));
						AddTestCase('pwsx4254:p3 r:HALF_EVEN (0 + decimal.pow(0.0696,0.5)) inexact rounded', 0.264, 0 + decimal.pow(0.0696,0.5));
						AddTestCase('pwsx4255:p3 r:HALF_EVEN (0 + decimal.pow(0.697,0.5)) inexact rounded', 0.835, 0 + decimal.pow(0.697,0.5));
						AddTestCase('pwsx4256:p3 r:HALF_EVEN (0 + decimal.pow(0.0697,0.5)) inexact rounded', 0.264, 0 + decimal.pow(0.0697,0.5));
						AddTestCase('pwsx4257:p3 r:HALF_EVEN (0 + decimal.pow(0.698,0.5)) inexact rounded', 0.835, 0 + decimal.pow(0.698,0.5));
						AddTestCase('pwsx4258:p3 r:HALF_EVEN (0 + decimal.pow(0.0698,0.5)) inexact rounded', 0.264, 0 + decimal.pow(0.0698,0.5));
						AddTestCase('pwsx4259:p3 r:HALF_EVEN (0 + decimal.pow(0.699,0.5)) inexact rounded', 0.836, 0 + decimal.pow(0.699,0.5));
						AddTestCase('pwsx4260:p3 r:HALF_EVEN (0 + decimal.pow(0.0699,0.5)) inexact rounded', 0.264, 0 + decimal.pow(0.0699,0.5));
						AddTestCase('pwsx4261:p3 r:HALF_EVEN (0 + decimal.pow(0.701,0.5)) inexact rounded', 0.837, 0 + decimal.pow(0.701,0.5));
						AddTestCase('pwsx4262:p3 r:HALF_EVEN (0 + decimal.pow(0.0701,0.5)) inexact rounded', 0.265, 0 + decimal.pow(0.0701,0.5));
						AddTestCase('pwsx4263:p3 r:HALF_EVEN (0 + decimal.pow(0.702,0.5)) inexact rounded', 0.838, 0 + decimal.pow(0.702,0.5));
						AddTestCase('pwsx4264:p3 r:HALF_EVEN (0 + decimal.pow(0.0702,0.5)) inexact rounded', 0.265, 0 + decimal.pow(0.0702,0.5));
						AddTestCase('pwsx4265:p3 r:HALF_EVEN (0 + decimal.pow(0.703,0.5)) inexact rounded', 0.838, 0 + decimal.pow(0.703,0.5));
						AddTestCase('pwsx4266:p3 r:HALF_EVEN (0 + decimal.pow(0.0703,0.5)) inexact rounded', 0.265, 0 + decimal.pow(0.0703,0.5));
						AddTestCase('pwsx4267:p3 r:HALF_EVEN (0 + decimal.pow(0.704,0.5)) inexact rounded', 0.839, 0 + decimal.pow(0.704,0.5));
						AddTestCase('pwsx4268:p3 r:HALF_EVEN (0 + decimal.pow(0.0704,0.5)) inexact rounded', 0.265, 0 + decimal.pow(0.0704,0.5));
						AddTestCase('pwsx4269:p3 r:HALF_EVEN (0 + decimal.pow(0.705,0.5)) inexact rounded', 0.840, 0 + decimal.pow(0.705,0.5));
						AddTestCase('pwsx4270:p3 r:HALF_EVEN (0 + decimal.pow(0.0705,0.5)) inexact rounded', 0.266, 0 + decimal.pow(0.0705,0.5));
						AddTestCase('pwsx4271:p3 r:HALF_EVEN (0 + decimal.pow(0.706,0.5)) inexact rounded', 0.840, 0 + decimal.pow(0.706,0.5));
						AddTestCase('pwsx4272:p3 r:HALF_EVEN (0 + decimal.pow(0.0706,0.5)) inexact rounded', 0.266, 0 + decimal.pow(0.0706,0.5));
						AddTestCase('pwsx4273:p3 r:HALF_EVEN (0 + decimal.pow(0.707,0.5)) inexact rounded', 0.841, 0 + decimal.pow(0.707,0.5));
						AddTestCase('pwsx4274:p3 r:HALF_EVEN (0 + decimal.pow(0.0707,0.5)) inexact rounded', 0.266, 0 + decimal.pow(0.0707,0.5));
						AddTestCase('pwsx4275:p3 r:HALF_EVEN (0 + decimal.pow(0.708,0.5)) inexact rounded', 0.841, 0 + decimal.pow(0.708,0.5));
						AddTestCase('pwsx4276:p3 r:HALF_EVEN (0 + decimal.pow(0.0708,0.5)) inexact rounded', 0.266, 0 + decimal.pow(0.0708,0.5));
						AddTestCase('pwsx4277:p3 r:HALF_EVEN (0 + decimal.pow(0.709,0.5)) inexact rounded', 0.842, 0 + decimal.pow(0.709,0.5));
						AddTestCase('pwsx4278:p3 r:HALF_EVEN (0 + decimal.pow(0.0709,0.5)) inexact rounded', 0.266, 0 + decimal.pow(0.0709,0.5));
						AddTestCase('pwsx4279:p3 r:HALF_EVEN (0 + decimal.pow(0.711,0.5)) inexact rounded', 0.843, 0 + decimal.pow(0.711,0.5));
						AddTestCase('pwsx4280:p3 r:HALF_EVEN (0 + decimal.pow(0.0711,0.5)) inexact rounded', 0.267, 0 + decimal.pow(0.0711,0.5));
						AddTestCase('pwsx4281:p3 r:HALF_EVEN (0 + decimal.pow(0.712,0.5)) inexact rounded', 0.844, 0 + decimal.pow(0.712,0.5));
						AddTestCase('pwsx4282:p3 r:HALF_EVEN (0 + decimal.pow(0.0712,0.5)) inexact rounded', 0.267, 0 + decimal.pow(0.0712,0.5));
						AddTestCase('pwsx4283:p3 r:HALF_EVEN (0 + decimal.pow(0.713,0.5)) inexact rounded', 0.844, 0 + decimal.pow(0.713,0.5));
						AddTestCase('pwsx4284:p3 r:HALF_EVEN (0 + decimal.pow(0.0713,0.5)) inexact rounded', 0.267, 0 + decimal.pow(0.0713,0.5));
						AddTestCase('pwsx4285:p3 r:HALF_EVEN (0 + decimal.pow(0.714,0.5)) inexact rounded', 0.845, 0 + decimal.pow(0.714,0.5));
						AddTestCase('pwsx4286:p3 r:HALF_EVEN (0 + decimal.pow(0.0714,0.5)) inexact rounded', 0.267, 0 + decimal.pow(0.0714,0.5));
						AddTestCase('pwsx4287:p3 r:HALF_EVEN (0 + decimal.pow(0.715,0.5)) inexact rounded', 0.846, 0 + decimal.pow(0.715,0.5));
						AddTestCase('pwsx4288:p3 r:HALF_EVEN (0 + decimal.pow(0.0715,0.5)) inexact rounded', 0.267, 0 + decimal.pow(0.0715,0.5));
						AddTestCase('pwsx4289:p3 r:HALF_EVEN (0 + decimal.pow(0.716,0.5)) inexact rounded', 0.846, 0 + decimal.pow(0.716,0.5));
						AddTestCase('pwsx4290:p3 r:HALF_EVEN (0 + decimal.pow(0.0716,0.5)) inexact rounded', 0.268, 0 + decimal.pow(0.0716,0.5));
						AddTestCase('pwsx4291:p3 r:HALF_EVEN (0 + decimal.pow(0.717,0.5)) inexact rounded', 0.847, 0 + decimal.pow(0.717,0.5));
						AddTestCase('pwsx4292:p3 r:HALF_EVEN (0 + decimal.pow(0.0717,0.5)) inexact rounded', 0.268, 0 + decimal.pow(0.0717,0.5));
						AddTestCase('pwsx4293:p3 r:HALF_EVEN (0 + decimal.pow(0.718,0.5)) inexact rounded', 0.847, 0 + decimal.pow(0.718,0.5));
						AddTestCase('pwsx4294:p3 r:HALF_EVEN (0 + decimal.pow(0.0718,0.5)) inexact rounded', 0.268, 0 + decimal.pow(0.0718,0.5));
						AddTestCase('pwsx4295:p3 r:HALF_EVEN (0 + decimal.pow(0.719,0.5)) inexact rounded', 0.848, 0 + decimal.pow(0.719,0.5));
						AddTestCase('pwsx4296:p3 r:HALF_EVEN (0 + decimal.pow(0.0719,0.5)) inexact rounded', 0.268, 0 + decimal.pow(0.0719,0.5));
						AddTestCase('pwsx4297:p3 r:HALF_EVEN (0 + decimal.pow(0.721,0.5)) inexact rounded', 0.849, 0 + decimal.pow(0.721,0.5));
						AddTestCase('pwsx4298:p3 r:HALF_EVEN (0 + decimal.pow(0.0721,0.5)) inexact rounded', 0.269, 0 + decimal.pow(0.0721,0.5));
						AddTestCase('pwsx4299:p3 r:HALF_EVEN (0 + decimal.pow(0.722,0.5)) inexact rounded', 0.850, 0 + decimal.pow(0.722,0.5));
						AddTestCase('pwsx4300:p3 r:HALF_EVEN (0 + decimal.pow(0.0722,0.5)) inexact rounded', 0.269, 0 + decimal.pow(0.0722,0.5));
						AddTestCase('pwsx4301:p3 r:HALF_EVEN (0 + decimal.pow(0.723,0.5)) inexact rounded', 0.850, 0 + decimal.pow(0.723,0.5));
						AddTestCase('pwsx4302:p3 r:HALF_EVEN (0 + decimal.pow(0.0723,0.5)) inexact rounded', 0.269, 0 + decimal.pow(0.0723,0.5));
						AddTestCase('pwsx4303:p3 r:HALF_EVEN (0 + decimal.pow(0.724,0.5)) inexact rounded', 0.851, 0 + decimal.pow(0.724,0.5));
						AddTestCase('pwsx4304:p3 r:HALF_EVEN (0 + decimal.pow(0.0724,0.5)) inexact rounded', 0.269, 0 + decimal.pow(0.0724,0.5));
						AddTestCase('pwsx4305:p3 r:HALF_EVEN (0 + decimal.pow(0.725,0.5)) inexact rounded', 0.851, 0 + decimal.pow(0.725,0.5));
						AddTestCase('pwsx4306:p3 r:HALF_EVEN (0 + decimal.pow(0.0725,0.5)) inexact rounded', 0.269, 0 + decimal.pow(0.0725,0.5));
						AddTestCase('pwsx4307:p3 r:HALF_EVEN (0 + decimal.pow(0.726,0.5)) inexact rounded', 0.852, 0 + decimal.pow(0.726,0.5));
						AddTestCase('pwsx4308:p3 r:HALF_EVEN (0 + decimal.pow(0.0726,0.5)) inexact rounded', 0.269, 0 + decimal.pow(0.0726,0.5));
						AddTestCase('pwsx4309:p3 r:HALF_EVEN (0 + decimal.pow(0.727,0.5)) inexact rounded', 0.853, 0 + decimal.pow(0.727,0.5));
						AddTestCase('pwsx4310:p3 r:HALF_EVEN (0 + decimal.pow(0.0727,0.5)) inexact rounded', 0.270, 0 + decimal.pow(0.0727,0.5));
						AddTestCase('pwsx4311:p3 r:HALF_EVEN (0 + decimal.pow(0.728,0.5)) inexact rounded', 0.853, 0 + decimal.pow(0.728,0.5));
						AddTestCase('pwsx4312:p3 r:HALF_EVEN (0 + decimal.pow(0.0728,0.5)) inexact rounded', 0.270, 0 + decimal.pow(0.0728,0.5));
						AddTestCase('pwsx4313:p3 r:HALF_EVEN (0 + decimal.pow(0.729,0.5)) inexact rounded', 0.854, 0 + decimal.pow(0.729,0.5));
						AddTestCase('pwsx4314:p3 r:HALF_EVEN (0 + decimal.pow(0.0729,0.5)) inexact rounded', 0.270, 0 + decimal.pow(0.0729,0.5));
						AddTestCase('pwsx4315:p3 r:HALF_EVEN (0 + decimal.pow(0.731,0.5)) inexact rounded', 0.855, 0 + decimal.pow(0.731,0.5));
						AddTestCase('pwsx4316:p3 r:HALF_EVEN (0 + decimal.pow(0.0731,0.5)) inexact rounded', 0.270, 0 + decimal.pow(0.0731,0.5));
						AddTestCase('pwsx4317:p3 r:HALF_EVEN (0 + decimal.pow(0.732,0.5)) inexact rounded', 0.856, 0 + decimal.pow(0.732,0.5));
						AddTestCase('pwsx4318:p3 r:HALF_EVEN (0 + decimal.pow(0.0732,0.5)) inexact rounded', 0.271, 0 + decimal.pow(0.0732,0.5));
						AddTestCase('pwsx4319:p3 r:HALF_EVEN (0 + decimal.pow(0.733,0.5)) inexact rounded', 0.856, 0 + decimal.pow(0.733,0.5));
						AddTestCase('pwsx4320:p3 r:HALF_EVEN (0 + decimal.pow(0.0733,0.5)) inexact rounded', 0.271, 0 + decimal.pow(0.0733,0.5));
						AddTestCase('pwsx4321:p3 r:HALF_EVEN (0 + decimal.pow(0.734,0.5)) inexact rounded', 0.857, 0 + decimal.pow(0.734,0.5));
						AddTestCase('pwsx4322:p3 r:HALF_EVEN (0 + decimal.pow(0.0734,0.5)) inexact rounded', 0.271, 0 + decimal.pow(0.0734,0.5));
						AddTestCase('pwsx4323:p3 r:HALF_EVEN (0 + decimal.pow(0.735,0.5)) inexact rounded', 0.857, 0 + decimal.pow(0.735,0.5));
						AddTestCase('pwsx4324:p3 r:HALF_EVEN (0 + decimal.pow(0.0735,0.5)) inexact rounded', 0.271, 0 + decimal.pow(0.0735,0.5));
						AddTestCase('pwsx4325:p3 r:HALF_EVEN (0 + decimal.pow(0.736,0.5)) inexact rounded', 0.858, 0 + decimal.pow(0.736,0.5));
						AddTestCase('pwsx4326:p3 r:HALF_EVEN (0 + decimal.pow(0.0736,0.5)) inexact rounded', 0.271, 0 + decimal.pow(0.0736,0.5));
						AddTestCase('pwsx4327:p3 r:HALF_EVEN (0 + decimal.pow(0.737,0.5)) inexact rounded', 0.858, 0 + decimal.pow(0.737,0.5));
						AddTestCase('pwsx4328:p3 r:HALF_EVEN (0 + decimal.pow(0.0737,0.5)) inexact rounded', 0.271, 0 + decimal.pow(0.0737,0.5));
						AddTestCase('pwsx4329:p3 r:HALF_EVEN (0 + decimal.pow(0.738,0.5)) inexact rounded', 0.859, 0 + decimal.pow(0.738,0.5));
						AddTestCase('pwsx4330:p3 r:HALF_EVEN (0 + decimal.pow(0.0738,0.5)) inexact rounded', 0.272, 0 + decimal.pow(0.0738,0.5));
						AddTestCase('pwsx4331:p3 r:HALF_EVEN (0 + decimal.pow(0.739,0.5)) inexact rounded', 0.860, 0 + decimal.pow(0.739,0.5));
						AddTestCase('pwsx4332:p3 r:HALF_EVEN (0 + decimal.pow(0.0739,0.5)) inexact rounded', 0.272, 0 + decimal.pow(0.0739,0.5));
						AddTestCase('pwsx4333:p3 r:HALF_EVEN (0 + decimal.pow(0.741,0.5)) inexact rounded', 0.861, 0 + decimal.pow(0.741,0.5));
						AddTestCase('pwsx4334:p3 r:HALF_EVEN (0 + decimal.pow(0.0741,0.5)) inexact rounded', 0.272, 0 + decimal.pow(0.0741,0.5));
						AddTestCase('pwsx4335:p3 r:HALF_EVEN (0 + decimal.pow(0.742,0.5)) inexact rounded', 0.861, 0 + decimal.pow(0.742,0.5));
						AddTestCase('pwsx4336:p3 r:HALF_EVEN (0 + decimal.pow(0.0742,0.5)) inexact rounded', 0.272, 0 + decimal.pow(0.0742,0.5));
						AddTestCase('pwsx4337:p3 r:HALF_EVEN (0 + decimal.pow(0.743,0.5)) inexact rounded', 0.862, 0 + decimal.pow(0.743,0.5));
						AddTestCase('pwsx4338:p3 r:HALF_EVEN (0 + decimal.pow(0.0743,0.5)) inexact rounded', 0.273, 0 + decimal.pow(0.0743,0.5));
						AddTestCase('pwsx4339:p3 r:HALF_EVEN (0 + decimal.pow(0.744,0.5)) inexact rounded', 0.863, 0 + decimal.pow(0.744,0.5));
						AddTestCase('pwsx4340:p3 r:HALF_EVEN (0 + decimal.pow(0.0744,0.5)) inexact rounded', 0.273, 0 + decimal.pow(0.0744,0.5));
						AddTestCase('pwsx4341:p3 r:HALF_EVEN (0 + decimal.pow(0.745,0.5)) inexact rounded', 0.863, 0 + decimal.pow(0.745,0.5));
						AddTestCase('pwsx4342:p3 r:HALF_EVEN (0 + decimal.pow(0.0745,0.5)) inexact rounded', 0.273, 0 + decimal.pow(0.0745,0.5));
						AddTestCase('pwsx4343:p3 r:HALF_EVEN (0 + decimal.pow(0.746,0.5)) inexact rounded', 0.864, 0 + decimal.pow(0.746,0.5));
						AddTestCase('pwsx4344:p3 r:HALF_EVEN (0 + decimal.pow(0.0746,0.5)) inexact rounded', 0.273, 0 + decimal.pow(0.0746,0.5));
						AddTestCase('pwsx4345:p3 r:HALF_EVEN (0 + decimal.pow(0.747,0.5)) inexact rounded', 0.864, 0 + decimal.pow(0.747,0.5));
						AddTestCase('pwsx4346:p3 r:HALF_EVEN (0 + decimal.pow(0.0747,0.5)) inexact rounded', 0.273, 0 + decimal.pow(0.0747,0.5));
						AddTestCase('pwsx4347:p3 r:HALF_EVEN (0 + decimal.pow(0.748,0.5)) inexact rounded', 0.865, 0 + decimal.pow(0.748,0.5));
						AddTestCase('pwsx4348:p3 r:HALF_EVEN (0 + decimal.pow(0.0748,0.5)) inexact rounded', 0.273, 0 + decimal.pow(0.0748,0.5));
						AddTestCase('pwsx4349:p3 r:HALF_EVEN (0 + decimal.pow(0.749,0.5)) inexact rounded', 0.865, 0 + decimal.pow(0.749,0.5));
						AddTestCase('pwsx4350:p3 r:HALF_EVEN (0 + decimal.pow(0.0749,0.5)) inexact rounded', 0.274, 0 + decimal.pow(0.0749,0.5));
						AddTestCase('pwsx4351:p3 r:HALF_EVEN (0 + decimal.pow(0.751,0.5)) inexact rounded', 0.867, 0 + decimal.pow(0.751,0.5));
						AddTestCase('pwsx4352:p3 r:HALF_EVEN (0 + decimal.pow(0.0751,0.5)) inexact rounded', 0.274, 0 + decimal.pow(0.0751,0.5));
						AddTestCase('pwsx4353:p3 r:HALF_EVEN (0 + decimal.pow(0.752,0.5)) inexact rounded', 0.867, 0 + decimal.pow(0.752,0.5));
						AddTestCase('pwsx4354:p3 r:HALF_EVEN (0 + decimal.pow(0.0752,0.5)) inexact rounded', 0.274, 0 + decimal.pow(0.0752,0.5));
						AddTestCase('pwsx4355:p3 r:HALF_EVEN (0 + decimal.pow(0.753,0.5)) inexact rounded', 0.868, 0 + decimal.pow(0.753,0.5));
						AddTestCase('pwsx4356:p3 r:HALF_EVEN (0 + decimal.pow(0.0753,0.5)) inexact rounded', 0.274, 0 + decimal.pow(0.0753,0.5));
						AddTestCase('pwsx4357:p3 r:HALF_EVEN (0 + decimal.pow(0.754,0.5)) inexact rounded', 0.868, 0 + decimal.pow(0.754,0.5));
						AddTestCase('pwsx4358:p3 r:HALF_EVEN (0 + decimal.pow(0.0754,0.5)) inexact rounded', 0.275, 0 + decimal.pow(0.0754,0.5));
						AddTestCase('pwsx4359:p3 r:HALF_EVEN (0 + decimal.pow(0.755,0.5)) inexact rounded', 0.869, 0 + decimal.pow(0.755,0.5));
						AddTestCase('pwsx4360:p3 r:HALF_EVEN (0 + decimal.pow(0.0755,0.5)) inexact rounded', 0.275, 0 + decimal.pow(0.0755,0.5));
						AddTestCase('pwsx4361:p3 r:HALF_EVEN (0 + decimal.pow(0.756,0.5)) inexact rounded', 0.869, 0 + decimal.pow(0.756,0.5));
						AddTestCase('pwsx4362:p3 r:HALF_EVEN (0 + decimal.pow(0.0756,0.5)) inexact rounded', 0.275, 0 + decimal.pow(0.0756,0.5));
						AddTestCase('pwsx4363:p3 r:HALF_EVEN (0 + decimal.pow(0.757,0.5)) inexact rounded', 0.870, 0 + decimal.pow(0.757,0.5));
						AddTestCase('pwsx4364:p3 r:HALF_EVEN (0 + decimal.pow(0.0757,0.5)) inexact rounded', 0.275, 0 + decimal.pow(0.0757,0.5));
						AddTestCase('pwsx4365:p3 r:HALF_EVEN (0 + decimal.pow(0.758,0.5)) inexact rounded', 0.871, 0 + decimal.pow(0.758,0.5));
						AddTestCase('pwsx4366:p3 r:HALF_EVEN (0 + decimal.pow(0.0758,0.5)) inexact rounded', 0.275, 0 + decimal.pow(0.0758,0.5));
						AddTestCase('pwsx4367:p3 r:HALF_EVEN (0 + decimal.pow(0.759,0.5)) inexact rounded', 0.871, 0 + decimal.pow(0.759,0.5));
						AddTestCase('pwsx4368:p3 r:HALF_EVEN (0 + decimal.pow(0.0759,0.5)) inexact rounded', 0.275, 0 + decimal.pow(0.0759,0.5));
						AddTestCase('pwsx4369:p3 r:HALF_EVEN (0 + decimal.pow(0.761,0.5)) inexact rounded', 0.872, 0 + decimal.pow(0.761,0.5));
						AddTestCase('pwsx4370:p3 r:HALF_EVEN (0 + decimal.pow(0.0761,0.5)) inexact rounded', 0.276, 0 + decimal.pow(0.0761,0.5));
						AddTestCase('pwsx4371:p3 r:HALF_EVEN (0 + decimal.pow(0.762,0.5)) inexact rounded', 0.873, 0 + decimal.pow(0.762,0.5));
						AddTestCase('pwsx4372:p3 r:HALF_EVEN (0 + decimal.pow(0.0762,0.5)) inexact rounded', 0.276, 0 + decimal.pow(0.0762,0.5));
						AddTestCase('pwsx4373:p3 r:HALF_EVEN (0 + decimal.pow(0.763,0.5)) inexact rounded', 0.873, 0 + decimal.pow(0.763,0.5));
						AddTestCase('pwsx4374:p3 r:HALF_EVEN (0 + decimal.pow(0.0763,0.5)) inexact rounded', 0.276, 0 + decimal.pow(0.0763,0.5));
						AddTestCase('pwsx4375:p3 r:HALF_EVEN (0 + decimal.pow(0.764,0.5)) inexact rounded', 0.874, 0 + decimal.pow(0.764,0.5));
						AddTestCase('pwsx4376:p3 r:HALF_EVEN (0 + decimal.pow(0.0764,0.5)) inexact rounded', 0.276, 0 + decimal.pow(0.0764,0.5));
						AddTestCase('pwsx4377:p3 r:HALF_EVEN (0 + decimal.pow(0.765,0.5)) inexact rounded', 0.875, 0 + decimal.pow(0.765,0.5));
						AddTestCase('pwsx4378:p3 r:HALF_EVEN (0 + decimal.pow(0.0765,0.5)) inexact rounded', 0.277, 0 + decimal.pow(0.0765,0.5));
						AddTestCase('pwsx4379:p3 r:HALF_EVEN (0 + decimal.pow(0.766,0.5)) inexact rounded', 0.875, 0 + decimal.pow(0.766,0.5));
						AddTestCase('pwsx4380:p3 r:HALF_EVEN (0 + decimal.pow(0.0766,0.5)) inexact rounded', 0.277, 0 + decimal.pow(0.0766,0.5));
						AddTestCase('pwsx4381:p3 r:HALF_EVEN (0 + decimal.pow(0.767,0.5)) inexact rounded', 0.876, 0 + decimal.pow(0.767,0.5));
						AddTestCase('pwsx4382:p3 r:HALF_EVEN (0 + decimal.pow(0.0767,0.5)) inexact rounded', 0.277, 0 + decimal.pow(0.0767,0.5));
						AddTestCase('pwsx4383:p3 r:HALF_EVEN (0 + decimal.pow(0.768,0.5)) inexact rounded', 0.876, 0 + decimal.pow(0.768,0.5));
						AddTestCase('pwsx4384:p3 r:HALF_EVEN (0 + decimal.pow(0.0768,0.5)) inexact rounded', 0.277, 0 + decimal.pow(0.0768,0.5));
						AddTestCase('pwsx4385:p3 r:HALF_EVEN (0 + decimal.pow(0.769,0.5)) inexact rounded', 0.877, 0 + decimal.pow(0.769,0.5));
						AddTestCase('pwsx4386:p3 r:HALF_EVEN (0 + decimal.pow(0.0769,0.5)) inexact rounded', 0.277, 0 + decimal.pow(0.0769,0.5));
						AddTestCase('pwsx4387:p3 r:HALF_EVEN (0 + decimal.pow(0.771,0.5)) inexact rounded', 0.878, 0 + decimal.pow(0.771,0.5));
						AddTestCase('pwsx4388:p3 r:HALF_EVEN (0 + decimal.pow(0.0771,0.5)) inexact rounded', 0.278, 0 + decimal.pow(0.0771,0.5));
						AddTestCase('pwsx4389:p3 r:HALF_EVEN (0 + decimal.pow(0.772,0.5)) inexact rounded', 0.879, 0 + decimal.pow(0.772,0.5));
						AddTestCase('pwsx4390:p3 r:HALF_EVEN (0 + decimal.pow(0.0772,0.5)) inexact rounded', 0.278, 0 + decimal.pow(0.0772,0.5));
						AddTestCase('pwsx4391:p3 r:HALF_EVEN (0 + decimal.pow(0.773,0.5)) inexact rounded', 0.879, 0 + decimal.pow(0.773,0.5));
						AddTestCase('pwsx4392:p3 r:HALF_EVEN (0 + decimal.pow(0.0773,0.5)) inexact rounded', 0.278, 0 + decimal.pow(0.0773,0.5));
						AddTestCase('pwsx4393:p3 r:HALF_EVEN (0 + decimal.pow(0.774,0.5)) inexact rounded', 0.880, 0 + decimal.pow(0.774,0.5));
						AddTestCase('pwsx4394:p3 r:HALF_EVEN (0 + decimal.pow(0.0774,0.5)) inexact rounded', 0.278, 0 + decimal.pow(0.0774,0.5));
						AddTestCase('pwsx4395:p3 r:HALF_EVEN (0 + decimal.pow(0.775,0.5)) inexact rounded', 0.880, 0 + decimal.pow(0.775,0.5));
						AddTestCase('pwsx4396:p3 r:HALF_EVEN (0 + decimal.pow(0.0775,0.5)) inexact rounded', 0.278, 0 + decimal.pow(0.0775,0.5));
						AddTestCase('pwsx4397:p3 r:HALF_EVEN (0 + decimal.pow(0.776,0.5)) inexact rounded', 0.881, 0 + decimal.pow(0.776,0.5));
						AddTestCase('pwsx4398:p3 r:HALF_EVEN (0 + decimal.pow(0.0776,0.5)) inexact rounded', 0.279, 0 + decimal.pow(0.0776,0.5));
						AddTestCase('pwsx4399:p3 r:HALF_EVEN (0 + decimal.pow(0.777,0.5)) inexact rounded', 0.881, 0 + decimal.pow(0.777,0.5));
						AddTestCase('pwsx4400:p3 r:HALF_EVEN (0 + decimal.pow(0.0777,0.5)) inexact rounded', 0.279, 0 + decimal.pow(0.0777,0.5));
						AddTestCase('pwsx4401:p3 r:HALF_EVEN (0 + decimal.pow(0.778,0.5)) inexact rounded', 0.882, 0 + decimal.pow(0.778,0.5));
						AddTestCase('pwsx4402:p3 r:HALF_EVEN (0 + decimal.pow(0.0778,0.5)) inexact rounded', 0.279, 0 + decimal.pow(0.0778,0.5));
						AddTestCase('pwsx4403:p3 r:HALF_EVEN (0 + decimal.pow(0.779,0.5)) inexact rounded', 0.883, 0 + decimal.pow(0.779,0.5));
						AddTestCase('pwsx4404:p3 r:HALF_EVEN (0 + decimal.pow(0.0779,0.5)) inexact rounded', 0.279, 0 + decimal.pow(0.0779,0.5));
						AddTestCase('pwsx4405:p3 r:HALF_EVEN (0 + decimal.pow(0.781,0.5)) inexact rounded', 0.884, 0 + decimal.pow(0.781,0.5));
						AddTestCase('pwsx4406:p3 r:HALF_EVEN (0 + decimal.pow(0.0781,0.5)) inexact rounded', 0.279, 0 + decimal.pow(0.0781,0.5));
						AddTestCase('pwsx4407:p3 r:HALF_EVEN (0 + decimal.pow(0.782,0.5)) inexact rounded', 0.884, 0 + decimal.pow(0.782,0.5));
						AddTestCase('pwsx4408:p3 r:HALF_EVEN (0 + decimal.pow(0.0782,0.5)) inexact rounded', 0.280, 0 + decimal.pow(0.0782,0.5));
						AddTestCase('pwsx4409:p3 r:HALF_EVEN (0 + decimal.pow(0.783,0.5)) inexact rounded', 0.885, 0 + decimal.pow(0.783,0.5));
						AddTestCase('pwsx4410:p3 r:HALF_EVEN (0 + decimal.pow(0.0783,0.5)) inexact rounded', 0.280, 0 + decimal.pow(0.0783,0.5));
						AddTestCase('pwsx4411:p3 r:HALF_EVEN (0 + decimal.pow(0.784,0.5)) inexact rounded', 0.885, 0 + decimal.pow(0.784,0.5));
						AddTestCase('pwsx4412:p3 r:HALF_EVEN (0 + decimal.pow(0.0784,0.5)) inexact rounded', 0.280, 0 + decimal.pow(0.0784,0.5));
						AddTestCase('pwsx4413:p3 r:HALF_EVEN (0 + decimal.pow(0.785,0.5)) inexact rounded', 0.886, 0 + decimal.pow(0.785,0.5));
						AddTestCase('pwsx4414:p3 r:HALF_EVEN (0 + decimal.pow(0.0785,0.5)) inexact rounded', 0.280, 0 + decimal.pow(0.0785,0.5));
						AddTestCase('pwsx4415:p3 r:HALF_EVEN (0 + decimal.pow(0.786,0.5)) inexact rounded', 0.887, 0 + decimal.pow(0.786,0.5));
						AddTestCase('pwsx4416:p3 r:HALF_EVEN (0 + decimal.pow(0.0786,0.5)) inexact rounded', 0.280, 0 + decimal.pow(0.0786,0.5));
						AddTestCase('pwsx4417:p3 r:HALF_EVEN (0 + decimal.pow(0.787,0.5)) inexact rounded', 0.887, 0 + decimal.pow(0.787,0.5));
						AddTestCase('pwsx4418:p3 r:HALF_EVEN (0 + decimal.pow(0.0787,0.5)) inexact rounded', 0.281, 0 + decimal.pow(0.0787,0.5));
						AddTestCase('pwsx4419:p3 r:HALF_EVEN (0 + decimal.pow(0.788,0.5)) inexact rounded', 0.888, 0 + decimal.pow(0.788,0.5));
						AddTestCase('pwsx4420:p3 r:HALF_EVEN (0 + decimal.pow(0.0788,0.5)) inexact rounded', 0.281, 0 + decimal.pow(0.0788,0.5));
						AddTestCase('pwsx4421:p3 r:HALF_EVEN (0 + decimal.pow(0.789,0.5)) inexact rounded', 0.888, 0 + decimal.pow(0.789,0.5));
						AddTestCase('pwsx4422:p3 r:HALF_EVEN (0 + decimal.pow(0.0789,0.5)) inexact rounded', 0.281, 0 + decimal.pow(0.0789,0.5));
						AddTestCase('pwsx4423:p3 r:HALF_EVEN (0 + decimal.pow(0.791,0.5)) inexact rounded', 0.889, 0 + decimal.pow(0.791,0.5));
						AddTestCase('pwsx4424:p3 r:HALF_EVEN (0 + decimal.pow(0.0791,0.5)) inexact rounded', 0.281, 0 + decimal.pow(0.0791,0.5));
						AddTestCase('pwsx4425:p3 r:HALF_EVEN (0 + decimal.pow(0.792,0.5)) inexact rounded', 0.890, 0 + decimal.pow(0.792,0.5));
						AddTestCase('pwsx4426:p3 r:HALF_EVEN (0 + decimal.pow(0.0792,0.5)) inexact rounded', 0.281, 0 + decimal.pow(0.0792,0.5));
						AddTestCase('pwsx4427:p3 r:HALF_EVEN (0 + decimal.pow(0.793,0.5)) inexact rounded', 0.891, 0 + decimal.pow(0.793,0.5));
						AddTestCase('pwsx4428:p3 r:HALF_EVEN (0 + decimal.pow(0.0793,0.5)) inexact rounded', 0.282, 0 + decimal.pow(0.0793,0.5));
						AddTestCase('pwsx4429:p3 r:HALF_EVEN (0 + decimal.pow(0.794,0.5)) inexact rounded', 0.891, 0 + decimal.pow(0.794,0.5));
						AddTestCase('pwsx4430:p3 r:HALF_EVEN (0 + decimal.pow(0.0794,0.5)) inexact rounded', 0.282, 0 + decimal.pow(0.0794,0.5));
						AddTestCase('pwsx4431:p3 r:HALF_EVEN (0 + decimal.pow(0.795,0.5)) inexact rounded', 0.892, 0 + decimal.pow(0.795,0.5));
						AddTestCase('pwsx4432:p3 r:HALF_EVEN (0 + decimal.pow(0.0795,0.5)) inexact rounded', 0.282, 0 + decimal.pow(0.0795,0.5));
						AddTestCase('pwsx4433:p3 r:HALF_EVEN (0 + decimal.pow(0.796,0.5)) inexact rounded', 0.892, 0 + decimal.pow(0.796,0.5));
						AddTestCase('pwsx4434:p3 r:HALF_EVEN (0 + decimal.pow(0.0796,0.5)) inexact rounded', 0.282, 0 + decimal.pow(0.0796,0.5));
						AddTestCase('pwsx4435:p3 r:HALF_EVEN (0 + decimal.pow(0.797,0.5)) inexact rounded', 0.893, 0 + decimal.pow(0.797,0.5));
						AddTestCase('pwsx4436:p3 r:HALF_EVEN (0 + decimal.pow(0.0797,0.5)) inexact rounded', 0.282, 0 + decimal.pow(0.0797,0.5));
						AddTestCase('pwsx4437:p3 r:HALF_EVEN (0 + decimal.pow(0.798,0.5)) inexact rounded', 0.893, 0 + decimal.pow(0.798,0.5));
						AddTestCase('pwsx4438:p3 r:HALF_EVEN (0 + decimal.pow(0.0798,0.5)) inexact rounded', 0.282, 0 + decimal.pow(0.0798,0.5));
						AddTestCase('pwsx4439:p3 r:HALF_EVEN (0 + decimal.pow(0.799,0.5)) inexact rounded', 0.894, 0 + decimal.pow(0.799,0.5));
						AddTestCase('pwsx4440:p3 r:HALF_EVEN (0 + decimal.pow(0.0799,0.5)) inexact rounded', 0.283, 0 + decimal.pow(0.0799,0.5));
						AddTestCase('pwsx4441:p3 r:HALF_EVEN (0 + decimal.pow(0.801,0.5)) inexact rounded', 0.895, 0 + decimal.pow(0.801,0.5));
						AddTestCase('pwsx4442:p3 r:HALF_EVEN (0 + decimal.pow(0.0801,0.5)) inexact rounded', 0.283, 0 + decimal.pow(0.0801,0.5));
						AddTestCase('pwsx4443:p3 r:HALF_EVEN (0 + decimal.pow(0.802,0.5)) inexact rounded', 0.896, 0 + decimal.pow(0.802,0.5));
						AddTestCase('pwsx4444:p3 r:HALF_EVEN (0 + decimal.pow(0.0802,0.5)) inexact rounded', 0.283, 0 + decimal.pow(0.0802,0.5));
						AddTestCase('pwsx4445:p3 r:HALF_EVEN (0 + decimal.pow(0.803,0.5)) inexact rounded', 0.896, 0 + decimal.pow(0.803,0.5));
						AddTestCase('pwsx4446:p3 r:HALF_EVEN (0 + decimal.pow(0.0803,0.5)) inexact rounded', 0.283, 0 + decimal.pow(0.0803,0.5));
						AddTestCase('pwsx4447:p3 r:HALF_EVEN (0 + decimal.pow(0.804,0.5)) inexact rounded', 0.897, 0 + decimal.pow(0.804,0.5));
						AddTestCase('pwsx4448:p3 r:HALF_EVEN (0 + decimal.pow(0.0804,0.5)) inexact rounded', 0.284, 0 + decimal.pow(0.0804,0.5));
						AddTestCase('pwsx4449:p3 r:HALF_EVEN (0 + decimal.pow(0.805,0.5)) inexact rounded', 0.897, 0 + decimal.pow(0.805,0.5));
						AddTestCase('pwsx4450:p3 r:HALF_EVEN (0 + decimal.pow(0.0805,0.5)) inexact rounded', 0.284, 0 + decimal.pow(0.0805,0.5));
						AddTestCase('pwsx4451:p3 r:HALF_EVEN (0 + decimal.pow(0.806,0.5)) inexact rounded', 0.898, 0 + decimal.pow(0.806,0.5));
						AddTestCase('pwsx4452:p3 r:HALF_EVEN (0 + decimal.pow(0.0806,0.5)) inexact rounded', 0.284, 0 + decimal.pow(0.0806,0.5));
						AddTestCase('pwsx4453:p3 r:HALF_EVEN (0 + decimal.pow(0.807,0.5)) inexact rounded', 0.898, 0 + decimal.pow(0.807,0.5));
						AddTestCase('pwsx4454:p3 r:HALF_EVEN (0 + decimal.pow(0.0807,0.5)) inexact rounded', 0.284, 0 + decimal.pow(0.0807,0.5));
						AddTestCase('pwsx4455:p3 r:HALF_EVEN (0 + decimal.pow(0.808,0.5)) inexact rounded', 0.899, 0 + decimal.pow(0.808,0.5));
						AddTestCase('pwsx4456:p3 r:HALF_EVEN (0 + decimal.pow(0.0808,0.5)) inexact rounded', 0.284, 0 + decimal.pow(0.0808,0.5));
						AddTestCase('pwsx4457:p3 r:HALF_EVEN (0 + decimal.pow(0.809,0.5)) inexact rounded', 0.899, 0 + decimal.pow(0.809,0.5));
						AddTestCase('pwsx4458:p3 r:HALF_EVEN (0 + decimal.pow(0.0809,0.5)) inexact rounded', 0.284, 0 + decimal.pow(0.0809,0.5));
						AddTestCase('pwsx4459:p3 r:HALF_EVEN (0 + decimal.pow(0.811,0.5)) inexact rounded', 0.901, 0 + decimal.pow(0.811,0.5));
						AddTestCase('pwsx4460:p3 r:HALF_EVEN (0 + decimal.pow(0.0811,0.5)) inexact rounded', 0.285, 0 + decimal.pow(0.0811,0.5));
						AddTestCase('pwsx4461:p3 r:HALF_EVEN (0 + decimal.pow(0.812,0.5)) inexact rounded', 0.901, 0 + decimal.pow(0.812,0.5));
						AddTestCase('pwsx4462:p3 r:HALF_EVEN (0 + decimal.pow(0.0812,0.5)) inexact rounded', 0.285, 0 + decimal.pow(0.0812,0.5));
						AddTestCase('pwsx4463:p3 r:HALF_EVEN (0 + decimal.pow(0.813,0.5)) inexact rounded', 0.902, 0 + decimal.pow(0.813,0.5));
						AddTestCase('pwsx4464:p3 r:HALF_EVEN (0 + decimal.pow(0.0813,0.5)) inexact rounded', 0.285, 0 + decimal.pow(0.0813,0.5));
						AddTestCase('pwsx4465:p3 r:HALF_EVEN (0 + decimal.pow(0.814,0.5)) inexact rounded', 0.902, 0 + decimal.pow(0.814,0.5));
						AddTestCase('pwsx4466:p3 r:HALF_EVEN (0 + decimal.pow(0.0814,0.5)) inexact rounded', 0.285, 0 + decimal.pow(0.0814,0.5));
						AddTestCase('pwsx4467:p3 r:HALF_EVEN (0 + decimal.pow(0.815,0.5)) inexact rounded', 0.903, 0 + decimal.pow(0.815,0.5));
						AddTestCase('pwsx4468:p3 r:HALF_EVEN (0 + decimal.pow(0.0815,0.5)) inexact rounded', 0.285, 0 + decimal.pow(0.0815,0.5));
						AddTestCase('pwsx4469:p3 r:HALF_EVEN (0 + decimal.pow(0.816,0.5)) inexact rounded', 0.903, 0 + decimal.pow(0.816,0.5));
						AddTestCase('pwsx4470:p3 r:HALF_EVEN (0 + decimal.pow(0.0816,0.5)) inexact rounded', 0.286, 0 + decimal.pow(0.0816,0.5));
						AddTestCase('pwsx4471:p3 r:HALF_EVEN (0 + decimal.pow(0.817,0.5)) inexact rounded', 0.904, 0 + decimal.pow(0.817,0.5));
						AddTestCase('pwsx4472:p3 r:HALF_EVEN (0 + decimal.pow(0.0817,0.5)) inexact rounded', 0.286, 0 + decimal.pow(0.0817,0.5));
						AddTestCase('pwsx4473:p3 r:HALF_EVEN (0 + decimal.pow(0.818,0.5)) inexact rounded', 0.904, 0 + decimal.pow(0.818,0.5));
						AddTestCase('pwsx4474:p3 r:HALF_EVEN (0 + decimal.pow(0.0818,0.5)) inexact rounded', 0.286, 0 + decimal.pow(0.0818,0.5));
						AddTestCase('pwsx4475:p3 r:HALF_EVEN (0 + decimal.pow(0.819,0.5)) inexact rounded', 0.905, 0 + decimal.pow(0.819,0.5));
						AddTestCase('pwsx4476:p3 r:HALF_EVEN (0 + decimal.pow(0.0819,0.5)) inexact rounded', 0.286, 0 + decimal.pow(0.0819,0.5));
						AddTestCase('pwsx4477:p3 r:HALF_EVEN (0 + decimal.pow(0.821,0.5)) inexact rounded', 0.906, 0 + decimal.pow(0.821,0.5));
						AddTestCase('pwsx4478:p3 r:HALF_EVEN (0 + decimal.pow(0.0821,0.5)) inexact rounded', 0.287, 0 + decimal.pow(0.0821,0.5));
						AddTestCase('pwsx4479:p3 r:HALF_EVEN (0 + decimal.pow(0.822,0.5)) inexact rounded', 0.907, 0 + decimal.pow(0.822,0.5));
						AddTestCase('pwsx4480:p3 r:HALF_EVEN (0 + decimal.pow(0.0822,0.5)) inexact rounded', 0.287, 0 + decimal.pow(0.0822,0.5));
						AddTestCase('pwsx4481:p3 r:HALF_EVEN (0 + decimal.pow(0.823,0.5)) inexact rounded', 0.907, 0 + decimal.pow(0.823,0.5));
						AddTestCase('pwsx4482:p3 r:HALF_EVEN (0 + decimal.pow(0.0823,0.5)) inexact rounded', 0.287, 0 + decimal.pow(0.0823,0.5));
						AddTestCase('pwsx4483:p3 r:HALF_EVEN (0 + decimal.pow(0.824,0.5)) inexact rounded', 0.908, 0 + decimal.pow(0.824,0.5));
						AddTestCase('pwsx4484:p3 r:HALF_EVEN (0 + decimal.pow(0.0824,0.5)) inexact rounded', 0.287, 0 + decimal.pow(0.0824,0.5));
						AddTestCase('pwsx4485:p3 r:HALF_EVEN (0 + decimal.pow(0.825,0.5)) inexact rounded', 0.908, 0 + decimal.pow(0.825,0.5));
						AddTestCase('pwsx4486:p3 r:HALF_EVEN (0 + decimal.pow(0.0825,0.5)) inexact rounded', 0.287, 0 + decimal.pow(0.0825,0.5));
						AddTestCase('pwsx4487:p3 r:HALF_EVEN (0 + decimal.pow(0.826,0.5)) inexact rounded', 0.909, 0 + decimal.pow(0.826,0.5));
						AddTestCase('pwsx4488:p3 r:HALF_EVEN (0 + decimal.pow(0.0826,0.5)) inexact rounded', 0.287, 0 + decimal.pow(0.0826,0.5));
						AddTestCase('pwsx4489:p3 r:HALF_EVEN (0 + decimal.pow(0.827,0.5)) inexact rounded', 0.909, 0 + decimal.pow(0.827,0.5));
						AddTestCase('pwsx4490:p3 r:HALF_EVEN (0 + decimal.pow(0.0827,0.5)) inexact rounded', 0.288, 0 + decimal.pow(0.0827,0.5));
						AddTestCase('pwsx4491:p3 r:HALF_EVEN (0 + decimal.pow(0.828,0.5)) inexact rounded', 0.910, 0 + decimal.pow(0.828,0.5));
						AddTestCase('pwsx4492:p3 r:HALF_EVEN (0 + decimal.pow(0.0828,0.5)) inexact rounded', 0.288, 0 + decimal.pow(0.0828,0.5));
						AddTestCase('pwsx4493:p3 r:HALF_EVEN (0 + decimal.pow(0.829,0.5)) inexact rounded', 0.910, 0 + decimal.pow(0.829,0.5));
						AddTestCase('pwsx4494:p3 r:HALF_EVEN (0 + decimal.pow(0.0829,0.5)) inexact rounded', 0.288, 0 + decimal.pow(0.0829,0.5));
						AddTestCase('pwsx4495:p3 r:HALF_EVEN (0 + decimal.pow(0.831,0.5)) inexact rounded', 0.912, 0 + decimal.pow(0.831,0.5));
						AddTestCase('pwsx4496:p3 r:HALF_EVEN (0 + decimal.pow(0.0831,0.5)) inexact rounded', 0.288, 0 + decimal.pow(0.0831,0.5));
						AddTestCase('pwsx4497:p3 r:HALF_EVEN (0 + decimal.pow(0.832,0.5)) inexact rounded', 0.912, 0 + decimal.pow(0.832,0.5));
						AddTestCase('pwsx4498:p3 r:HALF_EVEN (0 + decimal.pow(0.0832,0.5)) inexact rounded', 0.288, 0 + decimal.pow(0.0832,0.5));
						AddTestCase('pwsx4499:p3 r:HALF_EVEN (0 + decimal.pow(0.833,0.5)) inexact rounded', 0.913, 0 + decimal.pow(0.833,0.5));
						AddTestCase('pwsx4500:p3 r:HALF_EVEN (0 + decimal.pow(0.0833,0.5)) inexact rounded', 0.289, 0 + decimal.pow(0.0833,0.5));
						AddTestCase('pwsx4501:p3 r:HALF_EVEN (0 + decimal.pow(0.834,0.5)) inexact rounded', 0.913, 0 + decimal.pow(0.834,0.5));
						AddTestCase('pwsx4502:p3 r:HALF_EVEN (0 + decimal.pow(0.0834,0.5)) inexact rounded', 0.289, 0 + decimal.pow(0.0834,0.5));
						AddTestCase('pwsx4503:p3 r:HALF_EVEN (0 + decimal.pow(0.835,0.5)) inexact rounded', 0.914, 0 + decimal.pow(0.835,0.5));
						AddTestCase('pwsx4504:p3 r:HALF_EVEN (0 + decimal.pow(0.0835,0.5)) inexact rounded', 0.289, 0 + decimal.pow(0.0835,0.5));
						AddTestCase('pwsx4505:p3 r:HALF_EVEN (0 + decimal.pow(0.836,0.5)) inexact rounded', 0.914, 0 + decimal.pow(0.836,0.5));
						AddTestCase('pwsx4506:p3 r:HALF_EVEN (0 + decimal.pow(0.0836,0.5)) inexact rounded', 0.289, 0 + decimal.pow(0.0836,0.5));
						AddTestCase('pwsx4507:p3 r:HALF_EVEN (0 + decimal.pow(0.837,0.5)) inexact rounded', 0.915, 0 + decimal.pow(0.837,0.5));
						AddTestCase('pwsx4508:p3 r:HALF_EVEN (0 + decimal.pow(0.0837,0.5)) inexact rounded', 0.289, 0 + decimal.pow(0.0837,0.5));
						AddTestCase('pwsx4509:p3 r:HALF_EVEN (0 + decimal.pow(0.838,0.5)) inexact rounded', 0.915, 0 + decimal.pow(0.838,0.5));
						AddTestCase('pwsx4510:p3 r:HALF_EVEN (0 + decimal.pow(0.0838,0.5)) inexact rounded', 0.289, 0 + decimal.pow(0.0838,0.5));
						AddTestCase('pwsx4511:p3 r:HALF_EVEN (0 + decimal.pow(0.839,0.5)) inexact rounded', 0.916, 0 + decimal.pow(0.839,0.5));
						AddTestCase('pwsx4512:p3 r:HALF_EVEN (0 + decimal.pow(0.0839,0.5)) inexact rounded', 0.290, 0 + decimal.pow(0.0839,0.5));
						AddTestCase('pwsx4513:p3 r:HALF_EVEN (0 + decimal.pow(0.841,0.5)) inexact rounded', 0.917, 0 + decimal.pow(0.841,0.5));
						AddTestCase('pwsx4514:p3 r:HALF_EVEN (0 + decimal.pow(0.0841,0.5)) inexact rounded', 0.290, 0 + decimal.pow(0.0841,0.5));
						AddTestCase('pwsx4515:p3 r:HALF_EVEN (0 + decimal.pow(0.842,0.5)) inexact rounded', 0.918, 0 + decimal.pow(0.842,0.5));
						AddTestCase('pwsx4516:p3 r:HALF_EVEN (0 + decimal.pow(0.0842,0.5)) inexact rounded', 0.290, 0 + decimal.pow(0.0842,0.5));
						AddTestCase('pwsx4517:p3 r:HALF_EVEN (0 + decimal.pow(0.843,0.5)) inexact rounded', 0.918, 0 + decimal.pow(0.843,0.5));
						AddTestCase('pwsx4518:p3 r:HALF_EVEN (0 + decimal.pow(0.0843,0.5)) inexact rounded', 0.290, 0 + decimal.pow(0.0843,0.5));
						AddTestCase('pwsx4519:p3 r:HALF_EVEN (0 + decimal.pow(0.844,0.5)) inexact rounded', 0.919, 0 + decimal.pow(0.844,0.5));
						AddTestCase('pwsx4520:p3 r:HALF_EVEN (0 + decimal.pow(0.0844,0.5)) inexact rounded', 0.291, 0 + decimal.pow(0.0844,0.5));
						AddTestCase('pwsx4521:p3 r:HALF_EVEN (0 + decimal.pow(0.845,0.5)) inexact rounded', 0.919, 0 + decimal.pow(0.845,0.5));
						AddTestCase('pwsx4522:p3 r:HALF_EVEN (0 + decimal.pow(0.0845,0.5)) inexact rounded', 0.291, 0 + decimal.pow(0.0845,0.5));
						AddTestCase('pwsx4523:p3 r:HALF_EVEN (0 + decimal.pow(0.846,0.5)) inexact rounded', 0.920, 0 + decimal.pow(0.846,0.5));
						AddTestCase('pwsx4524:p3 r:HALF_EVEN (0 + decimal.pow(0.0846,0.5)) inexact rounded', 0.291, 0 + decimal.pow(0.0846,0.5));
						AddTestCase('pwsx4525:p3 r:HALF_EVEN (0 + decimal.pow(0.847,0.5)) inexact rounded', 0.920, 0 + decimal.pow(0.847,0.5));
						AddTestCase('pwsx4526:p3 r:HALF_EVEN (0 + decimal.pow(0.0847,0.5)) inexact rounded', 0.291, 0 + decimal.pow(0.0847,0.5));
						AddTestCase('pwsx4527:p3 r:HALF_EVEN (0 + decimal.pow(0.848,0.5)) inexact rounded', 0.921, 0 + decimal.pow(0.848,0.5));
						AddTestCase('pwsx4528:p3 r:HALF_EVEN (0 + decimal.pow(0.0848,0.5)) inexact rounded', 0.291, 0 + decimal.pow(0.0848,0.5));
						AddTestCase('pwsx4529:p3 r:HALF_EVEN (0 + decimal.pow(0.849,0.5)) inexact rounded', 0.921, 0 + decimal.pow(0.849,0.5));
						AddTestCase('pwsx4530:p3 r:HALF_EVEN (0 + decimal.pow(0.0849,0.5)) inexact rounded', 0.291, 0 + decimal.pow(0.0849,0.5));
						AddTestCase('pwsx4531:p3 r:HALF_EVEN (0 + decimal.pow(0.851,0.5)) inexact rounded', 0.922, 0 + decimal.pow(0.851,0.5));
						AddTestCase('pwsx4532:p3 r:HALF_EVEN (0 + decimal.pow(0.0851,0.5)) inexact rounded', 0.292, 0 + decimal.pow(0.0851,0.5));
						AddTestCase('pwsx4533:p3 r:HALF_EVEN (0 + decimal.pow(0.852,0.5)) inexact rounded', 0.923, 0 + decimal.pow(0.852,0.5));
						AddTestCase('pwsx4534:p3 r:HALF_EVEN (0 + decimal.pow(0.0852,0.5)) inexact rounded', 0.292, 0 + decimal.pow(0.0852,0.5));
						AddTestCase('pwsx4535:p3 r:HALF_EVEN (0 + decimal.pow(0.853,0.5)) inexact rounded', 0.924, 0 + decimal.pow(0.853,0.5));
						AddTestCase('pwsx4536:p3 r:HALF_EVEN (0 + decimal.pow(0.0853,0.5)) inexact rounded', 0.292, 0 + decimal.pow(0.0853,0.5));
						AddTestCase('pwsx4537:p3 r:HALF_EVEN (0 + decimal.pow(0.854,0.5)) inexact rounded', 0.924, 0 + decimal.pow(0.854,0.5));
						AddTestCase('pwsx4538:p3 r:HALF_EVEN (0 + decimal.pow(0.0854,0.5)) inexact rounded', 0.292, 0 + decimal.pow(0.0854,0.5));
						AddTestCase('pwsx4539:p3 r:HALF_EVEN (0 + decimal.pow(0.855,0.5)) inexact rounded', 0.925, 0 + decimal.pow(0.855,0.5));
						AddTestCase('pwsx4540:p3 r:HALF_EVEN (0 + decimal.pow(0.0855,0.5)) inexact rounded', 0.292, 0 + decimal.pow(0.0855,0.5));
						AddTestCase('pwsx4541:p3 r:HALF_EVEN (0 + decimal.pow(0.856,0.5)) inexact rounded', 0.925, 0 + decimal.pow(0.856,0.5));
						AddTestCase('pwsx4542:p3 r:HALF_EVEN (0 + decimal.pow(0.0856,0.5)) inexact rounded', 0.293, 0 + decimal.pow(0.0856,0.5));
						AddTestCase('pwsx4543:p3 r:HALF_EVEN (0 + decimal.pow(0.857,0.5)) inexact rounded', 0.926, 0 + decimal.pow(0.857,0.5));
						AddTestCase('pwsx4544:p3 r:HALF_EVEN (0 + decimal.pow(0.0857,0.5)) inexact rounded', 0.293, 0 + decimal.pow(0.0857,0.5));
						AddTestCase('pwsx4545:p3 r:HALF_EVEN (0 + decimal.pow(0.858,0.5)) inexact rounded', 0.926, 0 + decimal.pow(0.858,0.5));
						AddTestCase('pwsx4546:p3 r:HALF_EVEN (0 + decimal.pow(0.0858,0.5)) inexact rounded', 0.293, 0 + decimal.pow(0.0858,0.5));
						AddTestCase('pwsx4547:p3 r:HALF_EVEN (0 + decimal.pow(0.859,0.5)) inexact rounded', 0.927, 0 + decimal.pow(0.859,0.5));
						AddTestCase('pwsx4548:p3 r:HALF_EVEN (0 + decimal.pow(0.0859,0.5)) inexact rounded', 0.293, 0 + decimal.pow(0.0859,0.5));
						AddTestCase('pwsx4549:p3 r:HALF_EVEN (0 + decimal.pow(0.861,0.5)) inexact rounded', 0.928, 0 + decimal.pow(0.861,0.5));
						AddTestCase('pwsx4550:p3 r:HALF_EVEN (0 + decimal.pow(0.0861,0.5)) inexact rounded', 0.293, 0 + decimal.pow(0.0861,0.5));
						AddTestCase('pwsx4551:p3 r:HALF_EVEN (0 + decimal.pow(0.862,0.5)) inexact rounded', 0.928, 0 + decimal.pow(0.862,0.5));
						AddTestCase('pwsx4552:p3 r:HALF_EVEN (0 + decimal.pow(0.0862,0.5)) inexact rounded', 0.294, 0 + decimal.pow(0.0862,0.5));
						AddTestCase('pwsx4553:p3 r:HALF_EVEN (0 + decimal.pow(0.863,0.5)) inexact rounded', 0.929, 0 + decimal.pow(0.863,0.5));
						AddTestCase('pwsx4554:p3 r:HALF_EVEN (0 + decimal.pow(0.0863,0.5)) inexact rounded', 0.294, 0 + decimal.pow(0.0863,0.5));
						AddTestCase('pwsx4555:p3 r:HALF_EVEN (0 + decimal.pow(0.864,0.5)) inexact rounded', 0.930, 0 + decimal.pow(0.864,0.5));
						AddTestCase('pwsx4556:p3 r:HALF_EVEN (0 + decimal.pow(0.0864,0.5)) inexact rounded', 0.294, 0 + decimal.pow(0.0864,0.5));
						AddTestCase('pwsx4557:p3 r:HALF_EVEN (0 + decimal.pow(0.865,0.5)) inexact rounded', 0.930, 0 + decimal.pow(0.865,0.5));
						AddTestCase('pwsx4558:p3 r:HALF_EVEN (0 + decimal.pow(0.0865,0.5)) inexact rounded', 0.294, 0 + decimal.pow(0.0865,0.5));
						AddTestCase('pwsx4559:p3 r:HALF_EVEN (0 + decimal.pow(0.866,0.5)) inexact rounded', 0.931, 0 + decimal.pow(0.866,0.5));
						AddTestCase('pwsx4560:p3 r:HALF_EVEN (0 + decimal.pow(0.0866,0.5)) inexact rounded', 0.294, 0 + decimal.pow(0.0866,0.5));
						AddTestCase('pwsx4561:p3 r:HALF_EVEN (0 + decimal.pow(0.867,0.5)) inexact rounded', 0.931, 0 + decimal.pow(0.867,0.5));
						AddTestCase('pwsx4562:p3 r:HALF_EVEN (0 + decimal.pow(0.0867,0.5)) inexact rounded', 0.294, 0 + decimal.pow(0.0867,0.5));
						AddTestCase('pwsx4563:p3 r:HALF_EVEN (0 + decimal.pow(0.868,0.5)) inexact rounded', 0.932, 0 + decimal.pow(0.868,0.5));
						AddTestCase('pwsx4564:p3 r:HALF_EVEN (0 + decimal.pow(0.0868,0.5)) inexact rounded', 0.295, 0 + decimal.pow(0.0868,0.5));
						AddTestCase('pwsx4565:p3 r:HALF_EVEN (0 + decimal.pow(0.869,0.5)) inexact rounded', 0.932, 0 + decimal.pow(0.869,0.5));
						AddTestCase('pwsx4566:p3 r:HALF_EVEN (0 + decimal.pow(0.0869,0.5)) inexact rounded', 0.295, 0 + decimal.pow(0.0869,0.5));
						AddTestCase('pwsx4567:p3 r:HALF_EVEN (0 + decimal.pow(0.871,0.5)) inexact rounded', 0.933, 0 + decimal.pow(0.871,0.5));
						AddTestCase('pwsx4568:p3 r:HALF_EVEN (0 + decimal.pow(0.0871,0.5)) inexact rounded', 0.295, 0 + decimal.pow(0.0871,0.5));
						AddTestCase('pwsx4569:p3 r:HALF_EVEN (0 + decimal.pow(0.872,0.5)) inexact rounded', 0.934, 0 + decimal.pow(0.872,0.5));
						AddTestCase('pwsx4570:p3 r:HALF_EVEN (0 + decimal.pow(0.0872,0.5)) inexact rounded', 0.295, 0 + decimal.pow(0.0872,0.5));
						AddTestCase('pwsx4571:p3 r:HALF_EVEN (0 + decimal.pow(0.873,0.5)) inexact rounded', 0.934, 0 + decimal.pow(0.873,0.5));
						AddTestCase('pwsx4572:p3 r:HALF_EVEN (0 + decimal.pow(0.0873,0.5)) inexact rounded', 0.295, 0 + decimal.pow(0.0873,0.5));
						AddTestCase('pwsx4573:p3 r:HALF_EVEN (0 + decimal.pow(0.874,0.5)) inexact rounded', 0.935, 0 + decimal.pow(0.874,0.5));
						AddTestCase('pwsx4574:p3 r:HALF_EVEN (0 + decimal.pow(0.0874,0.5)) inexact rounded', 0.296, 0 + decimal.pow(0.0874,0.5));
						AddTestCase('pwsx4575:p3 r:HALF_EVEN (0 + decimal.pow(0.875,0.5)) inexact rounded', 0.935, 0 + decimal.pow(0.875,0.5));
						AddTestCase('pwsx4576:p3 r:HALF_EVEN (0 + decimal.pow(0.0875,0.5)) inexact rounded', 0.296, 0 + decimal.pow(0.0875,0.5));
						AddTestCase('pwsx4577:p3 r:HALF_EVEN (0 + decimal.pow(0.876,0.5)) inexact rounded', 0.936, 0 + decimal.pow(0.876,0.5));
						AddTestCase('pwsx4578:p3 r:HALF_EVEN (0 + decimal.pow(0.0876,0.5)) inexact rounded', 0.296, 0 + decimal.pow(0.0876,0.5));
						AddTestCase('pwsx4579:p3 r:HALF_EVEN (0 + decimal.pow(0.877,0.5)) inexact rounded', 0.936, 0 + decimal.pow(0.877,0.5));
						AddTestCase('pwsx4580:p3 r:HALF_EVEN (0 + decimal.pow(0.0877,0.5)) inexact rounded', 0.296, 0 + decimal.pow(0.0877,0.5));
						AddTestCase('pwsx4581:p3 r:HALF_EVEN (0 + decimal.pow(0.878,0.5)) inexact rounded', 0.937, 0 + decimal.pow(0.878,0.5));
						AddTestCase('pwsx4582:p3 r:HALF_EVEN (0 + decimal.pow(0.0878,0.5)) inexact rounded', 0.296, 0 + decimal.pow(0.0878,0.5));
						AddTestCase('pwsx4583:p3 r:HALF_EVEN (0 + decimal.pow(0.879,0.5)) inexact rounded', 0.938, 0 + decimal.pow(0.879,0.5));
						AddTestCase('pwsx4584:p3 r:HALF_EVEN (0 + decimal.pow(0.0879,0.5)) inexact rounded', 0.296, 0 + decimal.pow(0.0879,0.5));
						AddTestCase('pwsx4585:p3 r:HALF_EVEN (0 + decimal.pow(0.881,0.5)) inexact rounded', 0.939, 0 + decimal.pow(0.881,0.5));
						AddTestCase('pwsx4586:p3 r:HALF_EVEN (0 + decimal.pow(0.0881,0.5)) inexact rounded', 0.297, 0 + decimal.pow(0.0881,0.5));
						AddTestCase('pwsx4587:p3 r:HALF_EVEN (0 + decimal.pow(0.882,0.5)) inexact rounded', 0.939, 0 + decimal.pow(0.882,0.5));
						AddTestCase('pwsx4588:p3 r:HALF_EVEN (0 + decimal.pow(0.0882,0.5)) inexact rounded', 0.297, 0 + decimal.pow(0.0882,0.5));
						AddTestCase('pwsx4589:p3 r:HALF_EVEN (0 + decimal.pow(0.883,0.5)) inexact rounded', 0.940, 0 + decimal.pow(0.883,0.5));
						AddTestCase('pwsx4590:p3 r:HALF_EVEN (0 + decimal.pow(0.0883,0.5)) inexact rounded', 0.297, 0 + decimal.pow(0.0883,0.5));
						AddTestCase('pwsx4591:p3 r:HALF_EVEN (0 + decimal.pow(0.884,0.5)) inexact rounded', 0.940, 0 + decimal.pow(0.884,0.5));
						AddTestCase('pwsx4592:p3 r:HALF_EVEN (0 + decimal.pow(0.0884,0.5)) inexact rounded', 0.297, 0 + decimal.pow(0.0884,0.5));
						AddTestCase('pwsx4593:p3 r:HALF_EVEN (0 + decimal.pow(0.885,0.5)) inexact rounded', 0.941, 0 + decimal.pow(0.885,0.5));
						AddTestCase('pwsx4594:p3 r:HALF_EVEN (0 + decimal.pow(0.0885,0.5)) inexact rounded', 0.297, 0 + decimal.pow(0.0885,0.5));
						AddTestCase('pwsx4595:p3 r:HALF_EVEN (0 + decimal.pow(0.886,0.5)) inexact rounded', 0.941, 0 + decimal.pow(0.886,0.5));
						AddTestCase('pwsx4596:p3 r:HALF_EVEN (0 + decimal.pow(0.0886,0.5)) inexact rounded', 0.298, 0 + decimal.pow(0.0886,0.5));
						AddTestCase('pwsx4597:p3 r:HALF_EVEN (0 + decimal.pow(0.887,0.5)) inexact rounded', 0.942, 0 + decimal.pow(0.887,0.5));
						AddTestCase('pwsx4598:p3 r:HALF_EVEN (0 + decimal.pow(0.0887,0.5)) inexact rounded', 0.298, 0 + decimal.pow(0.0887,0.5));
						AddTestCase('pwsx4599:p3 r:HALF_EVEN (0 + decimal.pow(0.888,0.5)) inexact rounded', 0.942, 0 + decimal.pow(0.888,0.5));
						AddTestCase('pwsx4600:p3 r:HALF_EVEN (0 + decimal.pow(0.0888,0.5)) inexact rounded', 0.298, 0 + decimal.pow(0.0888,0.5));
						AddTestCase('pwsx4601:p3 r:HALF_EVEN (0 + decimal.pow(0.889,0.5)) inexact rounded', 0.943, 0 + decimal.pow(0.889,0.5));
						AddTestCase('pwsx4602:p3 r:HALF_EVEN (0 + decimal.pow(0.0889,0.5)) inexact rounded', 0.298, 0 + decimal.pow(0.0889,0.5));
						AddTestCase('pwsx4603:p3 r:HALF_EVEN (0 + decimal.pow(0.891,0.5)) inexact rounded', 0.944, 0 + decimal.pow(0.891,0.5));
						AddTestCase('pwsx4604:p3 r:HALF_EVEN (0 + decimal.pow(0.0891,0.5)) inexact rounded', 0.298, 0 + decimal.pow(0.0891,0.5));
						AddTestCase('pwsx4605:p3 r:HALF_EVEN (0 + decimal.pow(0.892,0.5)) inexact rounded', 0.944, 0 + decimal.pow(0.892,0.5));
						AddTestCase('pwsx4606:p3 r:HALF_EVEN (0 + decimal.pow(0.0892,0.5)) inexact rounded', 0.299, 0 + decimal.pow(0.0892,0.5));
						AddTestCase('pwsx4607:p3 r:HALF_EVEN (0 + decimal.pow(0.893,0.5)) inexact rounded', 0.945, 0 + decimal.pow(0.893,0.5));
						AddTestCase('pwsx4608:p3 r:HALF_EVEN (0 + decimal.pow(0.0893,0.5)) inexact rounded', 0.299, 0 + decimal.pow(0.0893,0.5));
						AddTestCase('pwsx4609:p3 r:HALF_EVEN (0 + decimal.pow(0.894,0.5)) inexact rounded', 0.946, 0 + decimal.pow(0.894,0.5));
						AddTestCase('pwsx4610:p3 r:HALF_EVEN (0 + decimal.pow(0.0894,0.5)) inexact rounded', 0.299, 0 + decimal.pow(0.0894,0.5));
						AddTestCase('pwsx4611:p3 r:HALF_EVEN (0 + decimal.pow(0.895,0.5)) inexact rounded', 0.946, 0 + decimal.pow(0.895,0.5));
						AddTestCase('pwsx4612:p3 r:HALF_EVEN (0 + decimal.pow(0.0895,0.5)) inexact rounded', 0.299, 0 + decimal.pow(0.0895,0.5));
						AddTestCase('pwsx4613:p3 r:HALF_EVEN (0 + decimal.pow(0.896,0.5)) inexact rounded', 0.947, 0 + decimal.pow(0.896,0.5));
						AddTestCase('pwsx4614:p3 r:HALF_EVEN (0 + decimal.pow(0.0896,0.5)) inexact rounded', 0.299, 0 + decimal.pow(0.0896,0.5));
						AddTestCase('pwsx4615:p3 r:HALF_EVEN (0 + decimal.pow(0.897,0.5)) inexact rounded', 0.947, 0 + decimal.pow(0.897,0.5));
						AddTestCase('pwsx4616:p3 r:HALF_EVEN (0 + decimal.pow(0.0897,0.5)) inexact rounded', 0.299, 0 + decimal.pow(0.0897,0.5));
						AddTestCase('pwsx4617:p3 r:HALF_EVEN (0 + decimal.pow(0.898,0.5)) inexact rounded', 0.948, 0 + decimal.pow(0.898,0.5));
						AddTestCase('pwsx4618:p3 r:HALF_EVEN (0 + decimal.pow(0.0898,0.5)) inexact rounded', 0.300, 0 + decimal.pow(0.0898,0.5));
						AddTestCase('pwsx4619:p3 r:HALF_EVEN (0 + decimal.pow(0.899,0.5)) inexact rounded', 0.948, 0 + decimal.pow(0.899,0.5));
						AddTestCase('pwsx4620:p3 r:HALF_EVEN (0 + decimal.pow(0.0899,0.5)) inexact rounded', 0.300, 0 + decimal.pow(0.0899,0.5));
						AddTestCase('pwsx4621:p3 r:HALF_EVEN (0 + decimal.pow(0.901,0.5)) inexact rounded', 0.949, 0 + decimal.pow(0.901,0.5));
						AddTestCase('pwsx4622:p3 r:HALF_EVEN (0 + decimal.pow(0.0901,0.5)) inexact rounded', 0.300, 0 + decimal.pow(0.0901,0.5));
						AddTestCase('pwsx4623:p3 r:HALF_EVEN (0 + decimal.pow(0.902,0.5)) inexact rounded', 0.950, 0 + decimal.pow(0.902,0.5));
						AddTestCase('pwsx4624:p3 r:HALF_EVEN (0 + decimal.pow(0.0902,0.5)) inexact rounded', 0.300, 0 + decimal.pow(0.0902,0.5));
						AddTestCase('pwsx4625:p3 r:HALF_EVEN (0 + decimal.pow(0.903,0.5)) inexact rounded', 0.950, 0 + decimal.pow(0.903,0.5));
						AddTestCase('pwsx4626:p3 r:HALF_EVEN (0 + decimal.pow(0.0903,0.5)) inexact rounded', 0.300, 0 + decimal.pow(0.0903,0.5));
						AddTestCase('pwsx4627:p3 r:HALF_EVEN (0 + decimal.pow(0.904,0.5)) inexact rounded', 0.951, 0 + decimal.pow(0.904,0.5));
						AddTestCase('pwsx4628:p3 r:HALF_EVEN (0 + decimal.pow(0.0904,0.5)) inexact rounded', 0.301, 0 + decimal.pow(0.0904,0.5));
						AddTestCase('pwsx4629:p3 r:HALF_EVEN (0 + decimal.pow(0.905,0.5)) inexact rounded', 0.951, 0 + decimal.pow(0.905,0.5));
						AddTestCase('pwsx4630:p3 r:HALF_EVEN (0 + decimal.pow(0.0905,0.5)) inexact rounded', 0.301, 0 + decimal.pow(0.0905,0.5));
						AddTestCase('pwsx4631:p3 r:HALF_EVEN (0 + decimal.pow(0.906,0.5)) inexact rounded', 0.952, 0 + decimal.pow(0.906,0.5));
						AddTestCase('pwsx4632:p3 r:HALF_EVEN (0 + decimal.pow(0.0906,0.5)) inexact rounded', 0.301, 0 + decimal.pow(0.0906,0.5));
						AddTestCase('pwsx4633:p3 r:HALF_EVEN (0 + decimal.pow(0.907,0.5)) inexact rounded', 0.952, 0 + decimal.pow(0.907,0.5));
						AddTestCase('pwsx4634:p3 r:HALF_EVEN (0 + decimal.pow(0.0907,0.5)) inexact rounded', 0.301, 0 + decimal.pow(0.0907,0.5));
						AddTestCase('pwsx4635:p3 r:HALF_EVEN (0 + decimal.pow(0.908,0.5)) inexact rounded', 0.953, 0 + decimal.pow(0.908,0.5));
						AddTestCase('pwsx4636:p3 r:HALF_EVEN (0 + decimal.pow(0.0908,0.5)) inexact rounded', 0.301, 0 + decimal.pow(0.0908,0.5));
						AddTestCase('pwsx4637:p3 r:HALF_EVEN (0 + decimal.pow(0.909,0.5)) inexact rounded', 0.953, 0 + decimal.pow(0.909,0.5));
						AddTestCase('pwsx4638:p3 r:HALF_EVEN (0 + decimal.pow(0.0909,0.5)) inexact rounded', 0.301, 0 + decimal.pow(0.0909,0.5));
						AddTestCase('pwsx4639:p3 r:HALF_EVEN (0 + decimal.pow(0.911,0.5)) inexact rounded', 0.954, 0 + decimal.pow(0.911,0.5));
						AddTestCase('pwsx4640:p3 r:HALF_EVEN (0 + decimal.pow(0.0911,0.5)) inexact rounded', 0.302, 0 + decimal.pow(0.0911,0.5));
						AddTestCase('pwsx4641:p3 r:HALF_EVEN (0 + decimal.pow(0.912,0.5)) inexact rounded', 0.955, 0 + decimal.pow(0.912,0.5));
						AddTestCase('pwsx4642:p3 r:HALF_EVEN (0 + decimal.pow(0.0912,0.5)) inexact rounded', 0.302, 0 + decimal.pow(0.0912,0.5));
						AddTestCase('pwsx4643:p3 r:HALF_EVEN (0 + decimal.pow(0.913,0.5)) inexact rounded', 0.956, 0 + decimal.pow(0.913,0.5));
						AddTestCase('pwsx4644:p3 r:HALF_EVEN (0 + decimal.pow(0.0913,0.5)) inexact rounded', 0.302, 0 + decimal.pow(0.0913,0.5));
						AddTestCase('pwsx4645:p3 r:HALF_EVEN (0 + decimal.pow(0.914,0.5)) inexact rounded', 0.956, 0 + decimal.pow(0.914,0.5));
						AddTestCase('pwsx4646:p3 r:HALF_EVEN (0 + decimal.pow(0.0914,0.5)) inexact rounded', 0.302, 0 + decimal.pow(0.0914,0.5));
						AddTestCase('pwsx4647:p3 r:HALF_EVEN (0 + decimal.pow(0.915,0.5)) inexact rounded', 0.957, 0 + decimal.pow(0.915,0.5));
						AddTestCase('pwsx4648:p3 r:HALF_EVEN (0 + decimal.pow(0.0915,0.5)) inexact rounded', 0.302, 0 + decimal.pow(0.0915,0.5));
						AddTestCase('pwsx4649:p3 r:HALF_EVEN (0 + decimal.pow(0.916,0.5)) inexact rounded', 0.957, 0 + decimal.pow(0.916,0.5));
						AddTestCase('pwsx4650:p3 r:HALF_EVEN (0 + decimal.pow(0.0916,0.5)) inexact rounded', 0.303, 0 + decimal.pow(0.0916,0.5));
						AddTestCase('pwsx4651:p3 r:HALF_EVEN (0 + decimal.pow(0.917,0.5)) inexact rounded', 0.958, 0 + decimal.pow(0.917,0.5));
						AddTestCase('pwsx4652:p3 r:HALF_EVEN (0 + decimal.pow(0.0917,0.5)) inexact rounded', 0.303, 0 + decimal.pow(0.0917,0.5));
						AddTestCase('pwsx4653:p3 r:HALF_EVEN (0 + decimal.pow(0.918,0.5)) inexact rounded', 0.958, 0 + decimal.pow(0.918,0.5));
						AddTestCase('pwsx4654:p3 r:HALF_EVEN (0 + decimal.pow(0.0918,0.5)) inexact rounded', 0.303, 0 + decimal.pow(0.0918,0.5));
						AddTestCase('pwsx4655:p3 r:HALF_EVEN (0 + decimal.pow(0.919,0.5)) inexact rounded', 0.959, 0 + decimal.pow(0.919,0.5));
						AddTestCase('pwsx4656:p3 r:HALF_EVEN (0 + decimal.pow(0.0919,0.5)) inexact rounded', 0.303, 0 + decimal.pow(0.0919,0.5));
						AddTestCase('pwsx4657:p3 r:HALF_EVEN (0 + decimal.pow(0.921,0.5)) inexact rounded', 0.960, 0 + decimal.pow(0.921,0.5));
						AddTestCase('pwsx4658:p3 r:HALF_EVEN (0 + decimal.pow(0.0921,0.5)) inexact rounded', 0.303, 0 + decimal.pow(0.0921,0.5));
						AddTestCase('pwsx4659:p3 r:HALF_EVEN (0 + decimal.pow(0.922,0.5)) inexact rounded', 0.960, 0 + decimal.pow(0.922,0.5));
						AddTestCase('pwsx4660:p3 r:HALF_EVEN (0 + decimal.pow(0.0922,0.5)) inexact rounded', 0.304, 0 + decimal.pow(0.0922,0.5));
						AddTestCase('pwsx4661:p3 r:HALF_EVEN (0 + decimal.pow(0.923,0.5)) inexact rounded', 0.961, 0 + decimal.pow(0.923,0.5));
						AddTestCase('pwsx4662:p3 r:HALF_EVEN (0 + decimal.pow(0.0923,0.5)) inexact rounded', 0.304, 0 + decimal.pow(0.0923,0.5));
						AddTestCase('pwsx4663:p3 r:HALF_EVEN (0 + decimal.pow(0.924,0.5)) inexact rounded', 0.961, 0 + decimal.pow(0.924,0.5));
						AddTestCase('pwsx4664:p3 r:HALF_EVEN (0 + decimal.pow(0.0924,0.5)) inexact rounded', 0.304, 0 + decimal.pow(0.0924,0.5));
						AddTestCase('pwsx4665:p3 r:HALF_EVEN (0 + decimal.pow(0.925,0.5)) inexact rounded', 0.962, 0 + decimal.pow(0.925,0.5));
						AddTestCase('pwsx4666:p3 r:HALF_EVEN (0 + decimal.pow(0.0925,0.5)) inexact rounded', 0.304, 0 + decimal.pow(0.0925,0.5));
						AddTestCase('pwsx4667:p3 r:HALF_EVEN (0 + decimal.pow(0.926,0.5)) inexact rounded', 0.962, 0 + decimal.pow(0.926,0.5));
						AddTestCase('pwsx4668:p3 r:HALF_EVEN (0 + decimal.pow(0.0926,0.5)) inexact rounded', 0.304, 0 + decimal.pow(0.0926,0.5));
						AddTestCase('pwsx4669:p3 r:HALF_EVEN (0 + decimal.pow(0.927,0.5)) inexact rounded', 0.963, 0 + decimal.pow(0.927,0.5));
						AddTestCase('pwsx4670:p3 r:HALF_EVEN (0 + decimal.pow(0.0927,0.5)) inexact rounded', 0.304, 0 + decimal.pow(0.0927,0.5));
						AddTestCase('pwsx4671:p3 r:HALF_EVEN (0 + decimal.pow(0.928,0.5)) inexact rounded', 0.963, 0 + decimal.pow(0.928,0.5));
						AddTestCase('pwsx4672:p3 r:HALF_EVEN (0 + decimal.pow(0.0928,0.5)) inexact rounded', 0.305, 0 + decimal.pow(0.0928,0.5));
						AddTestCase('pwsx4673:p3 r:HALF_EVEN (0 + decimal.pow(0.929,0.5)) inexact rounded', 0.964, 0 + decimal.pow(0.929,0.5));
						AddTestCase('pwsx4674:p3 r:HALF_EVEN (0 + decimal.pow(0.0929,0.5)) inexact rounded', 0.305, 0 + decimal.pow(0.0929,0.5));
						AddTestCase('pwsx4675:p3 r:HALF_EVEN (0 + decimal.pow(0.931,0.5)) inexact rounded', 0.965, 0 + decimal.pow(0.931,0.5));
						AddTestCase('pwsx4676:p3 r:HALF_EVEN (0 + decimal.pow(0.0931,0.5)) inexact rounded', 0.305, 0 + decimal.pow(0.0931,0.5));
						AddTestCase('pwsx4677:p3 r:HALF_EVEN (0 + decimal.pow(0.932,0.5)) inexact rounded', 0.965, 0 + decimal.pow(0.932,0.5));
						AddTestCase('pwsx4678:p3 r:HALF_EVEN (0 + decimal.pow(0.0932,0.5)) inexact rounded', 0.305, 0 + decimal.pow(0.0932,0.5));
						AddTestCase('pwsx4679:p3 r:HALF_EVEN (0 + decimal.pow(0.933,0.5)) inexact rounded', 0.966, 0 + decimal.pow(0.933,0.5));
						AddTestCase('pwsx4680:p3 r:HALF_EVEN (0 + decimal.pow(0.0933,0.5)) inexact rounded', 0.305, 0 + decimal.pow(0.0933,0.5));
						AddTestCase('pwsx4681:p3 r:HALF_EVEN (0 + decimal.pow(0.934,0.5)) inexact rounded', 0.966, 0 + decimal.pow(0.934,0.5));
						AddTestCase('pwsx4682:p3 r:HALF_EVEN (0 + decimal.pow(0.0934,0.5)) inexact rounded', 0.306, 0 + decimal.pow(0.0934,0.5));
						AddTestCase('pwsx4683:p3 r:HALF_EVEN (0 + decimal.pow(0.935,0.5)) inexact rounded', 0.967, 0 + decimal.pow(0.935,0.5));
						AddTestCase('pwsx4684:p3 r:HALF_EVEN (0 + decimal.pow(0.0935,0.5)) inexact rounded', 0.306, 0 + decimal.pow(0.0935,0.5));
						AddTestCase('pwsx4685:p3 r:HALF_EVEN (0 + decimal.pow(0.936,0.5)) inexact rounded', 0.967, 0 + decimal.pow(0.936,0.5));
						AddTestCase('pwsx4686:p3 r:HALF_EVEN (0 + decimal.pow(0.0936,0.5)) inexact rounded', 0.306, 0 + decimal.pow(0.0936,0.5));
						AddTestCase('pwsx4687:p3 r:HALF_EVEN (0 + decimal.pow(0.937,0.5)) inexact rounded', 0.968, 0 + decimal.pow(0.937,0.5));
						AddTestCase('pwsx4688:p3 r:HALF_EVEN (0 + decimal.pow(0.0937,0.5)) inexact rounded', 0.306, 0 + decimal.pow(0.0937,0.5));
						AddTestCase('pwsx4689:p3 r:HALF_EVEN (0 + decimal.pow(0.938,0.5)) inexact rounded', 0.969, 0 + decimal.pow(0.938,0.5));
						AddTestCase('pwsx4690:p3 r:HALF_EVEN (0 + decimal.pow(0.0938,0.5)) inexact rounded', 0.306, 0 + decimal.pow(0.0938,0.5));
						AddTestCase('pwsx4691:p3 r:HALF_EVEN (0 + decimal.pow(0.939,0.5)) inexact rounded', 0.969, 0 + decimal.pow(0.939,0.5));
						AddTestCase('pwsx4692:p3 r:HALF_EVEN (0 + decimal.pow(0.0939,0.5)) inexact rounded', 0.306, 0 + decimal.pow(0.0939,0.5));
						AddTestCase('pwsx4693:p3 r:HALF_EVEN (0 + decimal.pow(0.941,0.5)) inexact rounded', 0.970, 0 + decimal.pow(0.941,0.5));
						AddTestCase('pwsx4694:p3 r:HALF_EVEN (0 + decimal.pow(0.0941,0.5)) inexact rounded', 0.307, 0 + decimal.pow(0.0941,0.5));
						AddTestCase('pwsx4695:p3 r:HALF_EVEN (0 + decimal.pow(0.942,0.5)) inexact rounded', 0.971, 0 + decimal.pow(0.942,0.5));
						AddTestCase('pwsx4696:p3 r:HALF_EVEN (0 + decimal.pow(0.0942,0.5)) inexact rounded', 0.307, 0 + decimal.pow(0.0942,0.5));
						AddTestCase('pwsx4697:p3 r:HALF_EVEN (0 + decimal.pow(0.943,0.5)) inexact rounded', 0.971, 0 + decimal.pow(0.943,0.5));
						AddTestCase('pwsx4698:p3 r:HALF_EVEN (0 + decimal.pow(0.0943,0.5)) inexact rounded', 0.307, 0 + decimal.pow(0.0943,0.5));
						AddTestCase('pwsx4699:p3 r:HALF_EVEN (0 + decimal.pow(0.944,0.5)) inexact rounded', 0.972, 0 + decimal.pow(0.944,0.5));
						AddTestCase('pwsx4700:p3 r:HALF_EVEN (0 + decimal.pow(0.0944,0.5)) inexact rounded', 0.307, 0 + decimal.pow(0.0944,0.5));
						AddTestCase('pwsx4701:p3 r:HALF_EVEN (0 + decimal.pow(0.945,0.5)) inexact rounded', 0.972, 0 + decimal.pow(0.945,0.5));
						AddTestCase('pwsx4702:p3 r:HALF_EVEN (0 + decimal.pow(0.0945,0.5)) inexact rounded', 0.307, 0 + decimal.pow(0.0945,0.5));
						AddTestCase('pwsx4703:p3 r:HALF_EVEN (0 + decimal.pow(0.946,0.5)) inexact rounded', 0.973, 0 + decimal.pow(0.946,0.5));
						AddTestCase('pwsx4704:p3 r:HALF_EVEN (0 + decimal.pow(0.0946,0.5)) inexact rounded', 0.308, 0 + decimal.pow(0.0946,0.5));
						AddTestCase('pwsx4705:p3 r:HALF_EVEN (0 + decimal.pow(0.947,0.5)) inexact rounded', 0.973, 0 + decimal.pow(0.947,0.5));
						AddTestCase('pwsx4706:p3 r:HALF_EVEN (0 + decimal.pow(0.0947,0.5)) inexact rounded', 0.308, 0 + decimal.pow(0.0947,0.5));
						AddTestCase('pwsx4707:p3 r:HALF_EVEN (0 + decimal.pow(0.948,0.5)) inexact rounded', 0.974, 0 + decimal.pow(0.948,0.5));
						AddTestCase('pwsx4708:p3 r:HALF_EVEN (0 + decimal.pow(0.0948,0.5)) inexact rounded', 0.308, 0 + decimal.pow(0.0948,0.5));
						AddTestCase('pwsx4709:p3 r:HALF_EVEN (0 + decimal.pow(0.949,0.5)) inexact rounded', 0.974, 0 + decimal.pow(0.949,0.5));
						AddTestCase('pwsx4710:p3 r:HALF_EVEN (0 + decimal.pow(0.0949,0.5)) inexact rounded', 0.308, 0 + decimal.pow(0.0949,0.5));
						AddTestCase('pwsx4711:p3 r:HALF_EVEN (0 + decimal.pow(0.951,0.5)) inexact rounded', 0.975, 0 + decimal.pow(0.951,0.5));
						AddTestCase('pwsx4712:p3 r:HALF_EVEN (0 + decimal.pow(0.0951,0.5)) inexact rounded', 0.308, 0 + decimal.pow(0.0951,0.5));
						AddTestCase('pwsx4713:p3 r:HALF_EVEN (0 + decimal.pow(0.952,0.5)) inexact rounded', 0.976, 0 + decimal.pow(0.952,0.5));
						AddTestCase('pwsx4714:p3 r:HALF_EVEN (0 + decimal.pow(0.0952,0.5)) inexact rounded', 0.309, 0 + decimal.pow(0.0952,0.5));
						AddTestCase('pwsx4715:p3 r:HALF_EVEN (0 + decimal.pow(0.953,0.5)) inexact rounded', 0.976, 0 + decimal.pow(0.953,0.5));
						AddTestCase('pwsx4716:p3 r:HALF_EVEN (0 + decimal.pow(0.0953,0.5)) inexact rounded', 0.309, 0 + decimal.pow(0.0953,0.5));
						AddTestCase('pwsx4717:p3 r:HALF_EVEN (0 + decimal.pow(0.954,0.5)) inexact rounded', 0.977, 0 + decimal.pow(0.954,0.5));
						AddTestCase('pwsx4718:p3 r:HALF_EVEN (0 + decimal.pow(0.0954,0.5)) inexact rounded', 0.309, 0 + decimal.pow(0.0954,0.5));
						AddTestCase('pwsx4719:p3 r:HALF_EVEN (0 + decimal.pow(0.955,0.5)) inexact rounded', 0.977, 0 + decimal.pow(0.955,0.5));
						AddTestCase('pwsx4720:p3 r:HALF_EVEN (0 + decimal.pow(0.0955,0.5)) inexact rounded', 0.309, 0 + decimal.pow(0.0955,0.5));
						AddTestCase('pwsx4721:p3 r:HALF_EVEN (0 + decimal.pow(0.956,0.5)) inexact rounded', 0.978, 0 + decimal.pow(0.956,0.5));
						AddTestCase('pwsx4722:p3 r:HALF_EVEN (0 + decimal.pow(0.0956,0.5)) inexact rounded', 0.309, 0 + decimal.pow(0.0956,0.5));
						AddTestCase('pwsx4723:p3 r:HALF_EVEN (0 + decimal.pow(0.957,0.5)) inexact rounded', 0.978, 0 + decimal.pow(0.957,0.5));
						AddTestCase('pwsx4724:p3 r:HALF_EVEN (0 + decimal.pow(0.0957,0.5)) inexact rounded', 0.309, 0 + decimal.pow(0.0957,0.5));
						AddTestCase('pwsx4725:p3 r:HALF_EVEN (0 + decimal.pow(0.958,0.5)) inexact rounded', 0.979, 0 + decimal.pow(0.958,0.5));
						AddTestCase('pwsx4726:p3 r:HALF_EVEN (0 + decimal.pow(0.0958,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.0958,0.5));
						AddTestCase('pwsx4727:p3 r:HALF_EVEN (0 + decimal.pow(0.959,0.5)) inexact rounded', 0.979, 0 + decimal.pow(0.959,0.5));
						AddTestCase('pwsx4728:p3 r:HALF_EVEN (0 + decimal.pow(0.0959,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.0959,0.5));
						AddTestCase('pwsx4729:p3 r:HALF_EVEN (0 + decimal.pow(0.961,0.5)) inexact rounded', 0.980, 0 + decimal.pow(0.961,0.5));
						AddTestCase('pwsx4730:p3 r:HALF_EVEN (0 + decimal.pow(0.0961,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.0961,0.5));
						AddTestCase('pwsx4731:p3 r:HALF_EVEN (0 + decimal.pow(0.962,0.5)) inexact rounded', 0.981, 0 + decimal.pow(0.962,0.5));
						AddTestCase('pwsx4732:p3 r:HALF_EVEN (0 + decimal.pow(0.0962,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.0962,0.5));
						AddTestCase('pwsx4733:p3 r:HALF_EVEN (0 + decimal.pow(0.963,0.5)) inexact rounded', 0.981, 0 + decimal.pow(0.963,0.5));
						AddTestCase('pwsx4734:p3 r:HALF_EVEN (0 + decimal.pow(0.0963,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.0963,0.5));
						AddTestCase('pwsx4735:p3 r:HALF_EVEN (0 + decimal.pow(0.964,0.5)) inexact rounded', 0.982, 0 + decimal.pow(0.964,0.5));
						AddTestCase('pwsx4736:p3 r:HALF_EVEN (0 + decimal.pow(0.0964,0.5)) inexact rounded', 0.310, 0 + decimal.pow(0.0964,0.5));
						AddTestCase('pwsx4737:p3 r:HALF_EVEN (0 + decimal.pow(0.965,0.5)) inexact rounded', 0.982, 0 + decimal.pow(0.965,0.5));
						AddTestCase('pwsx4738:p3 r:HALF_EVEN (0 + decimal.pow(0.0965,0.5)) inexact rounded', 0.311, 0 + decimal.pow(0.0965,0.5));
						AddTestCase('pwsx4739:p3 r:HALF_EVEN (0 + decimal.pow(0.966,0.5)) inexact rounded', 0.983, 0 + decimal.pow(0.966,0.5));
						AddTestCase('pwsx4740:p3 r:HALF_EVEN (0 + decimal.pow(0.0966,0.5)) inexact rounded', 0.311, 0 + decimal.pow(0.0966,0.5));
						AddTestCase('pwsx4741:p3 r:HALF_EVEN (0 + decimal.pow(0.967,0.5)) inexact rounded', 0.983, 0 + decimal.pow(0.967,0.5));
						AddTestCase('pwsx4742:p3 r:HALF_EVEN (0 + decimal.pow(0.0967,0.5)) inexact rounded', 0.311, 0 + decimal.pow(0.0967,0.5));
						AddTestCase('pwsx4743:p3 r:HALF_EVEN (0 + decimal.pow(0.968,0.5)) inexact rounded', 0.984, 0 + decimal.pow(0.968,0.5));
						AddTestCase('pwsx4744:p3 r:HALF_EVEN (0 + decimal.pow(0.0968,0.5)) inexact rounded', 0.311, 0 + decimal.pow(0.0968,0.5));
						AddTestCase('pwsx4745:p3 r:HALF_EVEN (0 + decimal.pow(0.969,0.5)) inexact rounded', 0.984, 0 + decimal.pow(0.969,0.5));
						AddTestCase('pwsx4746:p3 r:HALF_EVEN (0 + decimal.pow(0.0969,0.5)) inexact rounded', 0.311, 0 + decimal.pow(0.0969,0.5));
						AddTestCase('pwsx4747:p3 r:HALF_EVEN (0 + decimal.pow(0.971,0.5)) inexact rounded', 0.985, 0 + decimal.pow(0.971,0.5));
						AddTestCase('pwsx4748:p3 r:HALF_EVEN (0 + decimal.pow(0.0971,0.5)) inexact rounded', 0.312, 0 + decimal.pow(0.0971,0.5));
						AddTestCase('pwsx4749:p3 r:HALF_EVEN (0 + decimal.pow(0.972,0.5)) inexact rounded', 0.986, 0 + decimal.pow(0.972,0.5));
						AddTestCase('pwsx4750:p3 r:HALF_EVEN (0 + decimal.pow(0.0972,0.5)) inexact rounded', 0.312, 0 + decimal.pow(0.0972,0.5));
						AddTestCase('pwsx4751:p3 r:HALF_EVEN (0 + decimal.pow(0.973,0.5)) inexact rounded', 0.986, 0 + decimal.pow(0.973,0.5));
						AddTestCase('pwsx4752:p3 r:HALF_EVEN (0 + decimal.pow(0.0973,0.5)) inexact rounded', 0.312, 0 + decimal.pow(0.0973,0.5));
						AddTestCase('pwsx4753:p3 r:HALF_EVEN (0 + decimal.pow(0.974,0.5)) inexact rounded', 0.987, 0 + decimal.pow(0.974,0.5));
						AddTestCase('pwsx4754:p3 r:HALF_EVEN (0 + decimal.pow(0.0974,0.5)) inexact rounded', 0.312, 0 + decimal.pow(0.0974,0.5));
						AddTestCase('pwsx4755:p3 r:HALF_EVEN (0 + decimal.pow(0.975,0.5)) inexact rounded', 0.987, 0 + decimal.pow(0.975,0.5));
						AddTestCase('pwsx4756:p3 r:HALF_EVEN (0 + decimal.pow(0.0975,0.5)) inexact rounded', 0.312, 0 + decimal.pow(0.0975,0.5));
						AddTestCase('pwsx4757:p3 r:HALF_EVEN (0 + decimal.pow(0.976,0.5)) inexact rounded', 0.988, 0 + decimal.pow(0.976,0.5));
						AddTestCase('pwsx4758:p3 r:HALF_EVEN (0 + decimal.pow(0.0976,0.5)) inexact rounded', 0.312, 0 + decimal.pow(0.0976,0.5));
						AddTestCase('pwsx4759:p3 r:HALF_EVEN (0 + decimal.pow(0.977,0.5)) inexact rounded', 0.988, 0 + decimal.pow(0.977,0.5));
						AddTestCase('pwsx4760:p3 r:HALF_EVEN (0 + decimal.pow(0.0977,0.5)) inexact rounded', 0.313, 0 + decimal.pow(0.0977,0.5));
						AddTestCase('pwsx4761:p3 r:HALF_EVEN (0 + decimal.pow(0.978,0.5)) inexact rounded', 0.989, 0 + decimal.pow(0.978,0.5));
						AddTestCase('pwsx4762:p3 r:HALF_EVEN (0 + decimal.pow(0.0978,0.5)) inexact rounded', 0.313, 0 + decimal.pow(0.0978,0.5));
						AddTestCase('pwsx4763:p3 r:HALF_EVEN (0 + decimal.pow(0.979,0.5)) inexact rounded', 0.989, 0 + decimal.pow(0.979,0.5));
						AddTestCase('pwsx4764:p3 r:HALF_EVEN (0 + decimal.pow(0.0979,0.5)) inexact rounded', 0.313, 0 + decimal.pow(0.0979,0.5));
						AddTestCase('pwsx4765:p3 r:HALF_EVEN (0 + decimal.pow(0.981,0.5)) inexact rounded', 0.990, 0 + decimal.pow(0.981,0.5));
						AddTestCase('pwsx4766:p3 r:HALF_EVEN (0 + decimal.pow(0.0981,0.5)) inexact rounded', 0.313, 0 + decimal.pow(0.0981,0.5));
						AddTestCase('pwsx4767:p3 r:HALF_EVEN (0 + decimal.pow(0.982,0.5)) inexact rounded', 0.991, 0 + decimal.pow(0.982,0.5));
						AddTestCase('pwsx4768:p3 r:HALF_EVEN (0 + decimal.pow(0.0982,0.5)) inexact rounded', 0.313, 0 + decimal.pow(0.0982,0.5));
						AddTestCase('pwsx4769:p3 r:HALF_EVEN (0 + decimal.pow(0.983,0.5)) inexact rounded', 0.991, 0 + decimal.pow(0.983,0.5));
						AddTestCase('pwsx4770:p3 r:HALF_EVEN (0 + decimal.pow(0.0983,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0983,0.5));
						AddTestCase('pwsx4771:p3 r:HALF_EVEN (0 + decimal.pow(0.984,0.5)) inexact rounded', 0.992, 0 + decimal.pow(0.984,0.5));
						AddTestCase('pwsx4772:p3 r:HALF_EVEN (0 + decimal.pow(0.0984,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0984,0.5));
						AddTestCase('pwsx4773:p3 r:HALF_EVEN (0 + decimal.pow(0.985,0.5)) inexact rounded', 0.992, 0 + decimal.pow(0.985,0.5));
						AddTestCase('pwsx4774:p3 r:HALF_EVEN (0 + decimal.pow(0.0985,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0985,0.5));
						AddTestCase('pwsx4775:p3 r:HALF_EVEN (0 + decimal.pow(0.986,0.5)) inexact rounded', 0.993, 0 + decimal.pow(0.986,0.5));
						AddTestCase('pwsx4776:p3 r:HALF_EVEN (0 + decimal.pow(0.0986,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0986,0.5));
						AddTestCase('pwsx4777:p3 r:HALF_EVEN (0 + decimal.pow(0.987,0.5)) inexact rounded', 0.993, 0 + decimal.pow(0.987,0.5));
						AddTestCase('pwsx4778:p3 r:HALF_EVEN (0 + decimal.pow(0.0987,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0987,0.5));
						AddTestCase('pwsx4779:p3 r:HALF_EVEN (0 + decimal.pow(0.988,0.5)) inexact rounded', 0.994, 0 + decimal.pow(0.988,0.5));
						AddTestCase('pwsx4780:p3 r:HALF_EVEN (0 + decimal.pow(0.0988,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0988,0.5));
						AddTestCase('pwsx4781:p3 r:HALF_EVEN (0 + decimal.pow(0.989,0.5)) inexact rounded', 0.994, 0 + decimal.pow(0.989,0.5));
						AddTestCase('pwsx4782:p3 r:HALF_EVEN (0 + decimal.pow(0.0989,0.5)) inexact rounded', 0.314, 0 + decimal.pow(0.0989,0.5));
						AddTestCase('pwsx4783:p3 r:HALF_EVEN (0 + decimal.pow(0.991,0.5)) inexact rounded', 0.995, 0 + decimal.pow(0.991,0.5));
						AddTestCase('pwsx4784:p3 r:HALF_EVEN (0 + decimal.pow(0.0991,0.5)) inexact rounded', 0.315, 0 + decimal.pow(0.0991,0.5));
						AddTestCase('pwsx4785:p3 r:HALF_EVEN (0 + decimal.pow(0.992,0.5)) inexact rounded', 0.996, 0 + decimal.pow(0.992,0.5));
						AddTestCase('pwsx4786:p3 r:HALF_EVEN (0 + decimal.pow(0.0992,0.5)) inexact rounded', 0.315, 0 + decimal.pow(0.0992,0.5));
						AddTestCase('pwsx4787:p3 r:HALF_EVEN (0 + decimal.pow(0.993,0.5)) inexact rounded', 0.996, 0 + decimal.pow(0.993,0.5));
						AddTestCase('pwsx4788:p3 r:HALF_EVEN (0 + decimal.pow(0.0993,0.5)) inexact rounded', 0.315, 0 + decimal.pow(0.0993,0.5));
						AddTestCase('pwsx4789:p3 r:HALF_EVEN (0 + decimal.pow(0.994,0.5)) inexact rounded', 0.997, 0 + decimal.pow(0.994,0.5));
						AddTestCase('pwsx4790:p3 r:HALF_EVEN (0 + decimal.pow(0.0994,0.5)) inexact rounded', 0.315, 0 + decimal.pow(0.0994,0.5));
						AddTestCase('pwsx4791:p3 r:HALF_EVEN (0 + decimal.pow(0.995,0.5)) inexact rounded', 0.997, 0 + decimal.pow(0.995,0.5));
						AddTestCase('pwsx4792:p3 r:HALF_EVEN (0 + decimal.pow(0.0995,0.5)) inexact rounded', 0.315, 0 + decimal.pow(0.0995,0.5));
						AddTestCase('pwsx4793:p3 r:HALF_EVEN (0 + decimal.pow(0.996,0.5)) inexact rounded', 0.998, 0 + decimal.pow(0.996,0.5));
						AddTestCase('pwsx4794:p3 r:HALF_EVEN (0 + decimal.pow(0.0996,0.5)) inexact rounded', 0.316, 0 + decimal.pow(0.0996,0.5));
						AddTestCase('pwsx4795:p3 r:HALF_EVEN (0 + decimal.pow(0.997,0.5)) inexact rounded', 0.998, 0 + decimal.pow(0.997,0.5));
						AddTestCase('pwsx4796:p3 r:HALF_EVEN (0 + decimal.pow(0.0997,0.5)) inexact rounded', 0.316, 0 + decimal.pow(0.0997,0.5));
						AddTestCase('pwsx4797:p3 r:HALF_EVEN (0 + decimal.pow(0.998,0.5)) inexact rounded', 0.999, 0 + decimal.pow(0.998,0.5));
						AddTestCase('pwsx4798:p3 r:HALF_EVEN (0 + decimal.pow(0.0998,0.5)) inexact rounded', 0.316, 0 + decimal.pow(0.0998,0.5));
						AddTestCase('pwsx4799:p3 r:HALF_EVEN (0 + decimal.pow(0.999,0.5)) inexact rounded', 0.999, 0 + decimal.pow(0.999,0.5));
						AddTestCase('pwsx4800:p3 r:HALF_EVEN (0 + decimal.pow(0.0999,0.5)) inexact rounded', 0.316, 0 + decimal.pow(0.0999,0.5));
						// a group of precision 4 tests where hull & abrham adjustments are
						// needed in some cases (both up and down) [see hull1985b]
						{
							use rounding HALF_EVEN;
							{
								use precision 4;
								AddTestCase('pwsx5001:p4 r:HALF_EVEN (0 + decimal.pow(0.0118,0.5)) inexact rounded', 0.1086, 0 + decimal.pow(0.0118,0.5));
								AddTestCase('pwsx5002:p4 r:HALF_EVEN (0 + decimal.pow(0.119,0.5)) inexact rounded', 0.3450, 0 + decimal.pow(0.119,0.5));
								AddTestCase('pwsx5003:p4 r:HALF_EVEN (0 + decimal.pow(0.0119,0.5)) inexact rounded', 0.1091, 0 + decimal.pow(0.0119,0.5));
								AddTestCase('pwsx5004:p4 r:HALF_EVEN (0 + decimal.pow(0.121,0.5)) inexact rounded', 0.3479, 0 + decimal.pow(0.121,0.5));
								AddTestCase('pwsx5005:p4 r:HALF_EVEN (0 + decimal.pow(0.0121,0.5)) inexact rounded', 0.1100, 0 + decimal.pow(0.0121,0.5));
								AddTestCase('pwsx5006:p4 r:HALF_EVEN (0 + decimal.pow(0.122,0.5)) inexact rounded', 0.3493, 0 + decimal.pow(0.122,0.5));
								AddTestCase('pwsx5007:p4 r:HALF_EVEN (0 + decimal.pow(0.0122,0.5)) inexact rounded', 0.1105, 0 + decimal.pow(0.0122,0.5));
								AddTestCase('pwsx5008:p4 r:HALF_EVEN (0 + decimal.pow(0.123,0.5)) inexact rounded', 0.3507, 0 + decimal.pow(0.123,0.5));
								AddTestCase('pwsx5009:p4 r:HALF_EVEN (0 + decimal.pow(0.494,0.5)) inexact rounded', 0.7029, 0 + decimal.pow(0.494,0.5));
								AddTestCase('pwsx5010:p4 r:HALF_EVEN (0 + decimal.pow(0.0669,0.5)) inexact rounded', 0.2587, 0 + decimal.pow(0.0669,0.5));
								AddTestCase('pwsx5011:p4 r:HALF_EVEN (0 + decimal.pow(0.9558,0.5)) inexact rounded', 0.9777, 0 + decimal.pow(0.9558,0.5));
								AddTestCase('pwsx5012:p4 r:HALF_EVEN (0 + decimal.pow(0.9348,0.5)) inexact rounded', 0.9669, 0 + decimal.pow(0.9348,0.5));
								AddTestCase('pwsx5013:p4 r:HALF_EVEN (0 + decimal.pow(0.9345,0.5)) inexact rounded', 0.9667, 0 + decimal.pow(0.9345,0.5));
								AddTestCase('pwsx5014:p4 r:HALF_EVEN (0 + decimal.pow(0.09345,0.5)) inexact rounded', 0.3057, 0 + decimal.pow(0.09345,0.5));
								AddTestCase('pwsx5015:p4 r:HALF_EVEN (0 + decimal.pow(0.9346,0.5)) inexact rounded', 0.9667, 0 + decimal.pow(0.9346,0.5));
								AddTestCase('pwsx5016:p4 r:HALF_EVEN (0 + decimal.pow(0.09346,0.5)) inexact rounded', 0.3057, 0 + decimal.pow(0.09346,0.5));
								AddTestCase('pwsx5017:p4 r:HALF_EVEN (0 + decimal.pow(0.9347,0.5)) inexact rounded', 0.9668, 0 + decimal.pow(0.9347,0.5));
								// examples from decarith
							}
							{
								use precision 9;
								AddTestCase('pwsx700:p9 r:HALF_EVEN (0 + decimal.pow(0,0.5))', 0, 0 + decimal.pow(0,0.5));
								AddTestCase('pwsx701:p9 r:HALF_EVEN (0 + decimal.pow(-0,0.5))', 0, 0 + decimal.pow(-0,0.5));
								AddTestCase('pwsx702:p9 r:HALF_EVEN (0 + decimal.pow(0.39,0.5)) inexact rounded', 0.624499800, 0 + decimal.pow(0.39,0.5));
								AddTestCase('pwsx703:p9 r:HALF_EVEN (0 + decimal.pow(100,0.5)) inexact rounded', 10.0000000, 0 + decimal.pow(100,0.5));
								AddTestCase('pwsx704:p9 r:HALF_EVEN (0 + decimal.pow(1.00,0.5)) inexact rounded', 1.00000000, 0 + decimal.pow(1.00,0.5));
								AddTestCase('pwsx705:p9 r:HALF_EVEN (0 + decimal.pow(7,0.5)) inexact rounded', 2.64575131, 0 + decimal.pow(7,0.5));
								AddTestCase('pwsx706:p9 r:HALF_EVEN (0 + decimal.pow(10,0.5)) inexact rounded', 3.16227766, 0 + decimal.pow(10,0.5));
								// some one-offs
							}
							{
								use precision 9;
								AddTestCase('pwsx711:p9 r:HALF_EVEN (0 + decimal.pow(0.1,0.5)) inexact rounded', 0.316227766, 0 + decimal.pow(0.1,0.5));
								AddTestCase('pwsx712:p9 r:HALF_EVEN (0 + decimal.pow(0.2,0.5)) inexact rounded', 0.447213595, 0 + decimal.pow(0.2,0.5));
								AddTestCase('pwsx713:p9 r:HALF_EVEN (0 + decimal.pow(0.3,0.5)) inexact rounded', 0.547722558, 0 + decimal.pow(0.3,0.5));
								AddTestCase('pwsx714:p9 r:HALF_EVEN (0 + decimal.pow(0.4,0.5)) inexact rounded', 0.632455532, 0 + decimal.pow(0.4,0.5));
								AddTestCase('pwsx715:p9 r:HALF_EVEN (0 + decimal.pow(0.5,0.5)) inexact rounded', 0.707106781, 0 + decimal.pow(0.5,0.5));
								AddTestCase('pwsx716:p9 r:HALF_EVEN (0 + decimal.pow(0.6,0.5)) inexact rounded', 0.774596669, 0 + decimal.pow(0.6,0.5));
								AddTestCase('pwsx717:p9 r:HALF_EVEN (0 + decimal.pow(0.7,0.5)) inexact rounded', 0.836660027, 0 + decimal.pow(0.7,0.5));
								AddTestCase('pwsx718:p9 r:HALF_EVEN (0 + decimal.pow(0.8,0.5)) inexact rounded', 0.894427191, 0 + decimal.pow(0.8,0.5));
								AddTestCase('pwsx719:p9 r:HALF_EVEN (0 + decimal.pow(0.9,0.5)) inexact rounded', 0.948683298, 0 + decimal.pow(0.9,0.5));
							}
							{
								use precision 10;
								AddTestCase('pwsx720:p10 r:HALF_EVEN (0 + decimal.pow(+0.1,0.5)) inexact rounded', 0.3162277660, 0 + decimal.pow(+0.1,0.5));
							}
							{
								use precision 11;
								AddTestCase('pwsx721:p11 r:HALF_EVEN (0 + decimal.pow(+0.1,0.5)) inexact rounded', 0.31622776602, 0 + decimal.pow(+0.1,0.5));
							}
							{
								use precision 12;
								AddTestCase('pwsx722:p12 r:HALF_EVEN (0 + decimal.pow(+0.1,0.5)) inexact rounded', 0.316227766017, 0 + decimal.pow(+0.1,0.5));
							}
							{
								use precision 9;
								AddTestCase('pwsx723:p9 r:HALF_EVEN (0 + decimal.pow(0.39,0.5)) inexact rounded', 0.624499800, 0 + decimal.pow(0.39,0.5));
							}
							{
								use precision 15;
								AddTestCase('pwsx724:p15 r:HALF_EVEN (0 + decimal.pow(0.39,0.5)) inexact rounded', 0.624499799839840, 0 + decimal.pow(0.39,0.5));
								// discussion cases
							}
							{
								use precision 7;
								AddTestCase('pwsx731:p7 r:HALF_EVEN (0 + decimal.pow(9,0.5)) inexact rounded', 3.000000, 0 + decimal.pow(9,0.5));
								AddTestCase('pwsx732:p7 r:HALF_EVEN (0 + decimal.pow(100,0.5)) inexact rounded', 10.00000, 0 + decimal.pow(100,0.5));
								AddTestCase('pwsx733:p7 r:HALF_EVEN (0 + decimal.pow(123,0.5)) inexact rounded', 11.09054, 0 + decimal.pow(123,0.5));
								AddTestCase('pwsx734:p7 r:HALF_EVEN (0 + decimal.pow(144,0.5)) inexact rounded', 12.00000, 0 + decimal.pow(144,0.5));
								AddTestCase('pwsx735:p7 r:HALF_EVEN (0 + decimal.pow(156,0.5)) inexact rounded', 12.49000, 0 + decimal.pow(156,0.5));
								AddTestCase('pwsx736:p7 r:HALF_EVEN (0 + decimal.pow(10000,0.5)) inexact rounded', 100.0000, 0 + decimal.pow(10000,0.5));
								// values close to overflow (if there were input rounding)
							}
							{
								use precision 5;
								AddTestCase('pwsx760:p5 r:HALF_EVEN (0 + decimal.pow(9.9997e+99,0.5)) inexact rounded', 9.9998e+49, 0 + decimal.pow(9.9997e+99,0.5));
								AddTestCase('pwsx761:p5 r:HALF_EVEN (0 + decimal.pow(9.9998e+99,0.5)) inexact rounded', 9.9999e+49, 0 + decimal.pow(9.9998e+99,0.5));
								AddTestCase('pwsx762:p5 r:HALF_EVEN (0 + decimal.pow(9.9999e+99,0.5)) inexact rounded', 9.9999e+49, 0 + decimal.pow(9.9999e+99,0.5));
								AddTestCase('pwsx763:p5 r:HALF_EVEN (0 + decimal.pow(9.99991e+99,0.5)) inexact rounded', 1.0000e+50, 0 + decimal.pow(9.99991e+99,0.5));
								AddTestCase('pwsx764:p5 r:HALF_EVEN (0 + decimal.pow(9.99994e+99,0.5)) inexact rounded', 1.0000e+50, 0 + decimal.pow(9.99994e+99,0.5));
								AddTestCase('pwsx765:p5 r:HALF_EVEN (0 + decimal.pow(9.99995e+99,0.5)) inexact rounded', 1.0000e+50, 0 + decimal.pow(9.99995e+99,0.5));
								AddTestCase('pwsx766:p5 r:HALF_EVEN (0 + decimal.pow(9.99999e+99,0.5)) inexact rounded', 1.0000e+50, 0 + decimal.pow(9.99999e+99,0.5));
							}
							{
								use precision 9;
								AddTestCase('pwsx770:p9 r:HALF_EVEN (0 + decimal.pow(9.9997e+99,0.5)) inexact rounded', 9.99985000e+49, 0 + decimal.pow(9.9997e+99,0.5));
								AddTestCase('pwsx771:p9 r:HALF_EVEN (0 + decimal.pow(9.9998e+99,0.5)) inexact rounded', 9.99990000e+49, 0 + decimal.pow(9.9998e+99,0.5));
								AddTestCase('pwsx772:p9 r:HALF_EVEN (0 + decimal.pow(9.9999e+99,0.5)) inexact rounded', 9.99995000e+49, 0 + decimal.pow(9.9999e+99,0.5));
								AddTestCase('pwsx773:p9 r:HALF_EVEN (0 + decimal.pow(9.99991e+99,0.5)) inexact rounded', 9.99995500e+49, 0 + decimal.pow(9.99991e+99,0.5));
								AddTestCase('pwsx774:p9 r:HALF_EVEN (0 + decimal.pow(9.99994e+99,0.5)) inexact rounded', 9.99997000e+49, 0 + decimal.pow(9.99994e+99,0.5));
								AddTestCase('pwsx775:p9 r:HALF_EVEN (0 + decimal.pow(9.99995e+99,0.5)) inexact rounded', 9.99997500e+49, 0 + decimal.pow(9.99995e+99,0.5));
								AddTestCase('pwsx776:p9 r:HALF_EVEN (0 + decimal.pow(9.99999e+99,0.5)) inexact rounded', 9.99999500e+49, 0 + decimal.pow(9.99999e+99,0.5));
							}
							{
								use precision 20;
								AddTestCase('pwsx780:p20 r:HALF_EVEN (0 + decimal.pow(9.9997e+99,0.5)) inexact rounded', 9.9998499988749831247e+49, 0 + decimal.pow(9.9997e+99,0.5));
								AddTestCase('pwsx781:p20 r:HALF_EVEN (0 + decimal.pow(9.9998e+99,0.5)) inexact rounded', 9.9998999994999949999e+49, 0 + decimal.pow(9.9998e+99,0.5));
								AddTestCase('pwsx782:p20 r:HALF_EVEN (0 + decimal.pow(9.9999e+99,0.5)) inexact rounded', 9.9999499998749993750e+49, 0 + decimal.pow(9.9999e+99,0.5));
								AddTestCase('pwsx783:p20 r:HALF_EVEN (0 + decimal.pow(9.99991e+99,0.5)) inexact rounded', 9.9999549998987495444e+49, 0 + decimal.pow(9.99991e+99,0.5));
								AddTestCase('pwsx784:p20 r:HALF_EVEN (0 + decimal.pow(9.99994e+99,0.5)) inexact rounded', 9.9999699999549998650e+49, 0 + decimal.pow(9.99994e+99,0.5));
								AddTestCase('pwsx785:p20 r:HALF_EVEN (0 + decimal.pow(9.99995e+99,0.5)) inexact rounded', 9.9999749999687499219e+49, 0 + decimal.pow(9.99995e+99,0.5));
								AddTestCase('pwsx786:p20 r:HALF_EVEN (0 + decimal.pow(9.99999e+99,0.5)) inexact rounded', 9.9999949999987499994e+49, 0 + decimal.pow(9.99999e+99,0.5));
								// subnormals and underflows [these can only result when emax is < digits+1]
								// etiny = -(emax + (precision-1))
								// start with subnormal operands and normal results
							}
							{
								use precision 9;
								AddTestCase('pwsx800:p9 r:HALF_EVEN (0 + decimal.pow(1e-17,0.5)) inexact rounded', 3.16227766e-9, 0 + decimal.pow(1e-17,0.5));
								AddTestCase('pwsx801:p9 r:HALF_EVEN (0 + decimal.pow(10e-17,0.5)) inexact rounded', 1.00000000e-8, 0 + decimal.pow(10e-17,0.5));
							}
							{
								use precision 10;
								AddTestCase('pwsx802:p10 r:HALF_EVEN (0 + decimal.pow(10e-18,0.5)) inexact rounded', 3.162277660e-9, 0 + decimal.pow(10e-18,0.5));
								AddTestCase('pwsx803:p10 r:HALF_EVEN (0 + decimal.pow(1e-18,0.5)) inexact rounded', 1.000000000e-9, 0 + decimal.pow(1e-18,0.5));
							}
							{
								use precision 11;
								// the next test should be skipped for decnumber
								AddTestCase('pwsx805:p11 r:HALF_EVEN (0 + decimal.pow(10e-19,0.5)) inexact rounded', 1.0000000000e-9, 0 + decimal.pow(10e-19,0.5));
							}
							{
								use precision 12;
							}
							{
								use precision 13;
							}
							{
								use precision 14;
								// special values
								AddTestCase('pwsx820:p14 r:HALF_EVEN (0 + decimal.pow(decimal.POSITIVE_INFINITY,0.5))', decimal.POSITIVE_INFINITY, 0 + decimal.pow(decimal.POSITIVE_INFINITY,0.5));
								AddTestCase('pwsx821:p14 r:HALF_EVEN (0 + decimal.pow(decimal.NEGATIVE_INFINITY,0.5)) invalid_operation', NaN, 0 + decimal.pow(decimal.NEGATIVE_INFINITY,0.5));
								AddTestCase('pwsx822:p14 r:HALF_EVEN (0 + decimal.pow(NaN,0.5))', NaN, 0 + decimal.pow(NaN,0.5));
								AddTestCase('pwsx823:p14 r:HALF_EVEN (0 + decimal.pow(NaN,0.5)) invalid_operation', NaN, 0 + decimal.pow(NaN,0.5));
								// propagating nans
								AddTestCase('pwsx824:p14 r:HALF_EVEN (0 + decimal.pow(NaN,0.5)) invalid_operation', NaN, 0 + decimal.pow(NaN,0.5));
								AddTestCase('pwsx825:p14 r:HALF_EVEN (0 + decimal.pow(-NaN,0.5)) invalid_operation', -NaN, 0 + decimal.pow(-NaN,0.5));
								AddTestCase('pwsx826:p14 r:HALF_EVEN (0 + decimal.pow(NaN,0.5))', NaN, 0 + decimal.pow(NaN,0.5));
								AddTestCase('pwsx827:p14 r:HALF_EVEN (0 + decimal.pow(-NaN,0.5))', -NaN, 0 + decimal.pow(-NaN,0.5));
								AddTestCase('pwsx828:p14 r:HALF_EVEN (0 + decimal.pow(NaN,0.5))', NaN, 0 + decimal.pow(NaN,0.5));
								// null test
								AddTestCase('pwsx900:p14 r:HALF_EVEN (0 + decimal.pow(null,0.5))', 0, 0 + decimal.pow(null,0.5));
								}
							}
						}
					}
				}
			}
		}
	}
}
test();

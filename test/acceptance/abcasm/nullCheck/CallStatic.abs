/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/*
    Note:  The three bindings supplied (get,set,method) are valid and the
    default slot binding is not valid for callstatic.
*/

.script_info {
	init: .function_id(main)
	traits: {
		.trait { 
			kind: Trait_Getter 
			method: .function_id(staticGetter) 
			name:staticGetterBinding
			disp_id:0
		}

		.trait { 
			kind: Trait_Setter 
			method: .function_id(staticSetter) 
			name:staticSetterBinding
			disp_id:0
		}

		.trait { 
			kind: Trait_Method 
			method: .function_id(staticMethod) 
			name:staticMethodBinding
			disp_id:0
		}
	}
}
function main()
{
	getlocal0
    pushscope
    findproperty START 
    pushstring "CallStatic" 
    callpropvoid START 1

	getlocal0
	callstatic .function_id(staticMethod) 0
	pop

	getlocal0
	callstatic .function_id(staticGetter) 0
	pop

	getlocal0
	callstatic .function_id(staticSetter) 0
	pop

	findproperty END
    callpropvoid END 0
    returnvoid
}

function staticGetter()
{
	getlocal0
	pushscope

	findproperty PASS
	pushstring "get binding"
	callpropvoid PASS 1
	
	returnvoid
}

function staticSetter()
{
	getlocal0
	pushscope

	findproperty PASS
	pushstring "set binding"
	callpropvoid PASS 1
	
	returnvoid
}

function staticMethod()
{
	getlocal0
	pushscope

	findproperty PASS
	pushstring "method binding"
	callpropvoid PASS 1
	
	returnvoid
}
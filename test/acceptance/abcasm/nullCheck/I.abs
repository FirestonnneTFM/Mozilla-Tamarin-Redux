/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

function main() {
    getlocal0
    pushscope
    findproperty START 
    pushstring "Opcodes that start with the letter I" 
    callpropvoid START 1
    
    newfunction .function_id(runTest)
    getlocal0
    call 0
    
    newfunction .function_id(runTest1)
    getlocal0
    call 0
    
    findproperty END
    callpropvoid END 0
    returnvoid
}





function runTest()
{
    getlocal0
    pushscope

   
    pushnull
    setlocal1
    
    .try {
        pushstring "moo"
        pushnull
        in
        
        pop
        
        findproperty FAIL
        pushstring "in null"
        pushstring "exception should have been thrown: TypeError: Error #1009: Cannot access a property or method of a null object reference."
        getlocal1
        callpropvoid FAIL 3
        
        jump finished_in_null
    }
    .catch {
        getlocal0
        pushscope
        setlocal2   // save typeError
        findproperty COMPARE_TYPEERROR
        pushstring "in null"
        pushstring "TypeError: Error #1009" //Cannot access a property or method of a null object reference.  // expected
        getlocal2
        callpropvoid COMPARE_TYPEERROR 3
    }
    
    finished_in_null:

    findproperty COMPARE_STRICTEQ
    pushstring "inclocal int"
    pushint 1 // expected
    pushnull
    setlocal3
    inclocal 3
    getlocal3
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "inclocal_i null"
    pushint 1 // expected
    pushnull
    setlocal 7
    inclocal_i 7
    getlocal 7
    callpropvoid COMPARE_STRICTEQ 3

    findproperty COMPARE_STRICTEQ
    pushstring "increment null"
    pushint 1 // expected
    pushnull
    increment
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "increment_i null"
    pushint 1 // expected
    pushnull
    increment_i
    callpropvoid COMPARE_STRICTEQ 3
    
    
    // initproperty opcode not implemented: see https://bugzilla.mozilla.org/show_bug.cgi?id=491024
    /*
    .try {
        pushnull
        initproperty no_such_property
        
        findproperty FAIL
        pushstring "initproperty null"
        pushstring "exception should have been thrown: TypeError: Error #1009: Cannot access a property or method of a null object reference."
        getlocal1
        callpropvoid FAIL 3
        
        jump finished_initproperty_null
    }
    .catch {
        getlocal0
        pushscope
        setlocal2   // save typeError
        findproperty COMPARE_TYPEERROR
        pushstring "initproperty null"
        pushstring "TypeError: Error #1009" //Cannot access a property or method of a null object reference.  // expected
        getlocal2
        callpropvoid COMPARE_TYPEERROR 3
    }
    
    finished_initproperty_null:
    */
    returnvoid
}

function runTest1()
{
    getlocal0
    pushscope

    findproperty COMPARE_STRICTEQ
    pushstring "null instanceof Array"
    pushfalse // expected
    pushnull
    findproperty Array
    getproperty Array
    instanceof
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null instanceof Object"
    pushfalse // expected
    pushnull
    findproperty Object
    getproperty Object
    instanceof
    callpropvoid COMPARE_STRICTEQ 3
    
    .try {
        findproperty Array
        constructprop Array 0
        pushnull
        instanceof
        
        pop
        
        findproperty FAIL
        pushstring "Array instanceof null"
        pushstring "exception should have been thrown: TypeError: Error #1040: The right-hand side of instanceof must be a class or function."
        getlocal1
        callpropvoid FAIL 3
        
        jump finished_instanceof_null
    }
    .catch {
        getlocal0
        pushscope
        setlocal2   // save typeError
        findproperty COMPARE_TYPEERROR
        pushstring "Array instanceof null"
        pushstring "TypeError: Error #1040"   // expected
        getlocal2
        callpropvoid COMPARE_TYPEERROR 3
    }
    
    finished_instanceof_null:
    
    .try {
        pushnull
        pushnull
        instanceof
        
        pop
        
        findproperty FAIL
        pushstring "null instanceof null"
        pushstring "exception should have been thrown: TypeError: Error #1040: The right-hand side of instanceof must be a class or function."
        getlocal1
        callpropvoid FAIL 3
        
        jump finished_null_instanceof_null
        
    }
    .catch {
        getlocal0
        pushscope
        setlocal2   // save typeError
        findproperty COMPARE_TYPEERROR
        pushstring "null instanceof null"
        pushstring "TypeError: Error #1040"   // expected
        getlocal2
        callpropvoid COMPARE_TYPEERROR 3
        
    }
    
    finished_null_instanceof_null:
    
    
    findproperty COMPARE_STRICTEQ
    pushstring "null istype Object"
    pushfalse // expected
    pushnull
    istype Object
    callpropvoid COMPARE_STRICTEQ 3
    
    // Will never work in avm - see https://bugzilla.mozilla.org/show_bug.cgi?id=491065
    /*
    findproperty COMPARE_STRICTEQ
    pushstring "null istype Null"
    pushtrue // expected
    pushnull
    istype Null
    callpropvoid COMPARE_STRICTEQ 3
    */
    
    
    findproperty COMPARE_STRICTEQ
    pushstring "null istypelate Object"
    pushfalse // expected
    pushnull
    findproperty Object
    getproperty Object
    istypelate
    callpropvoid COMPARE_STRICTEQ 3
    
    
    .try {
        pushnull
        pushnull
        istypelate
        
        pop
        
        findproperty FAIL
        pushstring "null null istypelate"
        pushstring "exception should have been thrown: TypeError: Error #1009: Cannot access a property or method of a null object reference."
        getlocal1
        callpropvoid FAIL 3
        
        jump finished_null_null_istypelate
        
    }
    .catch {
        getlocal0
        pushscope
        setlocal2   // save typeError
        findproperty COMPARE_TYPEERROR
        pushstring "null null istypelate"
        pushstring "TypeError: Error #1009"   // expected
        getlocal2
        callpropvoid COMPARE_TYPEERROR 3
        
    }
    
    finished_null_null_istypelate:
    
    returnvoid
}

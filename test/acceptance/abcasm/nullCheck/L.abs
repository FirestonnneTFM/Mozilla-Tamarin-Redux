/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

function main() {
    getlocal0
    pushscope
    findproperty START 
    pushstring "instructions that start with the letter L" 
    callpropvoid START 1
    
    newfunction .function_id(runTest)
    getlocal0
    call 0
    
    newfunction .function_id(runTest1)
    getlocal0
    call 0
    
    findproperty END
    callpropvoid END 0
    returnvoid
}

function runTest()
{
    findproperty COMPARE_STRICTEQ
    pushstring "null lessequals null"
    pushtrue // expected
    pushnull
    pushnull
    lessequals
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "-1 lessequals null"
    pushtrue // expected
    pushint -1
    pushnull
    lessequals
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null lessequals -1"
    pushfalse // expected
    pushnull
    pushint -1
    lessequals
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null lessthan null"
    pushfalse // expected
    pushnull
    pushnull
    lessthan
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "-1 lessthan null"
    pushtrue // expected
    pushint -1
    pushnull
    lessthan
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null lessthan -1"
    pushfalse // expected
    pushnull
    pushint -1
    lessthan
    callpropvoid COMPARE_STRICTEQ 3
    
    returnvoid
}

function runTest1()
{
    getlocal0
    pushscope

    findproperty COMPARE_STRICTEQ
    pushstring "null lf32"
    pushint 0 // expected
    pushnull
    lf32
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null lf64"
    pushint 0 // expected
    pushnull
    lf64
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null li8"
    pushint 0 // expected
    pushnull
    li8
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null li16"
    pushint 0 // expected
    pushnull
    li16
    callpropvoid COMPARE_STRICTEQ 3
    
    findproperty COMPARE_STRICTEQ
    pushstring "null li32"
    pushint 0 // expected
    pushnull
    li32
    callpropvoid COMPARE_STRICTEQ 3
    
    
    // TODO: assembler support for lookupswitch
        
    findproperty COMPARE_STRICTEQ
    pushstring "lshift"
    pushint 0 // expected
    pushnull
    pushnull
    lshift
    callpropvoid COMPARE_STRICTEQ 3
    
        returnvoid
}

# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is [Open Source Virtual Machine].
#
# The Initial Developer of the Original Code is
# Adobe System Incorporated.
# Portions created by the Initial Developer are Copyright (C) 2007
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Adobe AS3 Team
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

import sys

############################################
####   Method to handle spy on Windows  ####
############################################


def WinSpyRoutine():
	try:
		import win32event
		import win32pipe	
		import win32file
	except ImportError:
		print "Error: You need the python win32 extensions installed"
		sys.exit(1)

	e = "MMgc::MemoryProfiler::DumpFatties"
	h = None
	try:
		h = win32event.OpenEvent(win32event.EVENT_MODIFY_STATE, False, e)
	except Exception:
		print "Error: No registered event: " + e
		sys.exit(1)

	win32event.SetEvent(h)

	pipe = "\\\\.\\pipe\MMgc_Spy" 
	readHandle = None
	while True:
		try:
			readHandle = win32file.CreateFile(pipe, win32file.GENERIC_READ, 0, None, win32file.OPEN_EXISTING, 0, None)
			win32pipe.WaitNamedPipe(pipe, 100)
		except Exception:
			pass
		if readHandle:
			break

	while True:
		try:
			data = win32file.ReadFile(readHandle, 128)
			sys.stdout.write(data[1])
		except:
			break


####################################################
####   Method to handle spy on Posix platform   ####
####################################################

def PosixSpyRoutine():
	import socket, sys

	s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
	s.connect("/tmp/MMgc_Spy")

	while True:
		data = s.recv(1024);
		if not data: break;
		sys.stdout.write(repr(data))

	s.close()

#########################
####   Main Program  ####
#########################

if  sys.platform == 'win32':
	WinSpyRoutine()
elif sys.platform == 'darwin': 
	PosixSpyRoutine()
else:
	print 'Error: unknown platform'


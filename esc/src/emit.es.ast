public var ast = 
{ 'ast_class': 'Program'
, 'packages': []
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Emit' } }
, { 'ast_class': 'NamespaceFixture'
, 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ABCEmitter' } }
, { 'ast_class': 'ClassFixture'
, 'cls': { 'ast_class': 'Cls'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ABCEmitter' }
, 'baseName': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object' }
, 'interfaceNames': []
, 'constructor': { 'ast_class': 'Ctor'
, 'settings': [ ]
, 'superArgs': [  ]
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'ABCEmitter' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCFile'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCConstantPool'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addConstants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Object_name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Object" } }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Array_name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Array" } }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'RegExp_name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "RegExp" } }
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'VoidType' } } } }
, 'classHead': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'instanceHead': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'file' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'constants' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'scripts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'newScript' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'newScript' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 's' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Script'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ThisExpr' }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scripts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Script'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalize' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'finalize' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'forEach'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'f'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scripts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'f' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'f' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'finalize'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object_name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Array_name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'RegExp_name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'meta_construct_name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'namespace' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'namespace' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'int_ns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'IntrinsicNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'int_ns' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "intrinsic" } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'on' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'OperatorNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'on' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented namespace OperatorNamespace" } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'PrivateNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_PrivateNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ProtectedNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_ProtectedNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'PublicNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'int_ns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'InternalNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'int_ns' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_PackageInternalNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'un' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'UserNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'un' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'un'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'an' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'AnonymousNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'an' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'an'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'imp_ns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ImportNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'imp_ns' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented namespace ImportNamespace" } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented namespace " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } }
,  ] }
,  ] } }
,  ] } }
,  ] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'NAMESPACE'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'NAMESPACE'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ns' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'flattenNamespaceSet' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'flattenNamespaceSet' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'new_nss' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'temp' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'temp' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'q' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'q' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'q'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'temp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'q'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'new_nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'temp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'q'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
,  ] } }
, 'labels': [] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'new_nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nss' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nss' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'new_nss' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'multiname' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'multiname' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'nss' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'FieldTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'ident' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'FieldTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'mname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'nss' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'ident' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Multiname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespaceset'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'flattenNamespaceSet'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'is_attr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'mname' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'mname' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'qname' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'qname' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'ns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'FieldTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'id' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'FieldTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'ns' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'id' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'QName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'is_attr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'qn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'qn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nameFromIdent' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'nameFromIdent' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'QName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_PackageNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } }
,  ] }
,  ] }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'id' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'id' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'multinameL' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'multinameL' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'MultinameL'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespaceset'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'flattenNamespaceSet'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'is_attr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nss' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'FieldTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nss' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nss'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nameFromIdentExpr' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'nameFromIdentExpr' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'id' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Identifier'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'id' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'multiname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'qi' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'QualifiedIdentifier'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'qi' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qi'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qual'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LexicalRef'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lr' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'AnonymousNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'lr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qi'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented: nameFromIdentExpr " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
,  ] } }
,  ] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'multiname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented: nameFromIdentExpr " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
,  ] } }
,  ] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'rtqname' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'rtqname' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'RTQName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'is_attr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ident' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'FieldTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ident' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'is_attr' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'typeFromTypeExpr' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'typeFromTypeExpr' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'tn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TypeName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'tn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Identifier'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'i' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'name' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'LogicalOr' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "String" } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Number" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Boolean" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "int" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "uint" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Object" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Array" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Class" } } } }
, 'e2': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Function" } } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] } }
, 'elseOpt': { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "string" } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "String" } }
,  ] }
,  ] } }
,  ] } }
, 'elseOpt': { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "boolean" } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Boolean" } }
,  ] }
,  ] } }
,  ] } }
, 'elseOpt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "warning: unknown type name " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': ", using Object" } } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Object" } }
,  ] }
,  ] } }
,  ] } } } } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
,  ] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'realTypeName' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'realTypeName' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'tn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TypeName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'tn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nameFromIdentExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'st' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'SpecialType'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'st' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented: realTypeName " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': ", using *" } } }
,  ] }
,  ] } }
,  ] } }
,  ] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'fixtureNameToName' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'fixtureNameToName' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'fn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'PropName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'tn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TempName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'tn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'qname'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'noNS' } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "$t" } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Internal error: not a valid fixture name" } }
,  ] } }
,  ] } }
,  ] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'fn' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'fn' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'fixtureTypeToType' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'fixtureTypeToType' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'fix'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'vf' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ValFixture'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'vf' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'NotEqual' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'vf'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'type'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } } }
, 'e2': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'typeFromTypeExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'vf'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'type'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'mf' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'MethodFixture'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'mf' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Unimplemented: fixtureTypeToType " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'x'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] } }
,  ] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'fix' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'fix' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'defaultLiteralExpr' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'defaultLiteralExpr' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'lit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ln' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralNull'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ln' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Null'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Null'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lu' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralUndefined'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lu' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ld' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralDouble'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ld' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'float64'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ld'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'doubleValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Double'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ld' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralDecimal'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ld' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'float64'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ld'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'decimalValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Double'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'li' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralInt'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'li' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'int32'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'li'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'intValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Integer'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lu' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralUInt'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lu' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint32'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'lu'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uintValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_UInteger'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lb' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralBoolean'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lb' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'lb'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'booleanValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_True'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e3': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_False'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ls' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralString'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ls' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stringUtf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ls'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'strValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Utf8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ln' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralNamespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ln' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'val' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ln'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'namespaceValue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'val'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'kind'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'CONSTANT_Namespace'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "le Default expression must be a constant value" } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'x'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
,  ] } }
,  ] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lit' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lit' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'defaultExpr' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'defaultExpr' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'expr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'le' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'le' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'defaultLiteralExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'le'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'literal'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LexicalRef'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'lr' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'lr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Identifier'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'i' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ident'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "undefined" } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'defaultLiteralExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'LiteralUndefined'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] }
,  ] } }
,  ] } }
, 'elseOpt': null }
,  ] } }
,  ] }
,  ] } }
,  ] }
, { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Default expression must be a constant value" } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'expr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'expr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'expr' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'scripts' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
,  ] }
, 'classType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'instanceType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Script' } }
, { 'ast_class': 'ClassFixture'
, 'cls': { 'ast_class': 'Cls'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Script' }
, 'baseName': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object' }
, 'interfaceNames': []
, 'constructor': { 'ast_class': 'Ctor'
, 'settings': [ ]
, 'superArgs': [  ]
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'Script' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'init'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Method'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCEmitter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCEmitter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'VoidType' } } } }
, 'classHead': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'instanceHead': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'init' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'newClass' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'newClass' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Emit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Class' } }
, 'args': [ { 'ast_class': 'ThisExpr' }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'basename'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'newFunction' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'newFunction' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Method'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'formals'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'initScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'formals' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'formals' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'addException' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'addException' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'init'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addException'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'addTrait' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'addTrait' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalize' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'finalize' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'id' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'init'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'finalize'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'si' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCScriptInfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'id'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'si'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addTrait'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addScript'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'si'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'id' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'si' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'classType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'instanceType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'Class' } }
, { 'ast_class': 'ClassFixture'
, 'cls': { 'ast_class': 'Cls'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'Class' }
, 'baseName': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object' }
, 'interfaceNames': []
, 'constructor': { 'ast_class': 'Ctor'
, 'settings': [ ]
, 'superArgs': [  ]
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'Class' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'script'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'basename'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'basename'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'asm' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'script'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'init'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'script' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'script' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'asm' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'VoidType' } } } }
, 'classHead': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'instanceHead': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'instance' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'cinit' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'getCInit' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'getCInit' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'cinit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'cinit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Method'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "$cinit" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] } }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'cinit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'getInstance' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'getInstance' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instance'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instance'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Instance'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'basename'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instance'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'addTrait' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'addTrait' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalize' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'finalize' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'instidx' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instance'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'finalize'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'clsinfo' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCClassInfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'clsinfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setCInit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'getCInit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'finalize'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PreIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'clsinfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addTrait'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'clsidx' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addClass'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'clsinfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assert'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'clsidx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instidx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'clsidx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'instidx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'clsinfo' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'clsidx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'instance' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
,  ] }
, 'classType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'instanceType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Instance' } }
, { 'ast_class': 'ClassFixture'
, 'cls': { 'ast_class': 'Cls'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Instance' }
, 'baseName': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object' }
, 'interfaceNames': []
, 'constructor': { 'ast_class': 'Ctor'
, 'settings': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'InstanceInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'InstanceInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'InstanceInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'basename'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
, ]
, 'superArgs': [  ]
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'Instance' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Script'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Script'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'VoidType' } } } }
, 'classHead': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'instanceHead': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'basename' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'iinit' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'setIInit' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'setIInit' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'iinit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'method'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'method' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'method' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'addTrait' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'addTrait' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalize' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'finalize' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'instinfo' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCInstanceInfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'basename'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instinfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setIInit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'iinit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instinfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addTrait'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addInstance'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'instinfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'instinfo' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
,  ] }
, 'classType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'instanceType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Method' } }
, { 'ast_class': 'ClassFixture'
, 'cls': { 'ast_class': 'Cls'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Method' }
, 'baseName': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object' }
, 'interfaceNames': []
, 'constructor': { 'ast_class': 'Ctor'
, 'settings': [ ]
, 'superArgs': [  ]
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'Method' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'AVM2Assembler'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'formals'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'initScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'formals'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'formals'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'initScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'initScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'standardPrologue'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_getlocal_0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_pushscope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCEmitter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCEmitter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'formals' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Array'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Array'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'standardPrologue' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 4 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'formals' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'standardPrologue' } }
, { 'ast_class': 'GetParam'
, 'n': 4 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'VoidType' } } } }
, 'classHead': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'instanceHead': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'formals' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'asm' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalized' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'defaults' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'exceptions' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'addTrait' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'addTrait' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'setDefaults' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'setDefaults' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'defaults'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'addException' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'addException' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exceptions'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalize' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'finalize' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'finalized'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'ReturnStmt'
, 'expr': null }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'finalized'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_returnvoid'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'meth' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addMethod'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCMethodInfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'formals'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'flags'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'defaults'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } }
,  ] }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'body' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCMethodBodyInfo'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'meth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setMaxStack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'maxStack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setLocalCount'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'maxLocal'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setInitScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'initScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setMaxScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'maxScope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setCode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'asm'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addTrait'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'traits'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exceptions'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addException'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exceptions'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'file'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'addMethodBody'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'body'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'meth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Abc' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Ast' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'meth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'body' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'traits' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'finalized' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'defaults' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralNull' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'exceptions' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
,  ] }
, 'classType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'instanceType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } } } ]
,  ]
, 'exprs': [  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ClassBlock'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ABCEmitter' }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
, { 'ast_class': 'ClassBlock'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Script' }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
, { 'ast_class': 'ClassBlock'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Emit' }
, 'id': 'Class' }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
, { 'ast_class': 'ClassBlock'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Instance' }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
, { 'ast_class': 'ClassBlock'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Method' }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
,  ] } }
,  ] } }
public var ast = 
{ 'ast_class': 'Program'
, 'packages': []
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'postfixExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'postfixExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::postfixExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'leftHandSideExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'PlusPlus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'postIncrOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'MinusMinus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'postDecrOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::postfixExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tsx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tsx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ndx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'unaryExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'unaryExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::unaryExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Delete' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'postfixExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'deleteOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Void' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'voidOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'TypeOf' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'typeOfOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'PlusPlus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'postfixExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'preIncrOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'MinusMinus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'postfixExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'preDecrOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Plus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'unaryPlusOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Minus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'unaryMinusOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BitwiseNot' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'bitwiseNotOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Not' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'logicalNotOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Type' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nullableTypeExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'TypeExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'postfixExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::unaryExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tsx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tsx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ndx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'multiplicativeExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'multiplicativeExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::multiplicativeExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BREAK' } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'tsx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'csx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scan'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tokenList'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scan'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'div'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tsx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } }
, { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'csx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'coordList'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'csx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TokenStream'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tsx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] } }
,  ] } }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Mult' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'timesOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Div' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'divideOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Remainder' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'remainderOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BreakStmt'
, 'ident': null }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unaryExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'op'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::multiplicativeExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'additiveExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'additiveExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::additiveExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'multiplicativeExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Plus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'plusOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Minus' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'minusOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BreakStmt'
, 'ident': null }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'multiplicativeExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'op'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } }
, { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::additiveExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'shiftExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'shiftExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::shiftExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'additiveExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LeftShift' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'leftShiftOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'RightShift' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'rightShiftOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'UnsignedRightShift' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'unsignedRightShiftOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BreakStmt'
, 'ident': null }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'additiveExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'op'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::shiftExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'relationalExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'relationalExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::relationalExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LessThan' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'lessOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'GreaterThan' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'greaterOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LessThanOrEqual' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'lessOrEqualOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'GreaterThanOrEqual' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'greaterOrEqualOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'In' } }
,  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'noIn'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'inOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'InstanceOf' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'shiftExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'instanceOfOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Is' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'typeExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryTypeExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'isOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'To' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'typeExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryTypeExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'toOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Cast' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'typeExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryTypeExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'castOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BreakStmt'
, 'ident': null }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::equalityExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'equalityExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'equalityExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::equalityExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'relationalExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'done' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Equal' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'equalOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'NotEqual' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'notEqualOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'StrictEqual' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'strictEqualOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'StrictNotEqual' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'strictNotEqualOp' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'done'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BreakStmt'
, 'ident': null }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'relationalExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'op'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::equalityExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'op' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'bitwiseAndExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'bitwiseAndExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::bitwiseAndExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'equalityExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BitwiseAnd' } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'equalityExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'bitwiseAndOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::bitwiseAndExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'bitwiseXorExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'bitwiseXorExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::bitwiseXorExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bitwiseAndExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BitwiseOr' } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bitwiseAndExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'bitwiseXorOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::bitwiseXorExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'bitwiseOrExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'bitwiseOrExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::bitwiseOrExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bitwiseXorExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BitwiseOr' } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bitwiseXorExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'bitwiseOrOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::bitwiseOrExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'logicalAndExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'logicalAndExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::logicalAndExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bitwiseOrExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LogicalAnd' } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bitwiseOrExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'logicalAndOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::logicalAndExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'logicalXorExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'logicalXorExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::logicalXorExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'logicalAndExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LogicalXor' } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'logicalAndExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'logicalXor' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::logicalXorExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'logicalOrExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'logicalOrExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::logicalOrExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'logicalXorExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'WhileStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LogicalOr' } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'logicalXorExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'BinaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'logicalOrOp' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::logicalOrExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nonAssignmentExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'nonAssignmentExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::nonAssignmentExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Let' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'letExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Yield' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'yieldExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'logicalOrExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'QuestionMark' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nonAssignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'eat'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Colon' } }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nonAssignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts3' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd3' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'TernaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::nonAssignmentExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts3' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd3' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'conditionalExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'conditionalExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::conditionalExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Let' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'letExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Yield' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'yieldExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'logicalOrExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'QuestionMark' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'eat'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Colon' } }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts3' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd3' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'TernaryExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::conditionalExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts3' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd3' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'assignmentExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'assignmentExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::assignmentExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'conditionalExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Assign' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'patternFromExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'desugarAssignmentPattern'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'anyType' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'assignOp' } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'fxtrs' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'expr' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'head' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'expr' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::assignmentExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'expr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'fxtrs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'expr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'head' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 2 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'expr' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'patternFromExpr' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'patternFromExpr' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LiteralExpr' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'literal' } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LiteralArray' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'arrayPatternFromLiteral'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'l'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LiteralObject' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'objectPatternFromLiteral'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'l'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "invalid lhs expr " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LexicalRef' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'SimplePattern'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'ObjectRef' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'SimplePattern'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "error patternFromExpr, unhandled expression kind " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'e'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] } }
,  ] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'p'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'e' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'arrayPatternFromLiteral' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'arrayPatternFromLiteral' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::arrayPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'elementListPatternFromLiteral'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'exprs' } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::arrayPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ArrayPattern'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'PATTERN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'elementListPatternFromLiteral' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'elementListPatternFromLiteral' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::elementListPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PreIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'patternFromExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ndx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::elementListPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPRS' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPRS' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'PATTERNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'objectPatternFromLiteral' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'objectPatternFromLiteral' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::objectPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'l'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'SwitchTypeStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'l'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'cases': [ { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LiteralObject' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'fieldListPatternFromLiteral'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'fields' } }
,  ] } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'Catch'
, 'param': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "error objectPatternFromLiteral " } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] } }
,  ] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::objectPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'p'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ObjectPattern'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'p'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'l' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'p' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'PATTERN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'fieldListPatternFromLiteral' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'fieldListPatternFromLiteral' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::fieldListPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PreIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'fieldPatternFromLiteral'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ndx'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::fieldListPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL_FIELDS' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL_FIELDS' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ndx' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'FIELD_PATTERNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'fieldPatternFromLiteral' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'fieldPatternFromLiteral' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::fieldPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'ident' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'patternFromExpr'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'expr' } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::fieldPatternFromLiteral " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'FieldPattern'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL_FIELD' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'LITERAL_FIELD' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nd' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'FIELD_PATTERN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'listExpression' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'listExpression' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::listExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listExpressionPrime'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unshift'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::listExpression " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'ListExpr' } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'BETA'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'beta' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'listExpressionPrime' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'listExpressionPrime' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'enter'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::listExpressionPrime " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hd'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Token'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'Comma' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assignmentExpression'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'tl'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'beta'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listExpressionPrime'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'unshift'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LetExpr'
, 'head': { 'fixtures': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
,  ] }
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'GetTemp'
, 'n': 0 }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': '1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  ] } } ]
,  ] }
,  ] } }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
,  ]
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'exit'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Parser::listExpressionPrime " } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ts2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nd2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
,  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ts' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'ts2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 0 }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, 'id': 'nd2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'ElementTypeRef'
, 'base': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'index': 1 }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [ { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'TOKENS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'QualifiedIdentifier'
, 'qual': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'Ast'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, { 'ast_class': 'IntrinsicNamespace' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Parse' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Lex' }
,  ]
,  [  ]
,  ] } }
, 'ident': 'EXPR' } }
,  ] } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
,  ] } }
,  ] } }
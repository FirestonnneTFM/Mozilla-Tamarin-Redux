public var ast = 
{ 'ast_class': 'Program'
, 'packages': []
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Asm' } }
, { 'ast_class': 'NamespaceFixture'
, 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Utf8' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Integer' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_UInt' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_PrivateNamespace' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Double' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_QName' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Namespace' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Multiname' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_False' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_True' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Null' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_QNameA' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_MultinameA' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQName' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQNameA' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQNameL' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQNameLA' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_NameL' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_NameLA' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_NamespaceSet' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_PackageNamespace' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_PackageInternalNS' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ProtectedNamespace' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ExplicitNamespace' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_StaticProtectedNS' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_MultinameL' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_MultinameLA' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassSealed' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassFinal' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassInterface' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassProtectedNs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Slot' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Method' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Getter' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Setter' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Class' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Function' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Const' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ATTR_Final' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ATTR_Override' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ATTR_Metadata' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_var' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_method' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_getter' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_setter' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_class' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_function' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Arguments' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Activation' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Needrest' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_HasOptional' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_IgnoreRest' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Native' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Setsdxns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_HasParamNames' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'AVM2Assembler' } }
, { 'ast_class': 'ClassFixture'
, 'cls': { 'ast_class': 'Cls'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'AVM2Assembler' }
, 'baseName': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Object' }
, 'interfaceNames': []
, 'constructor': { 'ast_class': 'Ctor'
, 'settings': [ ]
, 'superArgs': [  ]
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'AVM2Assembler' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nextTemp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'numberOfFormals'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ThisExpr' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'initScopeDepth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'constants' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'numberOfFormals' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'constants' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'numberOfFormals' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'initScopeDepth' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'VoidType' } } } }
, 'classHead': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'instanceHead': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'listify' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'indent' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'maxStack' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Get' }
, 'ident': 'maxStack' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'max_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'maxLocal' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Get' }
, 'ident': 'maxLocal' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nextTemp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'maxScope' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Get' }
, 'ident': 'maxScope' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'max_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'flags' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Get' }
, 'ident': 'flags' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'BitwiseXor' }
, 'e1': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'set_dxns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'METHOD_Setsdxns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'need_activation'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'METHOD_Activation'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'listL' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'listL' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listify'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'n'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'list1' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'list1' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listify'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'indent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'list2' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'list2' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listify'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'indent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'list3' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'list3' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listify'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'indent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v1' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v2' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'list5' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'list5' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listify'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'indent'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v4'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v1' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v2' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v3' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v4' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 4 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v1' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v2' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v3' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v4' } }
, { 'ast_class': 'GetParam'
, 'n': 4 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'pushOne' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'pushOne' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_dup' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_dup' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "dup" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2A' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getglobalscope' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getglobalscope' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getglobalscope" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x64' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getlocal_0' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getlocal_0' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getlocal_0" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD0' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getlocal_1' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getlocal_1' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getlocal_1" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD1' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getlocal_2' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getlocal_2' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getlocal_2" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD2' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getlocal_3' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getlocal_3' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getlocal_3" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD3' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_newactivation' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_newactivation' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'need_activation'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "newactivation" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x57' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushfalse' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushfalse' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushfalse" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x27' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushnan' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushnan' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushnan" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x28' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushnull' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushnull' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushnull" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x20' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushtrue' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushtrue' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushtrue" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x26' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushundefined' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushundefined' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushundefined" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x21' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'pushOneU30' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'pushOneU30' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getglobalslot' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getglobalslot' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getglobalslot" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x6E' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getlex' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getlex' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getlex" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x60' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getscopeobject' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getscopeobject' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getscopeobject" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x65' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_newcatch' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_newcatch' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "newcatch" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x5A' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_newfunction' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_newfunction' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "newfunction" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x40' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushdouble' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushdouble' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushdouble" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2F' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushint' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushint' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushint" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2D' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushnamespace' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushnamespace' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushnamespace" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x31' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushshort' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushshort' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushshort" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x25' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushstring' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushstring' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushstring" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2C' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushuint' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushuint' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushuint" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2E' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'startCatch' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'startCatch' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'dropOne' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'dropOne' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_add' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_add' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "add" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA0' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_add_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_add_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "add_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC5' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_astypelate' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_astypelate' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "astypelate" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x87' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_bitand' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_bitand' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "bitand" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA8' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_bitor' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_bitor' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "bitor" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA9' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_bitxor' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_bitxor' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "bitxor" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xAA' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_divide' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_divide' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "divide" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA3' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_dxnslate' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_dxnslate' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'set_dxns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "dxnslate" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x07' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_equals' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_equals' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Equals" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xAB' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_greaterequals' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_greaterequals' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "greaterequals" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xB0' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_greaterthan' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_greaterthan' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "greaterthan" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xAF' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_hasnext' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_hasnext' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "hasnext" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1F' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_in' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_in' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "in" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xB4' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_instanceof' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_instanceof' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "instanceof" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xB1' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_istypelate' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_istypelate' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "istypelate" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xB3' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_lessequals' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_lessequals' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "lessequals" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xAE' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_lessthan' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_lessthan' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "lessthan" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xAD' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_lshift' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_lshift' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "lshift" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA5' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_modulo' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_modulo' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "modulo" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA4' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_multiply' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_multiply' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "multiply" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA2' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_multiply_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_multiply_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "multiply_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC7' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_nextname' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_nextname' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "nextname" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1E' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_nextvalue' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_nextvalue' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "nextvalue" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x23' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pop' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pop' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pop" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x29' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushscope' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushscope' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushscope" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x30' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushwith' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushwith' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushwith" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1C' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_returnvalue' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_returnvalue' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "returnvalue" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x48' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_rshift' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_rshift' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "rshift" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA6' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setlocal_0' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setlocal_0' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setlocal_0" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD4' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setlocal_1' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setlocal_1' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setlocal_1" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD5' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setlocal_2' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setlocal_2' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setlocal_2" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD6' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setlocal_3' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setlocal_3' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setlocal_3" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xD7' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_strictequals' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_strictequals' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "strictequals" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xAC' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_subtract' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_subtract' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "subtract" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA1' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_subtract_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_subtract_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "subtract_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC6' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_throw' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_throw' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "throw" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x03' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_urshift' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_urshift' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOne'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "urshift" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xA7' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'dropOneU30' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'dropOneU30' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'v' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setglobalslot' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setglobalslot' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setglobalslot" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x6F' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'dropNone' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'dropNone' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_bitnot' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_bitnot' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "bitnot" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x97' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_checkfilter' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_checkfilter' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "checkfilter" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x78' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_coerce_a' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_coerce_a' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "coerce_a" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x82' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_coerce_s' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_coerce_s' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "coerce_s" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x85' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_convert_b' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_convert_b' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "convert_b" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x76' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_convert_d' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_convert_d' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "convert_d" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x75' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_convert_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_convert_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "convert_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x73' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_convert_o' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_convert_o' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "convert_o" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x77' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_convert_s' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_convert_s' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "convert_s" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x70' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_convert_u' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_convert_u' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "convert_u" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x74' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_decrement' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_decrement' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "decrement" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x93' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_decrement_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_decrement_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "decrement_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC1' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_esc_xattr' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_esc_xattr' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "esc_xattr" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x72' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_esc_xelem' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_esc_xelem' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "esc_xattr" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x71' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_increment' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_increment' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "increment" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x91' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_increment_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_increment_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "increment_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC0' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_negate' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_negate' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "negate" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x90' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_negate_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_negate_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "negate_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC4' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_nop' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_nop' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "nop" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x02' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_not' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_not' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "not" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x96' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_popscope' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_popscope' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "popscope" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1D' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_returnvoid' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_returnvoid' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "returnvoid" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x47' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_swap' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_swap' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "swap" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2B' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_typeof' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_typeof' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNone'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "typeof" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x95' } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'dropNoneU30' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'dropNoneU30' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'x'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'x'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'x' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_astype' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_astype' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "astype" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x86' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_coerce' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_coerce' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "coerce" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x80' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_debugfile' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_debugfile' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "debugfile" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xF1' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_debugline' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_debugline' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "debugline" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xF0' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'linenum'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'linenum' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'linenum' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_declocal' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_declocal' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "declocal" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x94' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_declocal_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_declocal_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "declocal_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC3' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_dxns' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_dxns' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'set_dxns'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "dxns" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x06' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getslot' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getslot' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getslot" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x6C' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_inclocal' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_inclocal' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "inclocal" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x92' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_inclocal_i' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_inclocal_i' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "inclocal_i" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xC2' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_istype' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_istype' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "istype" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xB2' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_kill' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_kill' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "kill" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x08' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_newclass' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_newclass' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropNoneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "newclass" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x58' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getlocal' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getlocal' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_getlocal_0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_getlocal_1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_getlocal_2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '3' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_getlocal_3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getlocal" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x62' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
,  ]
, 'labels': [] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setlocal' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setlocal' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'SwitchStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'cases': [ { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_setlocal_0'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_setlocal_1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_setlocal_2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '3' } }
,  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_setlocal_3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'BreakStmt'
, 'ident': null }
,  ] }
, { 'ast_class': 'Case'
, 'expr': null
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'dropOneU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setlocal" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x63' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
,  ]
, 'labels': [] }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'newLabel' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'newLabel' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nextLabel'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'relativeOffset' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'relativeOffset' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'NotEqual' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'int24'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'base'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, 'elseOpt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'backpatches'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralObject'
, 'fields': [ { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'loc'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'base'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'base'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, { 'ast_class': 'LiteralField'
, 'kind': { 'ast_class': 'Var' }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] }
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ]
, 'type': { 'ast_class': 'ObjectType'
, 'fields': [  ] } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'int24'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ] }
,  ] } }
,  ] } } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'base' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'base' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'jmp' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'jmp' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stk'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'undefined'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'newLabel'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'relativeOffset'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '3' } } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'stk' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'stk' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_label' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_label' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'here' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'define' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'undefined'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'define'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'newLabel'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } }
,  ] } }
,  ] } }
, 'elseOpt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assert'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] } } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'here'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'listL'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': ":   -- " } } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "/" } } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'scope'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'define'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x09' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list1'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "label" } }
,  ] }
,  ] } }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'here' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'define' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifeq' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifeq' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifeq" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x13' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifge' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifge' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifge" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x18' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifgt' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifgt' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifgt" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x17' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifle' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifle' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifle" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x16' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_iflt' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_iflt' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "iflt" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x15' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifne' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifne' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifne" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x14' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifnge' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifnge' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifnge" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0F' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifngt' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifngt' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifngt" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0E' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifnle' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifnle' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifnle" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0D' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifnlt' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifnlt' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifnlt" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0C' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifstricteq' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifstricteq' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifstricteq" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x19' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_ifstrictne' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_ifstrictne' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "ifstrictne" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1A' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_iffalse' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_iffalse' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "iffalse" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x12' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_iftrue' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_iftrue' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "iftrue" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x11' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_jump' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_jump' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'jmp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "jump" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x10' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_lookupswitch' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_lookupswitch' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assert'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assert'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Greater' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'default_label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'undefined'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'default_label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'newLabel'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'assert'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'StrictEqual' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'undefined'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'newLabel'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } }
,  ] } }
,  ] } }
, 'labels': [] }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "lookupswitch" } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'default_label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'map'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'map_func'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'base' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1B' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'relativeOffset'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'base'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'default_label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'relativeOffset'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'base'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'case_labels'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'default_label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'default_label' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'case_labels' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'default_label' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'case_labels' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'map_func' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'map_func' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'L'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'L' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'base' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'call' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'call' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'construct' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'construct' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_call' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_call' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'call'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "call" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x41' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_construct' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_construct' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'construct'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "construct" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x42' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_constructsuper' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_constructsuper' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "constructsuper" } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x49' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'callIDX' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'callIDX' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callmethod' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callmethod' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callIDX'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callmethod" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x43' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callstatic' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callstatic' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callIDX'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callstatic" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x44' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'callMN' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'callMN' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTNS' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTName' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'isVoid'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } }
,  ] }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list3'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "<NS>" } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } } }
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "<Name>" } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } } }
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'isVoid' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 4 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'isVoid' } }
, { 'ast_class': 'GetParam'
, 'n': 4 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTNS' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTName' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callsuper' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callsuper' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callMN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callsuper" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x45' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callproperty' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callproperty' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callMN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callproperty" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x46' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_constructprop' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_constructprop' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callMN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "constructprop" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x4A' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callproplex' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callproplex' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callMN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callproplex" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x4C' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callsupervoid' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callsupervoid' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callMN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callsupervoid" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x4E' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_callpropvoid' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_callpropvoid' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'callMN'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "callpropvoid" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x4F' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': true } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_debug' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_debug' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list5'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "debug" } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'debug_type'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'extra'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0xEF' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'debug_type'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'extra'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'debug_type' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'extra' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'debug_type' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'reg' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'extra' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [{ 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
,  ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'propU30' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'propU30' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTNS' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTName' } }
, { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'constants'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pushes'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pops'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTNS'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "<NS>" } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } } }
,  ] } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'TernaryExpr'
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'hasRTName'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "<Name>" } }
, 'e3': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } } }
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'opcode'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pops' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pushes' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 2 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 3 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 4 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'name' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pops' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'pushes' } }
, { 'ast_class': 'GetParam'
, 'n': 2 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'opcode' } }
, { 'ast_class': 'GetParam'
, 'n': 3 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 4 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTNS' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'hasRTName' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_deleteproperty' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_deleteproperty' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "deleteproperty" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x6A' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getdescendants' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getdescendants' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getdescendants" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x59' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getproperty' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getproperty' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getproperty" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x66' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_getsuper' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_getsuper' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "getsuper" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x04' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_findproperty' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_findproperty' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "findproperty" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x5E' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_findpropstrict' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_findpropstrict' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "findpropstrict" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x5D' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_initproperty' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_initproperty' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "initproperty" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x68' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setproperty' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setproperty' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setproperty" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x61' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setsuper' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setsuper' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'propU30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setsuper" } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x05' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_hasnext2' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_hasnext2' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x32' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'object_reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index_reg'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'object_reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index_reg' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'object_reg' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index_reg' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_newarray' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_newarray' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "newarray" } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x56' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_newobject' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_newobject' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
, 'e2': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Times' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "newobject" } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x55' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nargs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nargs' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_pushbyte' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_pushbyte' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "pushbyte" } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'b'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x24' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'b'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'b' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'b' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'I_setslot' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'I_setslot' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'stack'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'list2'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "setslot" } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint8'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x6D' } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'uint30'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'index'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'index' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'getTemp' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'getTemp' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Greater' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'freeTemps'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] }
, 'then': { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'freeTemps'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'pop'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, 'elseOpt': { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nextTemp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'killTemp' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'killTemp' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'freeTemps'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'push'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'I_kill'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 't'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 't' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'length' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Get' }
, 'ident': 'length' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'serialize' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'serialize' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'resolveBackpatches'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'serialize'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bs'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'bs' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'bs' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'resolveBackpatches' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'resolveBackpatches' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'i' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Less' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'backpatches'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'PostIncr' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'bp' } }
, { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'backpatches'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'ExpressionIdentifier'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'i'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Equal' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'UnaryExpr'
, 'op': { 'ast_class': 'UnaryMinus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] }
, 'then': { 'ast_class': 'ThrowStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "Missing definition for label " } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'name'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, 'elseOpt': null }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'v' } }
, { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'label'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'address'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'base'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'code'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'setInt24'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'bp'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'loc'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'v'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'ObjectRef'
, 'base': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'backpatches'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'length'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'i' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'bp' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'v' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'stack' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'stack' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'n'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } } }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Greater' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'max_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'then': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'max_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_stack_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'scope' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'scope' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'n'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } } }
,  ] } }
, { 'ast_class': 'IfStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Greater' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'max_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] }
, 'then': { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'max_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'current_scope_depth'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } } }
,  ] } }
, 'elseOpt': null }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'code' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'nextLabel' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'backpatches' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'current_scope_depth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'max_scope_depth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'current_stack_depth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'max_stack_depth' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'nextTemp' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'freeTemps' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'constants' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'set_dxns' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'need_activation' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'listify' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'indent' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "        " } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'code' } }
, { 'ast_class': 'NewExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'ABCByteStream'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [ { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, { 'ast_class': 'AnonymousNamespace'
, 'name': 'Util' }
,  ]
,  [  ]
,  ] } }
, 'args': [  ] } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'nextLabel' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1000' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'backpatches' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'current_scope_depth' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'max_scope_depth' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'current_stack_depth' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'max_stack_depth' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'freeTemps' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralArray'
, 'exprs': [  ]
, 'type': { 'ast_class': 'ArrayType'
, 'types': [  ] } } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'set_dxns' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Asm' }
, 'id': 'need_activation' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralBoolean'
, 'booleanValue': false } } ]
,  ] }
,  ] }
, 'classType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'instanceType': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } } } ]
,  ]
, 'exprs': [  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Utf8' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x01' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Integer' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x03' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_UInt' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x04' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_PrivateNamespace' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x05' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Double' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x06' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_QName' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x07' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Namespace' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x08' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Multiname' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x09' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_False' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0A' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_True' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0B' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_Null' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0C' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_QNameA' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0D' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_MultinameA' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0E' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQName' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x0F' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQNameA' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x10' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQNameL' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x11' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_RTQNameLA' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x12' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_NameL' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x13' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_NameLA' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x14' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_NamespaceSet' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x15' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_PackageNamespace' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x16' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_PackageInternalNS' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x17' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ProtectedNamespace' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x18' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ExplicitNamespace' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x19' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_StaticProtectedNS' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1A' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_MultinameL' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1B' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_MultinameLA' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1C' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassSealed' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x01' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassFinal' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x02' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassInterface' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x04' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'CONSTANT_ClassProtectedNs' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x08' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Slot' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Method' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Getter' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Setter' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '3' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Class' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '4' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Function' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '5' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'TRAIT_Const' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '6' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ATTR_Final' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x01' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ATTR_Override' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x02' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'ATTR_Metadata' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x04' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_var' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_method' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_getter' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '2' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_setter' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '3' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_class' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '4' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'SLOT_function' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '6' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Arguments' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x1' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Activation' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x2' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Needrest' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x4' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_HasOptional' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x8' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_IgnoreRest' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x10' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Native' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x20' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_Setsdxns' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x40' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'METHOD_HasParamNames' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0x80' } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ClassBlock'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'AVM2Assembler' }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] } }
,  ] } }
,  ] } }
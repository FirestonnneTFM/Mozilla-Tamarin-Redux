public var ast = 
{ 'ast_class': 'Program'
, 'packages': []
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Debug' } }
, { 'ast_class': 'NamespaceFixture'
, 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Debug' } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'Release' } }
, { 'ast_class': 'NamespaceFixture'
, 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' } } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Debug' }
, 'id': 'trace' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'trace' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nesting' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'arrows' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'arrows' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'str' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'str' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } } ]
,  ] }
,  ] } }
, { 'ast_class': 'ForStmt'
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'init': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } } ]
,  ] }
,  ] }
, 'cond': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Greater' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'n'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } }
,  ] }
, 'incr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'n'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'n'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] }
, 'stmt': { 'ast_class': 'BlockStmt'
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'str'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'str'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'c'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } } } }
,  ] } }
,  ] } }
, 'labels': [] }
, { 'ast_class': 'ReturnStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
, 'e2': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'str'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': " " } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'c' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'c' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'n' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'TypeName'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'string'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Debug' }
, 'id': 'enter' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'enter' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'arrows'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': ">" } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'a'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [{ 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } }
,  ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Debug' }
, 'id': 'exit' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'exit' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'print'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'CallExpr'
, 'expr': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'arrows'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'args': [ { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "<" } }
,  ] }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 's'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'a'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
,  ] }
,  ] } }
, { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [{ 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } }
,  ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, 'id': 'enter' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'enter' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Plus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [{ 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } }
,  ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, 'id': 'exit' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'exit' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'SetExpr'
, 'op': { 'ast_class': 'Assign' }
, 'le': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 're': { 'ast_class': 'BinaryExpr'
, 'op': { 'ast_class': 'Minus' }
, 'e1': { 'ast_class': 'LexicalRef'
, 'ident': { 'ast_class': 'Identifier'
, 'ident': 'nesting'
, 'nss': [  [ { 'ast_class': 'PublicNamespace'
, 'name': '' }
,  ]
,  [  ]
,  ] } }
, 'e2': { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '1' } } } }
,  ] } }
,  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 1 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
, { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'a' } }
, { 'ast_class': 'GetParam'
, 'n': 1 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [{ 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralString'
, 'strValue': "" } }
,  ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
, [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'AnonymousNamespace'
, 'name': 'Release' }
, 'id': 'trace' } }
, { 'ast_class': 'MethodFixture'
, 'func': { 'ast_class': 'Func'
, 'name': { 'kind': { 'ast_class': 'Ordinary' }
, 'ident': 'trace' }
, 'isNative': false
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [  ] }
, 'params': { 'fixtures': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
, [ { 'ast_class': 'TempName'
, 'index': 0 }
, { 'ast_class': 'ValFixture'
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': false } ]
,  ]
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'LetInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 's' } }
, { 'ast_class': 'GetParam'
, 'n': 0 } ]
,  ] }
,  ] }
, 'vars': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'defaults': [ ]
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } } }
, 'type': { 'ast_class': 'SpecialType'
, 'kind': { 'ast_class': 'AnyType' } }
, 'isReadOnly': true
, 'isOverride': false
, 'isFinal': false } ]
,  ]
, 'exprs': [  ] }
, 'block': { 'ast_class': 'Block'
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'stmts': [ { 'ast_class': 'ExprStmt'
, 'expr': { 'ast_class': 'ListExpr'
, 'exprs': [ { 'ast_class': 'InitExpr'
, 'target': { 'ast_class': 'VarInit' }
, 'head': { 'fixtures': [  ]
, 'exprs': [  ] }
, 'inits': [ [ { 'ast_class': 'PropName'
, 'name': { 'ns': { 'ast_class': 'PublicNamespace'
, 'name': '' }
, 'id': 'nesting' } }
, { 'ast_class': 'LiteralExpr'
, 'literal': { 'ast_class': 'LiteralDecimal'
, 'decimalValue': '0' } } ]
,  ] }
,  ] } }
,  ] } }
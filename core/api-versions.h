/* DO NOT EDIT THIS FILE!  It was generated by utils/apivergen.abc. */

/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License+"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL+"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#ifndef api_versions_H_
#define api_versions_H_

namespace avmplus {

enum ApiVersionSeries {
    kApiVersionSeries_AIR,
    kApiVersionSeries_FP
};

enum {
    kApiVersionSeries_count = 2
};

enum ApiVersion {
    kApiVersion_VM_ALLVERSIONS = 0,
    kApiVersion_AIR_1_0 = 1,
    kApiVersion_FP_10_0 = 2,
    kApiVersion_AIR_1_5 = 3,
    kApiVersion_AIR_1_5_1 = 4,
    kApiVersion_FP_10_0_32 = 5,
    kApiVersion_AIR_1_5_2 = 6,
    kApiVersion_FP_10_1 = 7,
    kApiVersion_AIR_2_0 = 8,
    kApiVersion_AIR_2_5 = 9,
    kApiVersion_FP_10_2 = 10,
    kApiVersion_AIR_2_6 = 11,
    kApiVersion_SWF_12 = 12,
    kApiVersion_AIR_2_7 = 13,
    kApiVersion_SWF_13 = 14,
    kApiVersion_AIR_3_0 = 15,
    kApiVersion_SWF_14 = 16,
    kApiVersion_AIR_3_1 = 17,
    kApiVersion_SWF_15 = 18,
    kApiVersion_AIR_3_2 = 19,
    kApiVersion_SWF_16 = 20,
    kApiVersion_AIR_3_3 = 21,
    kApiVersion_SWF_17 = 22,
    kApiVersion_AIR_3_4 = 23,
    kApiVersion_VM_INTERNAL = 24
};

enum {
    kApiVersion_count = 25
};

extern const char* const kApiVersionNames[kApiVersion_count];
extern uint32_t const kApiVersionSeriesMembership[kApiVersion_count];
extern ApiVersion const kApiVersionSeriesTransfer[kApiVersion_count][kApiVersionSeries_count];
extern ApiVersion const kApiVersionFirst[kApiVersionSeries_count];
extern ApiVersion const kApiVersionLatest[kApiVersionSeries_count];

}
#endif // api_versions_H_

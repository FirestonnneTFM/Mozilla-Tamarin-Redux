static state_t states[] = {
//n  s  t  g  f
{ 0, 0, 0, 0, 0 }, // Invalid
{ 0, 0, 0, 3, 0 }, //    OP_getlocal OP_getlocal OP_getlocal
{ 1, 0, 0, 2, 0 }, //    OP_getlocal OP_getlocal
{ 1, 0, 1, 1, 0 }, //    OP_getlocal
{ 0, 1, 0, 5, 3 }, //    OP_setlocal OP_getlocal
{ 1, 0, 2, 4, 0 }, //    OP_setlocal
};

static transition_t transitions[] = {
{ OP_getlocal, 1 },
{ OP_getlocal, 2 },
{ OP_getlocal, 4 },
};

static uint16 toplevel[] = {
0, 0, 0, 0, 0, 0, 0, 0, // -                      OP_bkpt                OP_nop                 OP_throw               OP_getsuper            OP_setsuper            OP_dxns                OP_dxnslate           
0, 0, 0, 0, 0, 0, 0, 0, // OP_kill                OP_label               -                      -                      OP_ifnlt               OP_ifnle               OP_ifngt               OP_ifnge              
0, 0, 0, 0, 0, 0, 0, 0, // OP_jump                OP_iftrue              OP_iffalse             OP_ifeq                OP_ifne                OP_iflt                OP_ifle                OP_ifgt               
0, 0, 0, 0, 0, 0, 0, 0, // OP_ifge                OP_ifstricteq          OP_ifstrictne          OP_lookupswitch        OP_pushwith            OP_popscope            OP_nextname            OP_hasnext            
0, 0, 0, 0, 0, 0, 0, 0, // OP_pushnull            OP_pushundefined       -                      OP_nextvalue           OP_pushbyte            OP_pushshort           OP_pushtrue            OP_pushfalse          
0, 0, 0, 0, 0, 0, 0, 0, // OP_pushnan             OP_pop                 OP_dup                 OP_swap                OP_pushstring          OP_pushint             OP_pushuint            OP_pushdouble         
0, 0, 0, 0, 0, 0, 0, 0, // OP_pushscope           OP_pushnamespace       OP_hasnext2            -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // OP_newfunction         OP_call                OP_construct           OP_callmethod          OP_callstatic          OP_callsuper           OP_callproperty        OP_returnvoid         
0, 0, 0, 0, 0, 0, 0, 0, // OP_returnvalue         OP_constructsuper      OP_constructprop       OP_callsuperid         OP_callproplex         OP_callinterface       OP_callsupervoid       OP_callpropvoid       
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      OP_applytype           -                      OP_newobject           OP_newarray            OP_newactivation      
0, 0, 0, 0, 0, 0, 0, 0, // OP_newclass            OP_getdescendants      OP_newcatch            -                      -                      OP_findpropstrict      OP_findproperty        OP_finddef            
0, 0, 3, 5, 0, 0, 0, 0, // OP_getlex              OP_setproperty         OP_getlocal            OP_setlocal            OP_getglobalscope      OP_getscopeobject      OP_getproperty         OP_getouterscope      
0, 0, 0, 0, 0, 0, 0, 0, // OP_initproperty        -                      OP_deleteproperty      -                      OP_getslot             OP_setslot             OP_getglobalslot       OP_setglobalslot      
0, 0, 0, 0, 0, 0, 0, 0, // OP_convert_s           OP_esc_xelem           OP_esc_xattr           OP_convert_i           OP_convert_u           OP_convert_d           OP_convert_b           OP_convert_o          
0, 0, 0, 0, 0, 0, 0, 0, // OP_checkfilter         -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // OP_coerce              OP_coerce_b            OP_coerce_a            OP_coerce_i            OP_coerce_d            OP_coerce_s            OP_astype              OP_astypelate         
0, 0, 0, 0, 0, 0, 0, 0, // OP_coerce_u            OP_coerce_o            -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // OP_negate              OP_increment           OP_inclocal            OP_decrement           OP_declocal            OP_typeof              OP_not                 OP_bitnot             
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      OP_concat              OP_add_d               -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // OP_add                 OP_subtract            OP_multiply            OP_divide              OP_modulo              OP_lshift              OP_rshift              OP_urshift            
0, 0, 0, 0, 0, 0, 0, 0, // OP_bitand              OP_bitor               OP_bitxor              OP_equals              OP_strictequals        OP_lessthan            OP_lessequals          OP_greaterthan        
0, 0, 0, 0, 0, 0, 0, 0, // OP_greaterequals       OP_instanceof          OP_istype              OP_istypelate          OP_in                  -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // OP_increment_i         OP_decrement_i         OP_inclocal_i          OP_declocal_i          OP_negate_i            OP_add_i               OP_subtract_i          OP_multiply_i         
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // OP_getlocal0           OP_getlocal1           OP_getlocal2           OP_getlocal3           OP_setlocal0           OP_setlocal1           OP_setlocal2           OP_setlocal3          
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      OP_abs_jump            OP_debug              
0, 0, 0, 0, 0, 0, 0, 0, // OP_debugline           OP_debugfile           OP_bkptline            OP_timestamp           -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      OP_ext_pushbits        OP_ext_push_doublebits OP_ext_get2locals      OP_ext_get3locals      OP_ext_storelocal      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, 0, 0, 0, 0, // -                      -                      -                      -                      -                      -                      -                      -                     
0, 0, 0, 0, // -                      -                      -                      -                     
};

bool Translator::commit(uint32 action)
{
    switch (action) {
    case 1:
        //AvmAssert(I[0][0] == OP_getlocal);
        if (I[0][1] < 4) {
            S[0] = OP_getlocal0 + I[0][1];
            R[0] = NEW_OPCODE(OP_getlocal0 + I[0][1]);
            return replace(1,1);
        }
        return false;
    case 2:
        //AvmAssert(I[0][0] == OP_getlocal && I[1][0] == OP_getlocal);
        if (I[0][1] < 65536 && I[1][1] < 65536) {
            S[0] = OP_ext_get2locals;
            R[0] = NEW_OPCODE(OP_ext_get2locals);
            R[1] = (I[1][1] << 16) | I[0][1];
            return replace(2,2);
        }
        return false;
    case 3:
        //AvmAssert(I[0][0] == OP_getlocal && I[1][0] == OP_getlocal && I[2][0] == OP_getlocal);
        if (I[0][1] < 1024 && I[1][1] < 1024 && I[2][1] < 1024) {
            S[0] = OP_ext_get3locals;
            R[0] = NEW_OPCODE(OP_ext_get3locals);
            R[1] = (I[2][1] << 20) | (I[1][1] << 10) | I[0][1];
            return replace(3,2);
        }
        return false;
    case 4:
        //AvmAssert(I[0][0] == OP_setlocal);
        if (I[0][1] < 4) {
            S[0] = OP_setlocal0 + I[0][1];
            R[0] = NEW_OPCODE(OP_setlocal0 + I[0][1]);
            return replace(1,1);
        }
        return false;
    case 5:
        //AvmAssert(I[0][0] == OP_setlocal && I[1][0] == OP_getlocal);
        if (I[0][1] == I[1][1]) {
            S[0] = OP_ext_storelocal;
            R[0] = NEW_OPCODE(OP_ext_storelocal);
            R[1] = I[0][1];
            return replace(2,2);
        }
        return false;
    default:
        AvmAssert(!"Should not happen");
        return false;
    }
}

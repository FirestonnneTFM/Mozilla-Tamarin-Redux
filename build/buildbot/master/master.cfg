# -*- python -*-
# ex: set syntax=python:
#  ***** BEGIN LICENSE BLOCK *****
#  Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
#  The contents of this file are subject to the Mozilla Public License Version
#  1.1 (the "License"); you may not use this file except in compliance with
#  the License. You may obtain a copy of the License at
#  http://www.mozilla.org/MPL/
# 
#  Software distributed under the License is distributed on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
#  for the specific language governing rights and limitations under the
#  License.
# 
#  The Original Code is [Open Source Virtual Machine.].
# 
#  The Initial Developer of the Original Code is
#  Adobe System Incorporated.
#  Portions created by the Initial Developer are Copyright (C) 2009
#  the Initial Developer. All Rights Reserved.
# 
#  Contributor(s):
#    Adobe AS3 Team
# 
#  Alternatively, the contents of this file may be used under the terms of
#  either the GNU General Public License Version 2 or later (the "GPL"), or
#  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
#  in which case the provisions of the GPL or the LGPL are applicable instead
#  of those above. If you wish to allow use of your version of this file only
#  under the terms of either the GPL or the LGPL, and not to allow others to
#  use your version of this file under the terms of the MPL, indicate your
#  decision by deleting the provisions above and replace them with the notice
#  and other provisions required by the GPL or the LGPL. If you do not delete
#  the provisions above, a recipient may use your version of this file under
#  the terms of any one of the MPL, the GPL or the LGPL.
# 
#  ***** END LICENSE BLOCK ****

from buildbot.process import factory
from buildbot.steps.source import Mercurial
from buildbot.steps.shell import *
from custom.buildbot_ext.steps.shellAddons import *
from buildbot.steps.trigger import Trigger



MASTER_IP   = "10.171.22.12"
SLAVEPORT   = 9750
WEBPORT_PUB = 8750
WEBPORT_INT = 8760
PBLISTENER  = 8755

c = BuildmasterConfig = {}

####### BUILDSLAVES
from buildbot.buildslave import BuildSlave
c['slaves'] = [BuildSlave("asteamwin2", "asteam"),
               BuildSlave("asteamwin3", "asteam"),
               BuildSlave("asteamwin11", "asteam"),
               BuildSlave("asteamwin11-sb", "asteam"),

               BuildSlave("asteammac1", "asteam"),
               BuildSlave("asteammac1-64bit", "asteam"),
               BuildSlave("asteammac4", "asteam"),
               BuildSlave("asteammac6", "asteam"),
               BuildSlave("asteammac9", "asteam"),
               BuildSlave("asteammac10", "asteam"),
               BuildSlave("tamarin-xserve", "asteam"),
               BuildSlave("tamarin-xserve2", "asteam"),
            
               BuildSlave("asteammac5-64bit", "asteam"),

               BuildSlave("asteamlin1", "asteam"),
               BuildSlave("asteamlin5", "asteam"),

               BuildSlave("asteamsol4", "asteam"),
               BuildSlave("asteamsol1", "asteam"),

               BuildSlave("asteamwin1", "asteam"),
               BuildSlave("asteammac2", "asteam"),
               BuildSlave("asteammac7", "asteam"),
               BuildSlave("asteammac3", "asteam"),
               BuildSlave("asteamlin4", "asteam"),
               BuildSlave("asteamwin5", "asteam"),
               BuildSlave("asteamlin9", "asteam"),

               BuildSlave("asteamwin10", "asteam"),
               BuildSlave("asteamwin12", "asteam"),
               BuildSlave("asteamwin13", "asteam"),

               BuildSlave("asteamwin19", "asteam"),
               BuildSlave("asteamwin20", "asteam"),
              ]

c['slavePortnum'] = SLAVEPORT


####### CHANGESOURCES
from buildbot.changes.pb import PBChangeSource
c['change_source'] = PBChangeSource()


c['schedulers'] = []
c['builders'] = []


# Setup the tamarin-redux-argo builders
from argo import *
c['builders'].extend(argo.builders)
c['schedulers'].extend(argo.schedulers)

# Setup the tamarin-redux builders
from tamarinredux import *
c['builders'].extend(tamarinredux.builders)
c['schedulers'].extend(tamarinredux.schedulers)

# setup the sandbox builders
from sandbox import *
c['builders'].extend(sandbox.builders)
c['schedulers'].extend(sandbox.schedulers)


####### STATUS TARGETS
c['status'] = []

from buildbot.status import html
c['status'].append(html.WebStatus(WEBPORT_PUB, allowForce=False))
c['status'].append(html.WebStatus(http_port="tcp:%s:interface=%s" % (WEBPORT_INT, MASTER_IP), allowForce=True))

from custom.buildbot_ext.status import custommail
c['status'].append(custommail.CustomMail(branch="tamarin-redux-argo",
            fromaddr="buildbot@adobe.com",
            extraRecipients=["VMBuildbotNotifications@adobe.com"], 
            relayhost='inner-relay-1.corp.adobe.com',
            mode='failing',
            sendToInterestedUsers=True,
            lookup="",
            schedulerGroups = [argo.compile, argo.smoke, argo.test],
            schedulerGroupsSendFirst = 1
            ))
            
# Also call the custommail MailNotifier when builds pass (mode=all)
# This is done so that any buildsteps were failing but are now passing get cleared
# in the buildinfo.pck file.  There should be NO receipients for this (unless someone wants all build emails)
# With no extraRecipients defined, and sendToInterestedUsers=False, this doesn't actually send
# any mail to anybody.
# TODO: Move this out of the mail code and into its own module
c['status'].append(custommail.CustomMail(branch="tamarin-redux-argo",
            fromaddr="buildbot@adobe.com",
            extraRecipients=[], 
            relayhost='inner-relay-1.corp.adobe.com',
            mode='all',
            sendToInterestedUsers=False,
            lookup=""))




c['status'].append(custommail.CustomMail(branch="tamarin-redux",
            fromaddr="buildbot@adobe.com",
            extraRecipients=["VMBuildbotNotifications@adobe.com"], 
            relayhost='inner-relay-1.corp.adobe.com',
            mode='failing',
            sendToInterestedUsers=True,
            lookup="",
            schedulerGroups = [tamarinredux.compile, tamarinredux.smoke, tamarinredux.test, tamarinredux.performance, tamarinredux.deep],
            schedulerGroupsSendFirst = 1
            ))
            
# Also call the custommail MailNotifier when builds pass (mode=all)
# This is done so that any buildsteps were failing but are now passing get cleared
# in the buildinfo.pck file.  There should be NO receipients for this (unless someone wants all build emails)
# With no extraRecipients defined, and sendToInterestedUsers=False, this doesn't actually send
# any mail to anybody.
# TODO: Move this out of the mail code and into its own module
c['status'].append(custommail.CustomMail(branch="tamarin-redux",
            fromaddr="buildbot@adobe.com",
            extraRecipients=[], 
            relayhost='inner-relay-1.corp.adobe.com',
            mode='all',
            sendToInterestedUsers=False,
            lookup=""))


# For sandbox builds only notify user
c['status'].append(custommail.CustomMail(branch="sandbox",
            fromaddr="buildbot@adobe.com",
            relayhost='inner-relay-1.corp.adobe.com',
            mode='failing',
            sendToInterestedUsers=True,
            lookup="",
            schedulerGroups = [sandbox.compile, sandbox.smoke, sandbox.test],
            schedulerGroupsSendFirst = 1
            ))


# PBListener is used for the jabberbot client
from custom.buildbot_ext.status.client import PBListener
c['status'].append(PBListener(8755,'asteam','asteam', [tamarinredux.deep]))

####### PROJECT IDENTITY
c['projectName'] = "Tamarin"
c['projectURL'] = "http://www.mozilla.org/projects/tamarin/"
c['buildbotURL'] = "http://tamarin-builds.mozilla.org/tamarin-redux/"


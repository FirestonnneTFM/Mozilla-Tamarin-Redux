/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is [Open Source Virtual Machine.].
 *
 * The Initial Developer of the Original Code is
 * Adobe System Incorporated.
 * Portions created by the Initial Developer are Copyright (C) 2004-2011
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Adobe AS3 Team
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
 /*! \page callsupervoid 

\addindex callsupervoid


\section callsupervoid callsupervoid

\subsection operation Operation

Call a method on a base class, discarding the return value.

\subsection format Format

\code
callsupervoid 
index 
arg_count
\endcode

\subsection forms Forms
\code
callsuper = 78 (0x4e)
\endcode
\subsection stack Stack

\code
..., receiver, [ns], [name], arg1, ..., argn => .
\endcode

\subsection description Description

arg_count is a u30 that is the number of arguments present on the stack. The number of 
arguments specified by arg_count are popped off the stack and saved.

index is a u30 that must be an index into the multiname constant pool. If the multiname at 
that index is a runtime multiname the name and/or namespace will also appear on the stack so 
that the multiname can be constructed correctly at runtime.

receiver is the object to invoke the method on.

The base class of receiver is determined and the method indicated by the multiname is 
resolved in the declared traits of the base class. The method is invoked with the 
arguments receiver, arg1, ..., argn. The first argument will be used as the “this” 
value for the method. The result of the method is discarded.

\subsection rt_execeptions Runtime exceptions

A TypeError is thrown if receiver is null or undefined. 

An ArgumentError is thrown if the number of arguments does not match the expected
number of arguments for the method.

\subsection notes Notes

None.

*/

